Return-Path: <openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org>
X-Original-To: lists+openwrt-devel@lfdr.de
Delivered-To: lists+openwrt-devel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id A9E991761D8
	for <lists+openwrt-devel@lfdr.de>; Mon,  2 Mar 2020 19:04:41 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:Subject:MIME-Version:Message-Id:Date:To
	:From:Reply-To:Content-ID:Content-Description:Resent-Date:Resent-From:
	Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:References:
	List-Owner; bh=1j28UolRB82oSnr02PzveBEjRkUdC0KqNGM+Z7n7mDk=; b=VyjpwmljEERALe
	26bGLmVfIfpzYwyi3nIeAkna/TZlJ9BlM4cheH0/FR8sBd4qmRamRTCZQCDOpJPAAFN7gW3Pu3fnS
	UGY+NhNOgTbbZuhMXtxm0a1D4W2AigU9eFJkvo9CyXkMJ+c79Ml30wlFQyHNWmLzpBjhFSDu95JUx
	1sOKqXw6z55YJzVU93L3Z9YwkVZ7wuSR2sVl1P4XqNhjKhx/CSevgxaspO52Amzr5has+9J5Woi1R
	lQ6fgSxAfzmrvN2TpmRbl2+oZw/bDvMvLSqIpiNn4ZvYSFd2kLb/7AVlTnjavAAVfRHw2351kK55v
	VMw+TR5S+0GM+8ksFbww==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1j8pQj-0000tF-LC; Mon, 02 Mar 2020 18:04:37 +0000
Received: from smtp-out.xnet.cz ([178.217.244.18])
 by bombadil.infradead.org with esmtps (Exim 4.92.3 #3 (Red Hat Linux))
 id 1j8pQH-0000Sd-39
 for openwrt-devel@lists.openwrt.org; Mon, 02 Mar 2020 18:04:12 +0000
Received: from meh.true.cz (meh.true.cz [108.61.167.218])
 (Authenticated sender: petr@true.cz)
 by smtp-out.xnet.cz (Postfix) with ESMTPSA id D7EE6416E;
 Mon,  2 Mar 2020 19:04:05 +0100 (CET)
Received: by meh.true.cz (OpenSMTPD) with ESMTP id 4b31f5f8;
 Mon, 2 Mar 2020 19:03:52 +0100 (CET)
From: =?UTF-8?q?Petr=20=C5=A0tetiar?= <ynezz@true.cz>
To: openwrt-devel@lists.openwrt.org
Date: Mon,  2 Mar 2020 18:42:54 +0100
Message-Id: <20200302174256.3238-1-ynezz@true.cz>
MIME-Version: 1.0
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20200302_100409_436877_28D207C0 
X-CRM114-Status: GOOD (  21.24  )
X-Spam-Score: 0.0 (/)
X-Spam-Report: SpamAssassin version 3.4.3 on bombadil.infradead.org summary:
 Content analysis details:   (0.0 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -0.0 RCVD_IN_DNSWL_NONE     RBL: Sender listed at https://www.dnswl.org/,
 no trust [178.217.244.18 listed in list.dnswl.org]
 0.0 SPF_NONE               SPF: sender does not publish an SPF Record
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
Subject: [OpenWrt-Devel] [PATCH 1/3] uboot-imx6: bump to 2020.01 and refresh
 patches
X-BeenThere: openwrt-devel@lists.openwrt.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <openwrt-devel.lists.openwrt.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/openwrt-devel>, 
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/openwrt-devel/>
List-Post: <mailto:openwrt-devel@lists.openwrt.org>
List-Help: <mailto:openwrt-devel-request@lists.openwrt.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/openwrt-devel>,
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=subscribe>
Cc: Vladimir Vid <vladimir.vid@sartura.hr>,
 =?UTF-8?q?Petr=20=C5=A0tetiar?= <ynezz@true.cz>,
 Tim Harvey <tharvey@gateworks.com>,
 Koen Vandeputte <koen.vandeputte@ncentric.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "openwrt-devel" <openwrt-devel-bounces@lists.openwrt.org>
Errors-To: openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org

VXBkYXRlIFUtQm9vdCB0byBsYXRlc3QgcmVsZWFzZSwgcmVtb3ZlIGAxMDAtd2FuZGJvYXJkLWVu
YWJsZS1maXQucGF0Y2hgCmFzIEZJVCBzdXBwb3J0IHdhcyBhZGRlZCBpbiBjb21taXQgNWI4NTg1
ODI1MTI4ICgid2FuZGJvYXJkOiBBZGQgRklUCmltYWdlIHN1cHBvcnQiKS4KClJld29yayBgMTEw
LW14NmN1Ym94aS1tbWMtZmFsbGJhY2sucGF0Y2hgIGludG8gdHdvIHBhdGNoZXMgYXMgdGhlcmUg
d2FzCm5ldyBjb25maWcgb3B0aW9uIGBDT05GSUdfU1BMX0ZPUkNFX01NQ19CT09UYCBhZGRlZCB1
cHN0cmVhbSB3aGljaApzaG91bGQgcHJvdmlkZSB0aGUgc2FtZSBmdW5jdGlvbmFsaXR5IGFzIHRo
ZSBwcmV2aW91cyBwYXRjaCBodW5rLgoKTW92aW5nIEFwYWxpcyB0b3dhcmRzIGdlbmVyaWMgZGlz
dHJvX2Jvb3RjbWQuCgpDYzogVmxhZGltaXIgVmlkIDx2bGFkaW1pci52aWRAc2FydHVyYS5ocj4K
Q2M6IFRpbSBIYXJ2ZXkgPHRoYXJ2ZXlAZ2F0ZXdvcmtzLmNvbT4KQ2M6IEtvZW4gVmFuZGVwdXR0
ZSA8a29lbi52YW5kZXB1dHRlQG5jZW50cmljLmNvbT4KU2lnbmVkLW9mZi1ieTogUGV0ciDFoHRl
dGlhciA8eW5lenpAdHJ1ZS5jej4KLS0tCiBwYWNrYWdlL2Jvb3QvdWJvb3QtaW14Ni9NYWtlZmls
ZSAgICAgICAgICAgICAgfCAgIDQgKy0KIC4uLmVmY29uZmlnLWVuYWJsZS1zb21lLXVzZWZ1bC1j
b21tYW5kcy5wYXRjaCB8ICAzOSArKysrKysKIC4uLnMtTWFrZS10aGUtYm9vdC1wcm9jZXNzLW1v
cmUtZ2VuZXJpYy5wYXRjaCB8IDEyMyAtLS0tLS0tLS0tLS0tLS0tLS0KIC4uLi9wYXRjaGVzLzEw
MC13YW5kYm9hcmQtZW5hYmxlLWZpdC5wYXRjaCAgICB8ICAxNyAtLS0KIC4uLi9wYXRjaGVzLzEx
MC1teDZjdWJveGktbW1jLWZhbGxiYWNrLnBhdGNoICB8ICAxMyArLQogLi4uMS1teDZjdWJveGlf
ZGVmY29uZmlnLWZvcmNlLW1tYy1ib290LnBhdGNoIHwgIDIzICsrKysKIDYgZmlsZXMgY2hhbmdl
ZCwgNjUgaW5zZXJ0aW9ucygrKSwgMTU0IGRlbGV0aW9ucygtKQogY3JlYXRlIG1vZGUgMTAwNjQ0
IHBhY2thZ2UvYm9vdC91Ym9vdC1pbXg2L3BhdGNoZXMvMDAwMS1hcGFsaXNfaW14Nl9kZWZjb25m
aWctZW5hYmxlLXNvbWUtdXNlZnVsLWNvbW1hbmRzLnBhdGNoCiBkZWxldGUgbW9kZSAxMDA2NDQg
cGFja2FnZS9ib290L3Vib290LWlteDYvcGF0Y2hlcy8wMDAxLWlteDYtYXBhbGlzLU1ha2UtdGhl
LWJvb3QtcHJvY2Vzcy1tb3JlLWdlbmVyaWMucGF0Y2gKIGRlbGV0ZSBtb2RlIDEwMDY0NCBwYWNr
YWdlL2Jvb3QvdWJvb3QtaW14Ni9wYXRjaGVzLzEwMC13YW5kYm9hcmQtZW5hYmxlLWZpdC5wYXRj
aAogY3JlYXRlIG1vZGUgMTAwNjQ0IHBhY2thZ2UvYm9vdC91Ym9vdC1pbXg2L3BhdGNoZXMvMTEx
LW14NmN1Ym94aV9kZWZjb25maWctZm9yY2UtbW1jLWJvb3QucGF0Y2gKCmRpZmYgLS1naXQgYS9w
YWNrYWdlL2Jvb3QvdWJvb3QtaW14Ni9NYWtlZmlsZSBiL3BhY2thZ2UvYm9vdC91Ym9vdC1pbXg2
L01ha2VmaWxlCmluZGV4IDE5M2EzNWQyN2NiMC4uM2Y2YmIxYzVkZTEwIDEwMDY0NAotLS0gYS9w
YWNrYWdlL2Jvb3QvdWJvb3QtaW14Ni9NYWtlZmlsZQorKysgYi9wYWNrYWdlL2Jvb3QvdWJvb3Qt
aW14Ni9NYWtlZmlsZQpAQCAtNywxMCArNywxMCBAQAogCiBpbmNsdWRlICQoVE9QRElSKS9ydWxl
cy5tawogCi1QS0dfVkVSU0lPTjo9MjAxOS4wNAorUEtHX1ZFUlNJT046PTIwMjAuMDEKIFBLR19S
RUxFQVNFOj0xCiAKLVBLR19IQVNIOj03NmI3NzcyZDE1NmIzZGRkNzY0NGM4YTE3MzYwODFlNTVi
Nzg4Mjg1MzdmZjcxNDA2NWQyMWRiYWRlMjI5YmVmCitQS0dfSEFTSDo9YWE0NTNjNjAzMjA4YjFi
MjdiZDAzNTI1Nzc1YTdmNzliNDQzYWRlYzU3N2ZkYzZlOGYwNjk3NDAyNWExMzVmMQogCiBpbmNs
dWRlICQoSU5DTFVERV9ESVIpL3UtYm9vdC5tawogaW5jbHVkZSAkKElOQ0xVREVfRElSKS9wYWNr
YWdlLm1rCmRpZmYgLS1naXQgYS9wYWNrYWdlL2Jvb3QvdWJvb3QtaW14Ni9wYXRjaGVzLzAwMDEt
YXBhbGlzX2lteDZfZGVmY29uZmlnLWVuYWJsZS1zb21lLXVzZWZ1bC1jb21tYW5kcy5wYXRjaCBi
L3BhY2thZ2UvYm9vdC91Ym9vdC1pbXg2L3BhdGNoZXMvMDAwMS1hcGFsaXNfaW14Nl9kZWZjb25m
aWctZW5hYmxlLXNvbWUtdXNlZnVsLWNvbW1hbmRzLnBhdGNoCm5ldyBmaWxlIG1vZGUgMTAwNjQ0
CmluZGV4IDAwMDAwMDAwMDAwMC4uMThhZDJkNjZkMzI2Ci0tLSAvZGV2L251bGwKKysrIGIvcGFj
a2FnZS9ib290L3Vib290LWlteDYvcGF0Y2hlcy8wMDAxLWFwYWxpc19pbXg2X2RlZmNvbmZpZy1l
bmFibGUtc29tZS11c2VmdWwtY29tbWFuZHMucGF0Y2gKQEAgLTAsMCArMSwzOSBAQAorRnJvbSA2
MzBiMzljNDZiMjlkZTE4NzQxNDljNmIyYzE4YzY0OTY2YTBmYWJmIE1vbiBTZXAgMTcgMDA6MDA6
MDAgMjAwMQorRnJvbTogPT9VVEYtOD9xP1BldHI9MjA9QzU9QTB0ZXRpYXI/PSA8eW5lenpAdHJ1
ZS5jej4KK0RhdGU6IFN1biwgMSBNYXIgMjAyMCAyMjo0NzozMSArMDEwMAorU3ViamVjdDogW1BB
VENIXSBhcGFsaXNfaW14Nl9kZWZjb25maWc6IGVuYWJsZSBzb21lIHVzZWZ1bCBjb21tYW5kcwor
TUlNRS1WZXJzaW9uOiAxLjAKK0NvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD1VVEYt
OAorQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogOGJpdAorCitwYXJ0aXRpb24gdGFibGUgaW5m
bywgRVhUNCB3cml0ZSBzdXBwb3J0LCBzdXBwb3J0IGZvciBGQVQgYW5kIGdlbmVyaWMgRlMKK2Nv
bW1hbmRzIGxpa2UgbG9hZC9scyB0aGF0IHdvcmsgZm9yIG11bHRpcGxlIEZTIHR5cGVzLgorCitT
aWduZWQtb2ZmLWJ5OiBQZXRyIMWgdGV0aWFyIDx5bmV6ekB0cnVlLmN6PgorLS0tCisgY29uZmln
cy9hcGFsaXNfaW14Nl9kZWZjb25maWcgfCA1ICsrKysrCisgMSBmaWxlIGNoYW5nZWQsIDUgaW5z
ZXJ0aW9ucygrKQorCitkaWZmIC0tZ2l0IGEvY29uZmlncy9hcGFsaXNfaW14Nl9kZWZjb25maWcg
Yi9jb25maWdzL2FwYWxpc19pbXg2X2RlZmNvbmZpZworaW5kZXggMGQxMWFiNTNkNjYzLi5iYmIz
ZWMxYWE1NTQgMTAwNjQ0CistLS0gYS9jb25maWdzL2FwYWxpc19pbXg2X2RlZmNvbmZpZworKysr
IGIvY29uZmlncy9hcGFsaXNfaW14Nl9kZWZjb25maWcKK0BAIC00Myw2ICs0Myw3IEBAIENPTkZJ
R19DTURfR1BJTz15CisgQ09ORklHX0NNRF9HUFQ9eQorIENPTkZJR19DTURfSTJDPXkKKyBDT05G
SUdfQ01EX01NQz15CisrQ09ORklHX0NNRF9QQVJUPXkKKyBDT05GSUdfQ01EX1VTQj15CisgQ09O
RklHX0NNRF9VU0JfU0RQPXkKKyBDT05GSUdfQ01EX1VTQl9NQVNTX1NUT1JBR0U9eQorQEAgLTUy
LDYgKzUzLDEwIEBAIENPTkZJR19DTURfUE1JQz15CisgQ09ORklHX0NNRF9SRUdVTEFUT1I9eQor
IENPTkZJR19PRl9DT05UUk9MPXkKKyBDT05GSUdfREVGQVVMVF9ERVZJQ0VfVFJFRT0iaW14Ni1h
cGFsaXMiCisrQ09ORklHX0NNRF9FWFQ0PXkKKytDT05GSUdfQ01EX0VYVDRfV1JJVEU9eQorK0NP
TkZJR19DTURfRkFUPXkKKytDT05GSUdfQ01EX0ZTX0dFTkVSSUM9eQorIENPTkZJR19FTlZfSVNf
SU5fTU1DPXkKKyBDT05GSUdfU1lTX1JFTE9DX0dEX0VOVl9BRERSPXkKKyBDT05GSUdfRU5WX1ZB
UlNfVUJPT1RfUlVOVElNRV9DT05GSUc9eQpkaWZmIC0tZ2l0IGEvcGFja2FnZS9ib290L3Vib290
LWlteDYvcGF0Y2hlcy8wMDAxLWlteDYtYXBhbGlzLU1ha2UtdGhlLWJvb3QtcHJvY2Vzcy1tb3Jl
LWdlbmVyaWMucGF0Y2ggYi9wYWNrYWdlL2Jvb3QvdWJvb3QtaW14Ni9wYXRjaGVzLzAwMDEtaW14
Ni1hcGFsaXMtTWFrZS10aGUtYm9vdC1wcm9jZXNzLW1vcmUtZ2VuZXJpYy5wYXRjaApkZWxldGVk
IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggNGRlOGVkZTM5Zjc0Li4wMDAwMDAwMDAwMDAKLS0tIGEv
cGFja2FnZS9ib290L3Vib290LWlteDYvcGF0Y2hlcy8wMDAxLWlteDYtYXBhbGlzLU1ha2UtdGhl
LWJvb3QtcHJvY2Vzcy1tb3JlLWdlbmVyaWMucGF0Y2gKKysrIC9kZXYvbnVsbApAQCAtMSwxMjMg
KzAsMCBAQAotRnJvbSA0MmNjMmNmZmI2ZDU1MGZiYjIxZGFkMDMzZDI1NjRkNGRhNTcxMDE1IE1v
biBTZXAgMTcgMDA6MDA6MDAgMjAwMQotRnJvbTogPT9VVEYtOD9xP1BldHI9MjA9QzU9QTB0ZXRp
YXI/PSA8eW5lenpAdHJ1ZS5jej4KLURhdGU6IFNhdCwgMSBEZWMgMjAxOCAxMjo0NjozNyArMDEw
MAotU3ViamVjdDogW1BBVENIXSBpbXg2OiBhcGFsaXM6IE1ha2UgdGhlIGJvb3QgcHJvY2VzcyBt
b3JlIGdlbmVyaWMKLU1JTUUtVmVyc2lvbjogMS4wCi1Db250ZW50LVR5cGU6IHRleHQvcGxhaW47
IGNoYXJzZXQ9VVRGLTgKLUNvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDhiaXQKLQotSSdtIHBy
ZXBhcmluZyBzdXBwb3J0IGZvciBBcGFsaXMgaW14NiBib2FyZHMgaW4gT3BlbldydCBhbmQgSSd2
ZSBlbmRlZAotdXAgd2l0aCBxdWl0ZSBodWdlIHBhdGNoc2V0IGFnYWluc3QgdXBzdHJlYW0gVS1C
b290IDIwMTguMDMsIHNvIEknbQotdHJ5aW5nIHRvIHByb3Bvc2UgbW9yZSBnZW5lcmljIHdheSBv
ZiBib290IHByb2Nlc3MgaGFuZGxpbmcuCi0KLUluIE9wZW5XcnQgd2UgdXN1YWxseSBoYXZlIGtl
cm5lbCwgZHRicyBhbmQgVS1Cb290IGJvb3Qgc2NyaXB0IGluIGJvb3QKLXBhcnRpdGlvbiB3aXRo
IGV4dDRmcywgc28gZm9yIHNvbWUgdXNlIGNhc2VzIGl0IHdvdWxkIGJlIGhhbmR5IHRvIGJlCi1h
YmxlIHRvIHJlcGxhY2Ugc29tZSBvZiB0aGUgZmlsZXMgaW4gdGhlIGJvb3QgcGFydGlvbiwgdGhh
dCdzIHdoeSBJJ3ZlCi1hZGRlZCB3cml0ZSBzdXBwb3J0IHRvIHRoZSBleHQ0LgotCi1JJ3ZlIGFk
ZGVkIGBzZXRfYmxrY250YCBlbnZpcm9ubWVudCB2YXJpYWJsZSB3aGljaCBpcyBuZWVkZWQgZm9y
IGV2ZXJ5Ci1gbW1jIHdyaXRlYCBjb21tYW5kIGFzIHdlIG5lZWQgdG8gYWx3YXlzIHNwZWNpZnkg
c2l6ZSBpbiBibG9jayBjb3VudC4KLVRoaXMgaXMgY29weSZwYXN0ZWQgZnJvbSBvZmZpY2lhbCBU
b3JhZGV4J3MgZmxhc2hpbmcgc2NyaXB0cywgc28gYWxsIHRoZQotY3JlZGl0cyBmb3IgdGhpcyB3
b3JrIGJlbG9uZ3MgdG8gdGhlbS4KLQotQ3VycmVudGx5IHRoZSByb290ZnMgbG9jYXRpb24gaXMg
cGFzc2VkIHZpYSBtbWNibGsgbnVtYmVyIGFuZCB0aGUKLXByb2JsZW0gd2l0aCB0aGlzIGFwcHJv
YWNoIGlzIHRoYXQgdGhlIG1tY2JsayBudW1iZXIgZm9yIHRoZSBib290IGRldmljZQotY2hhbmdl
cyBkZXBlbmRpbmcgb24gdGhlIGtlcm5lbCB2ZXJzaW9uIGFuZCBpbXg2IFNvQyB0eXBlLiAgSW4g
b3JkZXIgdG8KLWF2b2lkIHN1Y2ggaXNzdWVzLCB1c2UgdGhlIFVVSUQgbWV0aG9kIHRvIHNwZWNp
ZnkgdGhlIHJvb3RmcyBsb2NhdGlvbi4KLQotSSd2ZSBhZGRlZCBuZXcgYm9vdCBzZXF1ZW5jZSwg
d2hlcmUgd2UgZmlyc3QgdHJ5IHRvIGxvYWQgYW5kIHJ1biBib290Ci1zY3JpcHQgZGVmaW5lZCBp
biB0aGUgbmV3IGBzY3JpcHRgIHZhcmlhYmxlLCBzbyB0aGUgYm9vdCBwcm9jZXNzIGNvdWxkCi1i
ZSBtb3JlIGdlbmVyaWMgYW5kIG92ZXJyaWRkZW4gYnkgdGhlIGRpc3Ryby4gV2hlbiB0aGUgYm9v
dCBzY3JpcHQgaXNuJ3QKLWxvYWRlZCwgaXQgd2lsbCB1c2UgdGhlIHByZXZpb3VzIGJvb3Qgc2Vx
dWVuY2Ugc28gaXQgc2hvdWxkIGJlIGJhY2t3YXJkCi1jb21wYXRpYmxlLgotCi1Gb3IgdGhlIHJl
Y292ZXJ5IHB1cnBvc2VzIGFuZCBiZXR0ZXIgZW5kIHVzZXIgZXhwZXJpZW5jZSBJJ3ZlIGFkZGVk
IGJvb3QKLWZyb20gU0RQIGFzIHRoZSBsYXN0IGJvb3QgY29tbWFuZCBpZiBldmVyeSBvdGhlciBi
b290IG9wdGlvbiBmYWlscy4gSQotcGxhbiB0byB1c2UgU0RQIGFzIG9mZmljaWFsIGZsYXNoaW5n
L3JlY292ZXJ5IHByb2NlZHVyZSBpbiBPcGVuV3J0IGZvcgotQXBhbGlzIGlteDYgYm9hcmRzLgot
Ci1JJ3ZlIGNvcHkmcGFzdGVkIGFsbW9zdCBldmVyeXRoaW5nIGZyb20gdGhlIGBmMDg2ODEyYSBt
eDZzeHNhYnJlc2Q6IFVzZQotUEFSVFVVSUQgdG8gc3BlY2lmeSB0aGUgcm9vdGZzIGxvY2F0aW9u
YCBjb21taXQsIHNvIGNyZWRpdHMgZm9yIHRoZSByZXN0Ci1vZiB0aGlzIHBhdGNoIGJlbG9uZ3Mg
dG8gRmFiaW8uCi0KLUNjOiBTdGVmYW4gQWduZXIgPHN0ZWZhbi5hZ25lckB0b3JhZGV4LmNvbT4K
LUNjOiBNYXggS3J1bW1lbmFjaGVyIDxtYXgua3J1bW1lbmFjaGVyQHRvcmFkZXguY29tPgotU2ln
bmVkLW9mZi1ieTogUGV0ciDFoHRldGlhciA8eW5lenpAdHJ1ZS5jej4KLS0tLQotIGNvbmZpZ3Mv
YXBhbGlzX2lteDZfZGVmY29uZmlnIHwgIDIgKysKLSBpbmNsdWRlL2NvbmZpZ3MvYXBhbGlzX2lt
eDYuaCB8IDI2ICsrKysrKysrKysrKysrKysrKysrKy0tLS0tCi0gMiBmaWxlcyBjaGFuZ2VkLCAy
MyBpbnNlcnRpb25zKCspLCA1IGRlbGV0aW9ucygtKQotCi0tLS0gYS9jb25maWdzL2FwYWxpc19p
bXg2X2RlZmNvbmZpZwotKysrIGIvY29uZmlncy9hcGFsaXNfaW14Nl9kZWZjb25maWcKLUBAIC00
MCw2ICs0MCw3IEBAIENPTkZJR19DTURfREZVPXkKLSBDT05GSUdfQ01EX0dQSU89eQotIENPTkZJ
R19DTURfSTJDPXkKLSBDT05GSUdfQ01EX01NQz15Ci0rQ09ORklHX0NNRF9QQVJUPXkKLSBDT05G
SUdfQ01EX1VTQj15Ci0gQ09ORklHX0NNRF9VU0JfU0RQPXkKLSBDT05GSUdfQ01EX1VTQl9NQVNT
X1NUT1JBR0U9eQotQEAgLTQ5LDYgKzUwLDcgQEAgQ09ORklHX0NNRF9QSU5HPXkKLSBDT05GSUdf
Q01EX0JNUD15Ci0gQ09ORklHX0NNRF9DQUNIRT15Ci0gQ09ORklHX0NNRF9FWFQ0PXkKLStDT05G
SUdfQ01EX0VYVDRfV1JJVEU9eQotIENPTkZJR19DTURfRkFUPXkKLSBDT05GSUdfQ01EX0ZTX0dF
TkVSSUM9eQotIENPTkZJR19FTlZfSVNfSU5fTU1DPXkKLS0tLSBhL2luY2x1ZGUvY29uZmlncy9h
cGFsaXNfaW14Ni5oCi0rKysgYi9pbmNsdWRlL2NvbmZpZ3MvYXBhbGlzX2lteDYuaAotQEAgLTEz
OCw5ICsxMzgsOSBAQAotIAkiaW14NnEtY29saWJyaS1jYW0tZXZhbC12My5kdGIgZmF0IDAgMSIK
LSAKLSAjZGVmaW5lIEVNTUNfQk9PVENNRCBcCi0tCSJlbW1jYXJncz1pcD1vZmYgcm9vdD0vZGV2
L21tY2JsazBwMiBydyxub2F0aW1lIHJvb3Rmc3R5cGU9ZXh0MyAiIFwKLSsJImVtbWNhcmdzPWlw
PW9mZiByb290PVBBUlRVVUlEPSR7dXVpZH0gcncsbm9hdGltZSByb290ZnN0eXBlPWV4dDMgIiBc
Ci0gCQkicm9vdHdhaXRcMCIgXAotLQkiZW1tY2Jvb3Q9cnVuIHNldHVwOyAiIFwKLSsJImVtbWNi
b290PXJ1biBzZXR1cDsgcnVuIGZpbmR1dWlkOyIgXAotIAkJInNldGVudiBib290YXJncyAke2Rl
ZmFyZ3N9ICR7ZW1tY2FyZ3N9ICR7c2V0dXBhcmdzfSAiIFwKLSAJCSIke3ZpZGFyZ3N9OyBlY2hv
IEJvb3RpbmcgZnJvbSBpbnRlcm5hbCBlTU1DIGNoaXAuLi47ICIJXAotIAkJInJ1biBlbW1jZHRi
bG9hZDsgbG9hZCBtbWMgMDoxICR7a2VybmVsX2FkZHJfcn0gIiBcCi1AQCAtMTk3LDEwICsxOTcs
MTcgQEAKLSAjZGVmaW5lIEZEVF9GSUxFICJpbXg2cS1hcGFsaXNfdjFfMC1ldmFsLmR0YiIKLSAj
ZW5kaWYKLSAjZGVmaW5lIENPTkZJR19FWFRSQV9FTlZfU0VUVElOR1MgXAotLQkiYm9vdGNtZD1y
dW4gZW1tY2Jvb3QgOyBlY2hvIDsgZWNobyBlbW1jYm9vdCBmYWlsZWQgOyAiIFwKLSsJInNjcmlw
dD1ib290LnNjclwwIiBcCi0rCSJmaW5kdXVpZD1wYXJ0IHV1aWQgbW1jIDA6MiB1dWlkXDAiIFwK
LSsJImxvYWRib290c2NyaXB0PSIgXAotKwkJImxvYWQgbW1jIDA6MSAke2xvYWRhZGRyfSAke3Nj
cmlwdH07XDAiIFwKLSsJImJvb3RzY3JpcHQ9ZWNobyBSdW5uaW5nIGJvb3RzY3JpcHQgZnJvbSBt
bWMgLi4uOyAiIFwKLSsJCSJzb3VyY2VcMCIgXAotKwkiYm9vdGNtZF9kZWZhdWx0PXJ1biBlbW1j
Ym9vdCA7IGVjaG8gOyBlY2hvIGVtbWNib290IGZhaWxlZCA7ICIgXAotIAkJInJ1biBuZnNib290
IDsgZWNobyA7IGVjaG8gbmZzYm9vdCBmYWlsZWQgOyAiIFwKLSAJCSJ1c2Igc3RhcnQgOyIgXAot
LQkJInNldGVudiBzdGRvdXQgc2VyaWFsLHZnYSA7IHNldGVudiBzdGRpbiBzZXJpYWwsdXNia2Jk
XDAiIFwKLSsJCSJzZXRlbnYgc3Rkb3V0IHNlcmlhbCx2Z2EgOyBzZXRlbnYgc3RkaW4gc2VyaWFs
LHVzYmtiZDsiIFwKLSsJCSJzZHAgMFwwIiBcCi0gCSJib290X2ZpbGU9dUltYWdlXDAiIFwKLSAJ
ImNvbnNvbGU9dHR5bXhjMFwwIiBcCi0gCSJkZWZhcmdzPWVuYWJsZV93YWl0X21vZGU9b2ZmIHZt
YWxsb2M9NDAwTVwwIiBcCi1AQCAtMjI4LDcgKzIzNSwxNiBAQAotIAkidmlkYXJncz1teGNfaGRt
aS5vbmx5X2NlYT0xICIgXAotIAkJInZpZGVvPW14Y2ZiMDpkZXY9aGRtaSwxOTIweDEwODBNQDYw
LGlmPVJHQjI0ICIgXAotIAkJInZpZGVvPW14Y2ZiMTpvZmYgdmlkZW89bXhjZmIyOm9mZiB2aWRl
bz1teGNmYjM6b2ZmICIgXAotLQkJImZibWVtPTMyTVwwICIKLSsJCSJmYm1lbT0zMk1cMCAiIFwK
LSsJInNldF9ibGtjbnQ9c2V0ZXhwciBibGtjbnQgJHtmaWxlc2l6ZX0gKyAweDFmZiAmJiBzZXRl
eHByIGJsa2NudCAke2Jsa2NudH0gLyAweDIwMFwwIgotKwotKyNkZWZpbmUgQ09ORklHX0JPT1RD
T01NQU5EIFwKLSsJICAgIm1tYyBkZXYgMDsiIFwKLSsJICAgImlmIHJ1biBsb2FkYm9vdHNjcmlw
dDsgdGhlbiAiIFwKLSsJCSAgICJydW4gYm9vdHNjcmlwdDsgIiBcCi0rCSAgICJlbHNlICIgXAot
KwkJICAgInJ1biBib290Y21kX2RlZmF1bHQ7ICIgXAotKwkgICAiZmk7ICIKLSAKLSAvKiBNaXNj
ZWxsYW5lb3VzIGNvbmZpZ3VyYWJsZSBvcHRpb25zICovCi0gI3VuZGVmIENPTkZJR19TWVNfQ0JT
SVpFCi0tLSAKLTEuOS4xCi0KZGlmZiAtLWdpdCBhL3BhY2thZ2UvYm9vdC91Ym9vdC1pbXg2L3Bh
dGNoZXMvMTAwLXdhbmRib2FyZC1lbmFibGUtZml0LnBhdGNoIGIvcGFja2FnZS9ib290L3Vib290
LWlteDYvcGF0Y2hlcy8xMDAtd2FuZGJvYXJkLWVuYWJsZS1maXQucGF0Y2gKZGVsZXRlZCBmaWxl
IG1vZGUgMTAwNjQ0CmluZGV4IDJmZDIwN2UxMWM4Ny4uMDAwMDAwMDAwMDAwCi0tLSBhL3BhY2th
Z2UvYm9vdC91Ym9vdC1pbXg2L3BhdGNoZXMvMTAwLXdhbmRib2FyZC1lbmFibGUtZml0LnBhdGNo
CisrKyAvZGV2L251bGwKQEAgLTEsMTcgKzAsMCBAQAotLS0tIGEvY29uZmlncy93YW5kYm9hcmRf
ZGVmY29uZmlnCi0rKysgYi9jb25maWdzL3dhbmRib2FyZF9kZWZjb25maWcKLUBAIC0zMCw3ICsz
MCw3IEBAIENPTkZJR19DTURfSTJDPXkKLSBDT05GSUdfQ01EX01NQz15Ci0gQ09ORklHX0NNRF9T
QVRBPXkKLSBDT05GSUdfQ01EX1VTQj15Ci0tQ09ORklHX0NNRF9DQUNIRT15Ci0rIyBDT05GSUdf
Q01EX0NBQ0hFIGlzIG5vdCBzZXQKLSBDT05GSUdfQ01EX0VYVDRfV1JJVEU9eQotIENPTkZJR19F
TlZfSVNfSU5fTU1DPXkKLSBDT05GSUdfRU5WX1ZBUlNfVUJPT1RfUlVOVElNRV9DT05GSUc9eQot
QEAgLTQ0LDMgKzQ0LDUgQEAgQ09ORklHX1VTQj15Ci0gQ09ORklHX1ZJREVPPXkKLSAjIENPTkZJ
R19WSURFT19TV19DVVJTT1IgaXMgbm90IHNldAotIENPTkZJR19PRl9MSUJGRFQ9eQotK0NPTkZJ
R19GSVQ9eQotK0NPTkZJR19GSVRfVkVSQk9TRT15CmRpZmYgLS1naXQgYS9wYWNrYWdlL2Jvb3Qv
dWJvb3QtaW14Ni9wYXRjaGVzLzExMC1teDZjdWJveGktbW1jLWZhbGxiYWNrLnBhdGNoIGIvcGFj
a2FnZS9ib290L3Vib290LWlteDYvcGF0Y2hlcy8xMTAtbXg2Y3Vib3hpLW1tYy1mYWxsYmFjay5w
YXRjaAppbmRleCAyYjJmZGU1ZWM5YTYuLjExMWUxYjk4MDkxOCAxMDA2NDQKLS0tIGEvcGFja2Fn
ZS9ib290L3Vib290LWlteDYvcGF0Y2hlcy8xMTAtbXg2Y3Vib3hpLW1tYy1mYWxsYmFjay5wYXRj
aAorKysgYi9wYWNrYWdlL2Jvb3QvdWJvb3QtaW14Ni9wYXRjaGVzLzExMC1teDZjdWJveGktbW1j
LWZhbGxiYWNrLnBhdGNoCkBAIC0xLDYgKzEsNiBAQAogLS0tIGEvYm9hcmQvc29saWRydW4vbXg2
Y3Vib3hpL214NmN1Ym94aS5jCiArKysgYi9ib2FyZC9zb2xpZHJ1bi9teDZjdWJveGkvbXg2Y3Vi
b3hpLmMKLUBAIC0yOTAsNiArMjkwLDEyIEBAIHN0YXRpYyB2b2lkIHNldHVwX2lvbXV4X2VuZXQo
dm9pZCkKK0BAIC0yOTIsNiArMjkyLDEyIEBAIHN0YXRpYyB2b2lkIHNldHVwX2lvbXV4X2VuZXQo
dm9pZCkKICAJdWRlbGF5KDEwMCk7CiAgfQogIApAQCAtMTMsMTQgKzEzLDMgQEAKICBpbnQgYm9h
cmRfcGh5X2NvbmZpZyhzdHJ1Y3QgcGh5X2RldmljZSAqcGh5ZGV2KQogIHsKICAJaWYgKHBoeWRl
di0+ZHJ2LT5jb25maWcpCi0tLS0gYS9hcmNoL2FybS9tYWNoLWlteC9zcGwuYwotKysrIGIvYXJj
aC9hcm0vbWFjaC1pbXgvc3BsLmMKLUBAIC0xNzYsNyArMTc2LDcgQEAgaW50IGdfZG5sX2JpbmRf
Zml4dXAoc3RydWN0IHVzYl9kZXZpY2VfZAotIC8qIGNhbGxlZCBmcm9tIHNwbF9tbWMgdG8gc2Vl
IHR5cGUgb2YgYm9vdCBtb2RlIGZvciBzdG9yYWdlIChSQVcgb3IgRkFUKSAqLwotIHUzMiBzcGxf
Ym9vdF9tb2RlKGNvbnN0IHUzMiBib290X2RldmljZSkKLSB7Ci0tCXN3aXRjaCAoc3BsX2Jvb3Rf
ZGV2aWNlKCkpIHsKLSsJc3dpdGNoIChib290X2RldmljZSkgewotIAkvKiBmb3IgTU1DIHJldHVy
biBlaXRoZXIgUkFXIG9yIEZBVCBtb2RlICovCi0gCWNhc2UgQk9PVF9ERVZJQ0VfTU1DMToKLSAJ
Y2FzZSBCT09UX0RFVklDRV9NTUMyOgpkaWZmIC0tZ2l0IGEvcGFja2FnZS9ib290L3Vib290LWlt
eDYvcGF0Y2hlcy8xMTEtbXg2Y3Vib3hpX2RlZmNvbmZpZy1mb3JjZS1tbWMtYm9vdC5wYXRjaCBi
L3BhY2thZ2UvYm9vdC91Ym9vdC1pbXg2L3BhdGNoZXMvMTExLW14NmN1Ym94aV9kZWZjb25maWct
Zm9yY2UtbW1jLWJvb3QucGF0Y2gKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAw
MDAwLi4xOWI3M2UzYzlmNWQKLS0tIC9kZXYvbnVsbAorKysgYi9wYWNrYWdlL2Jvb3QvdWJvb3Qt
aW14Ni9wYXRjaGVzLzExMS1teDZjdWJveGlfZGVmY29uZmlnLWZvcmNlLW1tYy1ib290LnBhdGNo
CkBAIC0wLDAgKzEsMjMgQEAKK0Zyb20gMDBhZDhiNDJkZmU4MDExMDdkYjI1ZWFkODI0OWNiMTBh
ZmNkMGY5NCBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKK0Zyb206ID0/VVRGLTg/cT9QZXRyPTIw
PUM1PUEwdGV0aWFyPz0gPHluZXp6QHRydWUuY3o+CitEYXRlOiBTdW4sIDEgTWFyIDIwMjAgMjI6
MTA6MjMgKzAxMDAKK1N1YmplY3Q6IFtQQVRDSF0gbXg2Y3Vib3hpX2RlZmNvbmZpZzogZm9yY2Ug
bW1jIGJvb3QKK01JTUUtVmVyc2lvbjogMS4wCitDb250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNo
YXJzZXQ9VVRGLTgKK0NvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDhiaXQKKworU2lnbmVkLW9m
Zi1ieTogUGV0ciDFoHRldGlhciA8eW5lenpAdHJ1ZS5jej4KKy0tLQorIGNvbmZpZ3MvbXg2Y3Vi
b3hpX2RlZmNvbmZpZyB8IDEgKworIDEgZmlsZSBjaGFuZ2VkLCAxIGluc2VydGlvbigrKQorCist
LS0gYS9jb25maWdzL214NmN1Ym94aV9kZWZjb25maWcKKysrKyBiL2NvbmZpZ3MvbXg2Y3Vib3hp
X2RlZmNvbmZpZworQEAgLTYsNiArNiw3IEBAIENPTkZJR19TUExfTElCQ09NTU9OX1NVUFBPUlQ9
eQorIENPTkZJR19TUExfTElCR0VORVJJQ19TVVBQT1JUPXkKKyBDT05GSUdfVEFSR0VUX01YNkNV
Qk9YST15CisgQ09ORklHX1NQTF9NTUNfU1VQUE9SVD15CisrQ09ORklHX1NQTF9GT1JDRV9NTUNf
Qk9PVD15CisgQ09ORklHX1NQTF9TRVJJQUxfU1VQUE9SVD15CisgQ09ORklHX0VOVl9TSVpFPTB4
MjAwMAorIENPTkZJR19FTlZfT0ZGU0VUPTB4RkUwMDAKCl9fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fCm9wZW53cnQtZGV2ZWwgbWFpbGluZyBsaXN0Cm9wZW53
cnQtZGV2ZWxAbGlzdHMub3BlbndydC5vcmcKaHR0cHM6Ly9saXN0cy5vcGVud3J0Lm9yZy9tYWls
bWFuL2xpc3RpbmZvL29wZW53cnQtZGV2ZWwK
