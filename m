Return-Path: <openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org>
X-Original-To: lists+openwrt-devel@lfdr.de
Delivered-To: lists+openwrt-devel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id 8AD711B0C5A
	for <lists+openwrt-devel@lfdr.de>; Mon, 20 Apr 2020 15:14:50 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:Subject:MIME-Version:References:
	In-Reply-To:Message-Id:Date:To:From:Reply-To:Content-ID:Content-Description:
	Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=PZGdHZyCmzWB+U7yaFqazDqrrYF2CquBGfclqF5m15w=; b=K4H7F9dAOWfHZG
	gi96dE0XGFZavB4DeZyuom0rPR5GCKsf2EU+d6sxc8xLnvMqwmAYJ+PzT/TOGrhw+2UqifrR6WHKp
	EvPw3RCArPRXgVCkWIlxbi4cIVCWR4Py6QpsRMWC6PHE3934GGL1/Ew2vLfG4DEb/9Y9R8HdDvnHy
	gbWGTnfHAI2+RsZRuSPr1tUUuXEXgwLuALMUmoAI0Boin7Gq5E+htPVIloWVpxEhAc2yNfueIaJzq
	pLNXuVW2+nqNqf1MlBnco/anAITkaSEqPlvhHNiezXA0IIgidmunHf5ChIHOHteoYYQiY3/hbNmM6
	2ARO+17FP9F2HV38C6OQ==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1jQWG4-0005ge-D5; Mon, 20 Apr 2020 13:14:44 +0000
Received: from vps.slashdirt.org ([144.91.108.218])
 by bombadil.infradead.org with esmtps (Exim 4.92.3 #3 (Red Hat Linux))
 id 1jQWFM-0004xO-A4
 for openwrt-devel@lists.openwrt.org; Mon, 20 Apr 2020 13:14:03 +0000
Received: from supercopter (82-64-212-153.subs.proxad.net [82.64.212.153])
 (using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by vps.slashdirt.org (Postfix) with ESMTPS id B48906055A;
 Mon, 20 Apr 2020 15:13:55 +0200 (CEST)
DMARC-Filter: OpenDMARC Filter v1.3.2 vps.slashdirt.org B48906055A
Authentication-Results: vps.slashdirt.org; dmarc=fail (p=quarantine dis=none)
 header.from=slashdirt.org
DKIM-Filter: OpenDKIM Filter v2.11.0 vps.slashdirt.org B48906055A
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=slashdirt.org; s=mail;
 t=1587388436; bh=gSINYW1CZzoeLOg/P0Hhdj4ttH1S2pLTKnpqpipVbP4=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=rO+HUmP/avvyESa2VZnugAGXye7HeQg+owXaiIGbz3Qz3f4sdns5d/+rmGqAZE24g
 qU2r1CfoKYs1/X5YA+8UDHR8OSVKqDfX4Hwug/n7vqfn7ef2XmW3R7OzvhfheMtbcJ
 gxFEcT8wrQMF8YB+Db6mywy5ZgBvv94GXRgE9G5o=
Received: by supercopter (sSMTP sendmail emulation);
 Mon, 20 Apr 2020 15:13:55 +0200
From: =?UTF-8?q?Thibaut=20VAR=C3=88NE?= <hacks@slashdirt.org>
To: openwrt-devel@lists.openwrt.org
Date: Mon, 20 Apr 2020 15:13:32 +0200
Message-Id: <20200420131336.18252-3-hacks@slashdirt.org>
X-Mailer: git-send-email 2.11.0
In-Reply-To: <20200420131336.18252-1-hacks@slashdirt.org>
References: <20200420131336.18252-1-hacks@slashdirt.org>
MIME-Version: 1.0
X-Spam-Status: No, score=-2.0 required=5.0 tests=BAYES_00,DKIM_SIGNED,
 DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,NO_DNS_FOR_FROM,TXREP,
 UNPARSEABLE_RELAY shortcircuit=no autolearn=no autolearn_force=no
 version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on vps.slashdirt.org
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20200420_061400_674866_FC576189 
X-CRM114-Status: GOOD (  17.62  )
X-Spam-Score: 0.2 (/)
X-Spam-Report: SpamAssassin version 3.4.4 on bombadil.infradead.org summary:
 Content analysis details:   (0.2 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 0.4 NO_DNS_FOR_FROM        RBL: Envelope sender has no MX or A DNS records
 [listed in slashdirt.org.	IN	A]
 -0.0 SPF_PASS               SPF: sender matches SPF record
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 -0.1 DKIM_VALID_EF          Message has a valid DKIM or DK signature from
 envelope-from domain
 -0.1 DKIM_VALID_AU          Message has a valid DKIM or DK signature from
 author's domain
 -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
 0.1 DKIM_SIGNED            Message has a DKIM or DK signature, not necessarily
 valid
Subject: [OpenWrt-Devel] [PATCH v2 2/6] generic: routerboot partition build
 bits
X-BeenThere: openwrt-devel@lists.openwrt.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <openwrt-devel.lists.openwrt.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/openwrt-devel>, 
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/openwrt-devel/>
List-Post: <mailto:openwrt-devel@lists.openwrt.org>
List-Help: <mailto:openwrt-devel-request@lists.openwrt.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/openwrt-devel>,
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=subscribe>
Cc: =?UTF-8?q?Thibaut=20VAR=C3=88NE?= <hacks@slashdirt.org>,
 koen.vandeputte@ncentric.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "openwrt-devel" <openwrt-devel-bounces@lists.openwrt.org>
Errors-To: openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org

U2lnbmVkLW9mZi1ieTogVGhpYmF1dCBWQVLDiE5FIDxoYWNrc0BzbGFzaGRpcnQub3JnPgotLS0K
IHRhcmdldC9saW51eC9nZW5lcmljL2NvbmZpZy00LjE0ICAgICAgICAgICAgICAgICAgIHwgIDEg
KwogdGFyZ2V0L2xpbnV4L2dlbmVyaWMvY29uZmlnLTQuMTkgICAgICAgICAgICAgICAgICAgfCAg
MSArCiB0YXJnZXQvbGludXgvZ2VuZXJpYy9jb25maWctNS40ICAgICAgICAgICAgICAgICAgICB8
ICAxICsKIC4uLi80MzUtbXRkLWFkZC1yb3V0ZXJib290cGFydC1wYXJzZXItY29uZmlnLnBhdGNo
IHwgNDMgKysrKysrKysrKysrKysrKysrKysrKwogLi4uLzQzNS1tdGQtYWRkLXJvdXRlcmJvb3Rw
YXJ0LXBhcnNlci1jb25maWcucGF0Y2ggfCA0MSArKysrKysrKysrKysrKysrKysrKysKIC4uLi80
MzUtbXRkLWFkZC1yb3V0ZXJib290cGFydC1wYXJzZXItY29uZmlnLnBhdGNoIHwgMzggKysrKysr
KysrKysrKysrKysrKwogNiBmaWxlcyBjaGFuZ2VkLCAxMjUgaW5zZXJ0aW9ucygrKQogY3JlYXRl
IG1vZGUgMTAwNjQ0IHRhcmdldC9saW51eC9nZW5lcmljL3BlbmRpbmctNC4xNC80MzUtbXRkLWFk
ZC1yb3V0ZXJib290cGFydC1wYXJzZXItY29uZmlnLnBhdGNoCiBjcmVhdGUgbW9kZSAxMDA2NDQg
dGFyZ2V0L2xpbnV4L2dlbmVyaWMvcGVuZGluZy00LjE5LzQzNS1tdGQtYWRkLXJvdXRlcmJvb3Rw
YXJ0LXBhcnNlci1jb25maWcucGF0Y2gKIGNyZWF0ZSBtb2RlIDEwMDY0NCB0YXJnZXQvbGludXgv
Z2VuZXJpYy9wZW5kaW5nLTUuNC80MzUtbXRkLWFkZC1yb3V0ZXJib290cGFydC1wYXJzZXItY29u
ZmlnLnBhdGNoCgpkaWZmIC0tZ2l0IGEvdGFyZ2V0L2xpbnV4L2dlbmVyaWMvY29uZmlnLTQuMTQg
Yi90YXJnZXQvbGludXgvZ2VuZXJpYy9jb25maWctNC4xNAppbmRleCBjZDA4NzIyN2FlLi5jOGIz
YzYwMmRkIDEwMDY0NAotLS0gYS90YXJnZXQvbGludXgvZ2VuZXJpYy9jb25maWctNC4xNAorKysg
Yi90YXJnZXQvbGludXgvZ2VuZXJpYy9jb25maWctNC4xNApAQCAtMjg3Nyw2ICsyODc3LDcgQEAg
Q09ORklHX01URF9SRURCT09UX0RJUkVDVE9SWV9CTE9DSz0tMQogIyBDT05GSUdfTVREX1JFREJP
T1RfUEFSVFNfVU5BTExPQ0FURUQgaXMgbm90IHNldAogIyBDT05GSUdfTVREX1JPTSBpcyBub3Qg
c2V0CiBDT05GSUdfTVREX1JPT1RGU19ST09UX0RFVj15CisjIENPTkZJR19NVERfUk9VVEVSQk9P
VF9QQVJUUyBpcyBub3Qgc2V0CiAjIENPTkZJR19NVERfU0xSQU0gaXMgbm90IHNldAogIyBDT05G
SUdfTVREX1NNX0NPTU1PTiBpcyBub3Qgc2V0CiAjIENPTkZJR19NVERfU1BJTkFORF9NVDI5RiBp
cyBub3Qgc2V0CmRpZmYgLS1naXQgYS90YXJnZXQvbGludXgvZ2VuZXJpYy9jb25maWctNC4xOSBi
L3RhcmdldC9saW51eC9nZW5lcmljL2NvbmZpZy00LjE5CmluZGV4IDRjZTNkZTU3YWQuLjllM2Uz
NWY3OTMgMTAwNjQ0Ci0tLSBhL3RhcmdldC9saW51eC9nZW5lcmljL2NvbmZpZy00LjE5CisrKyBi
L3RhcmdldC9saW51eC9nZW5lcmljL2NvbmZpZy00LjE5CkBAIC0zMDI0LDYgKzMwMjQsNyBAQCBD
T05GSUdfTVREX1JFREJPT1RfRElSRUNUT1JZX0JMT0NLPS0xCiAjIENPTkZJR19NVERfUkVEQk9P
VF9QQVJUU19VTkFMTE9DQVRFRCBpcyBub3Qgc2V0CiAjIENPTkZJR19NVERfUk9NIGlzIG5vdCBz
ZXQKIENPTkZJR19NVERfUk9PVEZTX1JPT1RfREVWPXkKKyMgQ09ORklHX01URF9ST1VURVJCT09U
X1BBUlRTIGlzIG5vdCBzZXQKICMgQ09ORklHX01URF9TTFJBTSBpcyBub3Qgc2V0CiAjIENPTkZJ
R19NVERfU01fQ09NTU9OIGlzIG5vdCBzZXQKICMgQ09ORklHX01URF9TUElOQU5EX01UMjlGIGlz
IG5vdCBzZXQKZGlmZiAtLWdpdCBhL3RhcmdldC9saW51eC9nZW5lcmljL2NvbmZpZy01LjQgYi90
YXJnZXQvbGludXgvZ2VuZXJpYy9jb25maWctNS40CmluZGV4IDIxZGQ0NDdjZGYuLjdhN2YyN2Mx
ZmMgMTAwNjQ0Ci0tLSBhL3RhcmdldC9saW51eC9nZW5lcmljL2NvbmZpZy01LjQKKysrIGIvdGFy
Z2V0L2xpbnV4L2dlbmVyaWMvY29uZmlnLTUuNApAQCAtMzIyMCw2ICszMjIwLDcgQEAgQ09ORklH
X01URF9SRURCT09UX0RJUkVDVE9SWV9CTE9DSz0tMQogIyBDT05GSUdfTVREX1JFREJPT1RfUEFS
VFNfVU5BTExPQ0FURUQgaXMgbm90IHNldAogIyBDT05GSUdfTVREX1JPTSBpcyBub3Qgc2V0CiBD
T05GSUdfTVREX1JPT1RGU19ST09UX0RFVj15CisjIENPTkZJR19NVERfUk9VVEVSQk9PVF9QQVJU
UyBpcyBub3Qgc2V0CiAjIENPTkZJR19NVERfU0xSQU0gaXMgbm90IHNldAogIyBDT05GSUdfTVRE
X1NNX0NPTU1PTiBpcyBub3Qgc2V0CiAjIENPTkZJR19NVERfU1BJTkFORF9NVDI5RiBpcyBub3Qg
c2V0CmRpZmYgLS1naXQgYS90YXJnZXQvbGludXgvZ2VuZXJpYy9wZW5kaW5nLTQuMTQvNDM1LW10
ZC1hZGQtcm91dGVyYm9vdHBhcnQtcGFyc2VyLWNvbmZpZy5wYXRjaCBiL3RhcmdldC9saW51eC9n
ZW5lcmljL3BlbmRpbmctNC4xNC80MzUtbXRkLWFkZC1yb3V0ZXJib290cGFydC1wYXJzZXItY29u
ZmlnLnBhdGNoCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAuLjE5Mjg4NmIx
MDIKLS0tIC9kZXYvbnVsbAorKysgYi90YXJnZXQvbGludXgvZ2VuZXJpYy9wZW5kaW5nLTQuMTQv
NDM1LW10ZC1hZGQtcm91dGVyYm9vdHBhcnQtcGFyc2VyLWNvbmZpZy5wYXRjaApAQCAtMCwwICsx
LDQzIEBACitGcm9tIDQ0MzdlMDFmYjZiY2E2M2ZjY2RiYTVkNmM0NDg4OGIwOTM1ODg1YzIgTW9u
IFNlcCAxNyAwMDowMDowMCAyMDAxCitGcm9tOiA9P1VURi04P3E/VGhpYmF1dD0yMFZBUj1DMz04
OE5FPz0gPGhhY2tzQHNsYXNoZGlydC5vcmc+CitEYXRlOiBUdWUsIDI0IE1hciAyMDIwIDExOjQ1
OjA3ICswMTAwCitTdWJqZWN0OiBbUEFUQ0hdIGdlbmVyaWM6IHJvdXRlcmJvb3QgcGFydGl0aW9u
IGJ1aWxkIGJpdHMgKDQuMTQpCitNSU1FLVZlcnNpb246IDEuMAorQ29udGVudC1UeXBlOiB0ZXh0
L3BsYWluOyBjaGFyc2V0PVVURi04CitDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiA4Yml0CisK
K1RoaXMgcGF0Y2ggYWRkcyByb3V0ZXJib290cGFydCBrZXJuZWwgYnVpbGQgYml0cworCitTaWdu
ZWQtb2ZmLWJ5OiBUaGliYXV0IFZBUsOITkUgPGhhY2tzQHNsYXNoZGlydC5vcmc+CistLS0KKyBk
cml2ZXJzL210ZC9wYXJzZXJzL0tjb25maWcgIHwgOSArKysrKysrKysKKyBkcml2ZXJzL210ZC9w
YXJzZXJzL01ha2VmaWxlIHwgMSArCisgMiBmaWxlcyBjaGFuZ2VkLCAxMCBpbnNlcnRpb25zKCsp
CisKK2RpZmYgLS1naXQgYS9kcml2ZXJzL210ZC9wYXJzZXJzL0tjb25maWcgYi9kcml2ZXJzL210
ZC9wYXJzZXJzL0tjb25maWcKK2luZGV4IGQyMDZiM2MuLjU4Y2JkZDYgMTAwNjQ0CistLS0gYS9k
cml2ZXJzL210ZC9wYXJzZXJzL0tjb25maWcKKysrKyBiL2RyaXZlcnMvbXRkL3BhcnNlcnMvS2Nv
bmZpZworQEAgLTYsMyArNiwxMiBAQCBjb25maWcgTVREX1BBUlNFUl9UUlgKKyAJICBtYXkgY29u
dGFpbiB1cCB0byAzLzQgcGFydGl0aW9ucyAoZGVwZW5kaW5nIG9uIHRoZSB2ZXJzaW9uKS4KKyAJ
ICBUaGlzIGRyaXZlciB3aWxsIHBhcnNlIFRSWCBoZWFkZXIgYW5kIHJlcG9ydCBhdCBsZWFzdCB0
d28gcGFydGl0aW9uczoKKyAJICBrZXJuZWwgYW5kIHJvb3Rmcy4KKysKKytjb25maWcgTVREX1JP
VVRFUkJPT1RfUEFSVFMKKysJdHJpc3RhdGUgIlJvdXRlckJvb3QgZmxhc2ggcGFydGl0aW9uIHBh
cnNlciIKKysJZGVwZW5kcyBvbiBNVEQgJiYgT0YKKysJaGVscAorKwkgIE1pa3JvVGlrIFJvdXRl
ckJvb3QgaXMgaW1wbGVtZW50ZWQgYXMgYSBtdWx0aSBzZWdtZW50IHN5c3RlbSBvbiB0aGUKKysJ
ICBmbGFzaCwgc29tZSBvZiB3aGljaCBhcmUgZml4ZWQgYW5kIHNvbWUgb2Ygd2hpY2ggYXJlIGxv
Y2F0ZWQgYXQKKysJICB2YXJpYWJsZSBvZmZzZXRzLiBUaGlzIHBhcnNlciBoYW5kbGVzIGJvdGgg
Y2FzZXMgdmlhIHByb3Blcmx5CisrCSAgZm9ybWF0dGVkIERUUy4KK2RpZmYgLS1naXQgYS9kcml2
ZXJzL210ZC9wYXJzZXJzL01ha2VmaWxlIGIvZHJpdmVycy9tdGQvcGFyc2Vycy9NYWtlZmlsZQor
aW5kZXggNGQ5MDI0ZS4uNDFkMzYzYSAxMDA2NDQKKy0tLSBhL2RyaXZlcnMvbXRkL3BhcnNlcnMv
TWFrZWZpbGUKKysrKyBiL2RyaXZlcnMvbXRkL3BhcnNlcnMvTWFrZWZpbGUKK0BAIC0xICsxLDIg
QEAKKyBvYmotJChDT05GSUdfTVREX1BBUlNFUl9UUlgpCQkrPSBwYXJzZXJfdHJ4Lm8KKytvYmot
JChDT05GSUdfTVREX1JPVVRFUkJPT1RfUEFSVFMpCSs9IHJvdXRlcmJvb3RwYXJ0Lm8KKy0tIAor
Mi4xMS4wCisKZGlmZiAtLWdpdCBhL3RhcmdldC9saW51eC9nZW5lcmljL3BlbmRpbmctNC4xOS80
MzUtbXRkLWFkZC1yb3V0ZXJib290cGFydC1wYXJzZXItY29uZmlnLnBhdGNoIGIvdGFyZ2V0L2xp
bnV4L2dlbmVyaWMvcGVuZGluZy00LjE5LzQzNS1tdGQtYWRkLXJvdXRlcmJvb3RwYXJ0LXBhcnNl
ci1jb25maWcucGF0Y2gKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMC4uNjc4
ZWFlZDRjZQotLS0gL2Rldi9udWxsCisrKyBiL3RhcmdldC9saW51eC9nZW5lcmljL3BlbmRpbmct
NC4xOS80MzUtbXRkLWFkZC1yb3V0ZXJib290cGFydC1wYXJzZXItY29uZmlnLnBhdGNoCkBAIC0w
LDAgKzEsNDEgQEAKK0Zyb20gNDQzN2UwMWZiNmJjYTYzZmNjZGJhNWQ2YzQ0ODg4YjA5MzU4ODVj
MiBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKK0Zyb206ID0/VVRGLTg/cT9UaGliYXV0PTIwVkFS
PUMzPTg4TkU/PSA8aGFja3NAc2xhc2hkaXJ0Lm9yZz4KK0RhdGU6IFR1ZSwgMjQgTWFyIDIwMjAg
MTE6NDU6MDcgKzAxMDAKK1N1YmplY3Q6IFtQQVRDSF0gZ2VuZXJpYzogcm91dGVyYm9vdCBwYXJ0
aXRpb24gYnVpbGQgYml0cyAoNC4xOSkKK01JTUUtVmVyc2lvbjogMS4wCitDb250ZW50LVR5cGU6
IHRleHQvcGxhaW47IGNoYXJzZXQ9VVRGLTgKK0NvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDhi
aXQKKworVGhpcyBwYXRjaCBhZGRzIHJvdXRlcmJvb3RwYXJ0IGtlcm5lbCBidWlsZCBiaXRzCisK
K1NpZ25lZC1vZmYtYnk6IFRoaWJhdXQgVkFSw4hORSA8aGFja3NAc2xhc2hkaXJ0Lm9yZz4KKy0t
LQorIGRyaXZlcnMvbXRkL3BhcnNlcnMvS2NvbmZpZyAgfCA5ICsrKysrKysrKworIGRyaXZlcnMv
bXRkL3BhcnNlcnMvTWFrZWZpbGUgfCAxICsKKyAyIGZpbGVzIGNoYW5nZWQsIDEwIGluc2VydGlv
bnMoKykKKworZGlmZiAtLWdpdCBhL2RyaXZlcnMvbXRkL3BhcnNlcnMvS2NvbmZpZyBiL2RyaXZl
cnMvbXRkL3BhcnNlcnMvS2NvbmZpZworaW5kZXggZGU2ZjVmOC4uMGFmYTg5YyAxMDA2NDQKKy0t
LSBhL2RyaXZlcnMvbXRkL3BhcnNlcnMvS2NvbmZpZworKysrIGIvZHJpdmVycy9tdGQvcGFyc2Vy
cy9LY29uZmlnCitAQCAtMjIsMyArMjIsMTIgQEAgY29uZmlnIE1URF9TSEFSUFNMX1BBUlRTCisg
CSAgVGhpcyBwcm92aWRlcyB0aGUgcmVhZC1vbmx5IEZUTCBsb2dpYyBuZWNlc3NhcnkgdG8gcmVh
ZCB0aGUgcGFydGl0aW9uCisgCSAgdGFibGUgZnJvbSB0aGUgTkFORCBmbGFzaCBvZiBTaGFycCBT
TCBTZXJpZXMgKFphdXJ1cykgYW5kIHRoZSBNVEQKKyAJICBwYXJ0aXRpb24gcGFyc2VyIHVzaW5n
IHRoaXMgY29kZS4KKysKKytjb25maWcgTVREX1JPVVRFUkJPT1RfUEFSVFMKKysJdHJpc3RhdGUg
IlJvdXRlckJvb3QgZmxhc2ggcGFydGl0aW9uIHBhcnNlciIKKysJZGVwZW5kcyBvbiBNVEQgJiYg
T0YKKysJaGVscAorKwkgIE1pa3JvVGlrIFJvdXRlckJvb3QgaXMgaW1wbGVtZW50ZWQgYXMgYSBt
dWx0aSBzZWdtZW50IHN5c3RlbSBvbiB0aGUKKysJICBmbGFzaCwgc29tZSBvZiB3aGljaCBhcmUg
Zml4ZWQgYW5kIHNvbWUgb2Ygd2hpY2ggYXJlIGxvY2F0ZWQgYXQKKysJICB2YXJpYWJsZSBvZmZz
ZXRzLiBUaGlzIHBhcnNlciBoYW5kbGVzIGJvdGggY2FzZXMgdmlhIHByb3Blcmx5CisrCSAgZm9y
bWF0dGVkIERUUy4KK2RpZmYgLS1naXQgYS9kcml2ZXJzL210ZC9wYXJzZXJzL01ha2VmaWxlIGIv
ZHJpdmVycy9tdGQvcGFyc2Vycy9NYWtlZmlsZQoraW5kZXggNDRmZjM0Mi4uMDU0MzM2MiAxMDA2
NDQKKy0tLSBhL2RyaXZlcnMvbXRkL3BhcnNlcnMvTWFrZWZpbGUKKysrKyBiL2RyaXZlcnMvbXRk
L3BhcnNlcnMvTWFrZWZpbGUKK0BAIC0xLDIgKzEsMyBAQAorIG9iai0kKENPTkZJR19NVERfUEFS
U0VSX1RSWCkJCSs9IHBhcnNlcl90cngubworIG9iai0kKENPTkZJR19NVERfU0hBUlBTTF9QQVJU
UykJCSs9IHNoYXJwc2xwYXJ0Lm8KKytvYmotJChDT05GSUdfTVREX1JPVVRFUkJPT1RfUEFSVFMp
CQkrPSByb3V0ZXJib290cGFydC5vCmRpZmYgLS1naXQgYS90YXJnZXQvbGludXgvZ2VuZXJpYy9w
ZW5kaW5nLTUuNC80MzUtbXRkLWFkZC1yb3V0ZXJib290cGFydC1wYXJzZXItY29uZmlnLnBhdGNo
IGIvdGFyZ2V0L2xpbnV4L2dlbmVyaWMvcGVuZGluZy01LjQvNDM1LW10ZC1hZGQtcm91dGVyYm9v
dHBhcnQtcGFyc2VyLWNvbmZpZy5wYXRjaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAw
MDAwMDAwLi4zYWI3ODgzOGIwCi0tLSAvZGV2L251bGwKKysrIGIvdGFyZ2V0L2xpbnV4L2dlbmVy
aWMvcGVuZGluZy01LjQvNDM1LW10ZC1hZGQtcm91dGVyYm9vdHBhcnQtcGFyc2VyLWNvbmZpZy5w
YXRjaApAQCAtMCwwICsxLDM4IEBACitGcm9tIDQ0MzdlMDFmYjZiY2E2M2ZjY2RiYTVkNmM0NDg4
OGIwOTM1ODg1YzIgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCitGcm9tOiA9P1VURi04P3E/VGhp
YmF1dD0yMFZBUj1DMz04OE5FPz0gPGhhY2tzQHNsYXNoZGlydC5vcmc+CitEYXRlOiBUdWUsIDI0
IE1hciAyMDIwIDExOjQ1OjA3ICswMTAwCitTdWJqZWN0OiBbUEFUQ0hdIGdlbmVyaWM6IHJvdXRl
cmJvb3QgcGFydGl0aW9uIGJ1aWxkIGJpdHMgKDUuNCkKK01JTUUtVmVyc2lvbjogMS4wCitDb250
ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9VVRGLTgKK0NvbnRlbnQtVHJhbnNmZXItRW5j
b2Rpbmc6IDhiaXQKKworVGhpcyBwYXRjaCBhZGRzIHJvdXRlcmJvb3RwYXJ0IGtlcm5lbCBidWls
ZCBiaXRzCisKK1NpZ25lZC1vZmYtYnk6IFRoaWJhdXQgVkFSw4hORSA8aGFja3NAc2xhc2hkaXJ0
Lm9yZz4KKy0tLQorIGRyaXZlcnMvbXRkL3BhcnNlcnMvS2NvbmZpZyAgfCA5ICsrKysrKysrKwor
IGRyaXZlcnMvbXRkL3BhcnNlcnMvTWFrZWZpbGUgfCAxICsKKyAyIGZpbGVzIGNoYW5nZWQsIDEw
IGluc2VydGlvbnMoKykKKworLS0tIGEvZHJpdmVycy9tdGQvcGFyc2Vycy9LY29uZmlnCisrKysg
Yi9kcml2ZXJzL210ZC9wYXJzZXJzL0tjb25maWcKK0BAIC0xNjAsMyArMTYwLDEyIEBAIGNvbmZp
ZyBNVERfUkVEQk9PVF9QQVJUU19SRUFET05MWQorIAkgICdGSVMgZGlyZWN0b3J5JyBpbWFnZXMs
IGVuYWJsZSB0aGlzIG9wdGlvbi4KKyAKKyBlbmRpZiAjIE1URF9SRURCT09UX1BBUlRTCisrCisr
Y29uZmlnIE1URF9ST1VURVJCT09UX1BBUlRTCisrCXRyaXN0YXRlICJSb3V0ZXJCb290IGZsYXNo
IHBhcnRpdGlvbiBwYXJzZXIiCisrCWRlcGVuZHMgb24gTVREICYmIE9GCisrCWhlbHAKKysJICBN
aWtyb1RpayBSb3V0ZXJCb290IGlzIGltcGxlbWVudGVkIGFzIGEgbXVsdGkgc2VnbWVudCBzeXN0
ZW0gb24gdGhlCisrCSAgZmxhc2gsIHNvbWUgb2Ygd2hpY2ggYXJlIGZpeGVkIGFuZCBzb21lIG9m
IHdoaWNoIGFyZSBsb2NhdGVkIGF0CisrCSAgdmFyaWFibGUgb2Zmc2V0cy4gVGhpcyBwYXJzZXIg
aGFuZGxlcyBib3RoIGNhc2VzIHZpYSBwcm9wZXJseQorKwkgIGZvcm1hdHRlZCBEVFMuCistLS0g
YS9kcml2ZXJzL210ZC9wYXJzZXJzL01ha2VmaWxlCisrKysgYi9kcml2ZXJzL210ZC9wYXJzZXJz
L01ha2VmaWxlCitAQCAtMTAsMyArMTAsNCBAQAorIG9iai0kKENPTkZJR19NVERfU0hBUlBTTF9Q
QVJUUykJCSs9IHNoYXJwc2xwYXJ0Lm8KKyBvYmotJChDT05GSUdfTVREX1JFREJPT1RfUEFSVFMp
CQkrPSByZWRib290Lm8KKyBvYmotJChDT05GSUdfTVREX01ZTE9BREVSX1BBUlRTKQkrPSBteWxv
YWRlci5vCisrb2JqLSQoQ09ORklHX01URF9ST1VURVJCT09UX1BBUlRTKQkrPSByb3V0ZXJib290
cGFydC5vCi0tIAoyLjExLjAKCgpfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fXwpvcGVud3J0LWRldmVsIG1haWxpbmcgbGlzdApvcGVud3J0LWRldmVsQGxpc3Rz
Lm9wZW53cnQub3JnCmh0dHBzOi8vbGlzdHMub3BlbndydC5vcmcvbWFpbG1hbi9saXN0aW5mby9v
cGVud3J0LWRldmVsCg==
