Return-Path: <openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org>
X-Original-To: lists+openwrt-devel@lfdr.de
Delivered-To: lists+openwrt-devel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id B42681A0978
	for <lists+openwrt-devel@lfdr.de>; Tue,  7 Apr 2020 10:45:29 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:Subject:MIME-Version:Date:Message-ID:
	From:To:Reply-To:Cc:Content-ID:Content-Description:Resent-Date:Resent-From:
	Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:References:
	List-Owner; bh=mAMZW5sMq14nzyR6VZsq0CWZ0A6F0f3UjfeALJRJN7c=; b=FUNiWuWom8H5Xl
	vtGIKKNUj3oyKTpUSqhywJ6EUqBAZ4g/06IG9aBC1qPRshxhO0Qf+Rr50Yv8k6ikKYvbb2Ks2x1vZ
	Jf5KEpNG+z6QtToTwWEJkrzvlU1rZcEuKaIoyD9hd3vC7uEhGlk4hoUJZtSjxyuWegrd4WQDThEZr
	ACbqEOVN8BY6nx0u5IHLOvxkYSSeABBqRhf1QHtoq9tiWzA+q+bmjlLYh1NEa8A3vKAH2geJ8bC8q
	ga1hFP7HMbLc0gBODpSvFS+DZAiui9OJ1lkjdFIyVyThm7K3dM4xChoLOdSwxDVWmwQ09cnpE0jol
	S7+WdAbtbXIMeiih5Lyw==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1jLjrG-00048g-Rk; Tue, 07 Apr 2020 08:45:22 +0000
Received: from mail3.marcant.net ([217.14.160.188])
 by bombadil.infradead.org with esmtps (Exim 4.92.3 #3 (Red Hat Linux))
 id 1jLjr8-00048C-8u
 for openwrt-devel@lists.openwrt.org; Tue, 07 Apr 2020 08:45:16 +0000
Received: from [192.168.180.1] (port=38326 helo=admins.marcant.net)
 by mail3.marcant.net with esmtp (Exim 4.82_1-5b7a7c0-XX)
 (envelope-from <avalentin@marcant.net>) id 1jLjqx-0000OE-38
 for openwrt-devel@lists.openwrt.org; Tue, 07 Apr 2020 10:45:03 +0200
Received: from vmh.kalnet.hooya.de (unknown [192.168.203.15])
 by admins.marcant.net (Postfix) with ESMTPA id CF9F4282AB8
 for <openwrt-devel@lists.openwrt.org>; Tue,  7 Apr 2020 10:45:03 +0200 (CEST)
To: openwrt-devel@lists.openwrt.org
From: Andre Valentin <avalentin@marcant.net>
Message-ID: <82a851f6-1e86-201c-f8d2-7a3c5d915af4@marcant.net>
Date: Tue, 7 Apr 2020 10:45:03 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
 Thunderbird/68.6.0
MIME-Version: 1.0
Content-Language: en-US
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20200407_014514_466251_D1729DD3 
X-CRM114-Status: GOOD (  10.32  )
X-Spam-Score: 0.0 (/)
X-Spam-Report: SpamAssassin version 3.4.4 on bombadil.infradead.org summary:
 Content analysis details:   (0.0 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -0.0 RCVD_IN_DNSWL_NONE     RBL: Sender listed at https://www.dnswl.org/,
 no trust [217.14.160.188 listed in list.dnswl.org]
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 -0.0 SPF_PASS               SPF: sender matches SPF record
Subject: [OpenWrt-Devel] ramips/mt7621 after 5.4 switch
X-BeenThere: openwrt-devel@lists.openwrt.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <openwrt-devel.lists.openwrt.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/openwrt-devel>, 
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/openwrt-devel/>
List-Post: <mailto:openwrt-devel@lists.openwrt.org>
List-Help: <mailto:openwrt-devel-request@lists.openwrt.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/openwrt-devel>,
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "openwrt-devel" <openwrt-devel-bounces@lists.openwrt.org>
Errors-To: openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org

SGkhCgpDdXJyZW50bHkgSSdtIGhhdmluZyBzb21lIHNlcmlvdXMgcHJvYmxlbXMgd2l0aCB0aGUg
bmV3IDUuNCBwb3J0LgoxKSBQQ0llCkknbSBkZXZlbG9waW5nIG9uIHRoZSBaeVhFTCBMVEUzMzAx
LVBMVVMuIEl0IGhhcyBQQ0llIGFuZCBhIG10NzYxNWUgY29ubmVjdGVkIHRvIHNlY29uZCBidXMg
b24gdGhlIGZpcnN0IHBoeS4KSWYgYm9vdGluZyB0aGUgZGV2aWNlLCBrZXJuZWwgaGFuZ3Mgd2l0
aCBhIFJTVCBtZXNzYWdlLCB0ZWxsaW5nIHRoZSBkZXZpY2UgaXMgbm90IGRldGVjdGVkLiBJdCBz
ZWVtcyB0aGUgUENJZSBidXMgMQpjYW5ub3QgYmUgcmVzZXRlZCBiZWNhdXNlIG5vdGhpbmcgaXMg
Y29ubmVjdGVkIHRvIGJ1cyAwLgpBbiB1cHBvcnQgb2YgdGhlIG9sZCBQQ0kgZHJpdmVyIHJlZW5h
YmxlcyB0aGUgZnVuY3Rpb24uIEkgY2FuIHByb3ZpZGUgbW9yZSBsb2dzIG9uIHRoaXMgaWYgbmVl
ZGVkLgoKMikgRFNBClRoZXNlIGFyZSBteSBmaXJzdCBleHBlcmltZW50cyB3aXRoIERTQS4gSSd2
ZSBjb25maWd1cmVkIDIgYnJpZGdlczoKbGFuOiBsYW4xIGxhbjIgbGFuMyBsYW40CmRtejogbGFu
MS4yMCBsYW4yLjIwIGxhbjMuMjAgbGFuNC4yMAoKSW5ib3VuZCB0cmFmZmljIG9uIHZsYW4gMjAg
aXMgY29tbWluZyBpbiwgb3V0Z29pbmcgdHJhZmZpYyBwYXNzZXMgdGhlIGxhbjEgcG9ydCBidXQg
ZG9lcyBub3RlIGFycml2ZSBhdCB0aGUgb3RoZXIgZW5kLgoKU2hvdWxkIHRoaXMgd29yayB3aXRo
IERTQSBvbiBtZWRpYXRoZWs/IElmIG5vdCwgSSBjYW4gb2ZmZXIgdGhhdCBJIHdyaXRlIGEgcGF0
Y2ggZm9yIHRyYWRpdGlvbmFsIHN3Y29uZmlnLgoKMykgUHJvYmxlbXMgd2l0aCBRTUkgSW50ZXJm
YWNlcwpRTUkgaXMgdXNlZCBmb3IgbW9iaWxlIHBob25lcyBhbmQgaW50ZXJhY3Qgd2l0aCB0aGUg
cW1pX3d3YW4gZHJpdmVyIGluIHRoZSBrZXJuZWwuIEkgaGFkIHRyYW5zbWl0IGlzc3VlcywKc3dp
dGNoZWQgdGhlIGRyaXZlciBiYWNrIHRvIHRoZSA0LjE0IHdoaWxlIHN0aWxsIG9uIDUuNC4gQnV0
IHRoZSBzYW1lIHByb2JsZW0gaGFwcGVucyBhZ2Fpbi4KVW5kZXIgNC4xNCB0aGlzIHdhcyBub3Qg
YSBwcm9ibGVtLiBTbyBpdCBzZWVtcyA1LjQgb3IgdGhlIFNPQyBwYXRjaGVzIHNvbWVob3cgYXJl
IHRoZSByb290IGNhdXNlLgpIZXJlJ3MgdGhlIGtlcm5lbCBtZXNzYWdlOgoKClsgNDE5OS40NDQx
OTFdIC0tLS0tLS0tLS0tLVsgY3V0IGhlcmUgXS0tLS0tLS0tLS0tLQpbIDQxOTkuNDUzNTM0XSBX
QVJOSU5HOiBDUFU6IDAgUElEOiAwIGF0IG5ldC9zY2hlZC9zY2hfZ2VuZXJpYy5jOjQ0NyBkZXZf
d2F0Y2hkb2crMHgyZjgvMHgzMDAKWyA0MTk5LjQ3MDA3NF0gTkVUREVWIFdBVENIRE9HOiB3d2Fu
MCAocW1pX3d3YW4pOiB0cmFuc21pdCBxdWV1ZSAwIHRpbWVkIG91dApNb24gQXByICA2IDE2OjI3
WyA0MTk5LjQ4MzgzOV0gTW9kdWxlcyBsaW5rZWQgaW46IHFjc2VyaWFsIG9wdGlvbiBjZGNfbWJp
bSB1c2Jfd3dhbiBzaWVycmFfbmV0IHNpZXJyYSBybmRpc19ob3N0IHFtaV93d2FuIHBwcG9lIHBs
MjMwMyBsMnRwX3BwcCBpcHRhYmxlX25hdCBpcHRfUkVKRUNUIGh1YXdlaV9jZGNfbmNtIGZ0ZGlf
c2lvCmNkY19zdWJzZXQgY2RjX25jbSBjZGNfZXRoZXIgY2RjX2VlbSB4dF91MzIgeHRfdGltZSB4
dF90Y3B1ZHAgeHRfdGNwbXNzIHh0X3N0cmluZyB4dF9zdGF0aXN0aWMgeHRfc3RhdGUgeHRfc29j
a2V0IHh0X3JlY2VudCB4dF9xdW90YSB4dF9wb2xpY3kgeHRfcGt0dHlwZSB4dF9vd25lciB4dF9u
YXQgeHRfbXVsdGlwb3J0IHh0X21hcmsgeHRfbWFjCnh0X2xpbWl0IHh0X2xlbmd0aCB4dF9pcHJh
bmdlIHh0X2hsIHh0X2hlbHBlciB4dF9oYXNobGltaXQgeHRfZXNwIHh0X2VjbiB4dF9kc2NwIHh0
X2Nvbm50cmFjayB4dF9jb25ubWFyayB4dF9jb25ubGltaXQgeHRfY29ubmJ5dGVzIHh0X2NvbW1l
bnQgeHRfY2x1c3RlciB4dF9icGYgeHRfYWRkcnR5cGUgeHRfVFJBQ0UgeHRfVFBST1hZCnh0X1RD
UE1TUyB4dF9SRURJUkVDVCB4dF9ORVRNQVAgeHRfTUFTUVVFUkFERSB4dF9MT0cgeHRfTEVEIHh0
X0hMIHh0X0RTQ1AgeHRfQ1QgeHRfQ0xBU1NJRlkgeG9yIHdpcmVndWFyZCB2aGNpX2hjZCB1c2Jz
ZXJpYWwgdXNibmV0IHVzYmxwIHVzYmlwX2hvc3QgdXNiaXBfY29yZSB0c19mc20gdHNfYm0gcHB0
cCBwcHBveCBwcHBfc3luY3R0eQpwcHBfbXBwZSBwcHBfYXN5bmMgbmZuZXRsaW5rX3F1ZXVlIG5m
bmV0bGlua19sb2cgbmZfdHByb3h5X2lwdjYgbmZfdHByb3h5X2lwdjQgbmZfc29ja2V0X2lwdjYg
bmZfc29ja2V0X2lwdjQgbmZfcmVqZWN0X2lwdjQgbmZfbmF0X3RmdHAgbmZfbmF0X3NubXBfYmFz
aWMgbmZfbmF0X3NpcCBuZl9uYXRfcHB0cCBuZl9uYXRfaXJjIG5mX25hdF9oMzIzCm5mX25hdF9m
dHAgbmZfbmF0X2FtYW5kYSBuZl9uYXQgbmZfbG9nX2lwdjQKOjI0IDIwMjAga2Vybi53YVsgNDE5
OS40ODQwODFdICBuZl9jb25udHJhY2tfdGZ0cCBuZl9jb25udHJhY2tfc25tcCBuZl9jb25udHJh
Y2tfc2lwIG5mX2Nvbm50cmFja19wcHRwIG5mX2Nvbm50cmFja19uZXRsaW5rIG5mX2Nvbm50cmFj
a19pcmMgbmZfY29ubnRyYWNrX2gzMjMgbmZfY29ubnRyYWNrX2Z0cCBuZl9jb25udHJhY2tfYnJv
YWRjYXN0CnRzX2ttcCBuZl9jb25udHJhY2tfYW1hbmRhIG5mX2Nvbm5jb3VudCBtYWN2bGFuIGlw
dGFibGVfcmF3IGlwdGFibGVfbWFuZ2xlIGlwdGFibGVfZmlsdGVyIGlwdF9haCBpcHRfRUNOIGlw
dF9DTFVTVEVSSVAgaXBoZXRoIGlwNnRhYmxlX3JhdyBpcF90YWJsZXMgaHNvIGNyY19jY2l0dCBj
ZGNfd2RtIGNkY19hY20gYXNuMV9kZWNvZGVyCmFycHRhYmxlX2ZpbHRlciBhcnB0X21hbmdsZSBh
cnBfdGFibGVzIGZ1c2Ugc2NoX3RlcWwgc2NoX3NmcSBzY2hfcmVkIHNjaF9wcmlvIHNjaF9waWUg
c2NoX211bHRpcSBzY2hfZ3JlZCBzY2hfZnEgc2NoX2RzbWFyayBzY2hfY29kZWwgZW1fdGV4dCBl
bV9uYnl0ZSBlbV9tZXRhIGVtX2NtcCBhY3Rfc2ltcGxlIGFjdF9wb2xpY2UgYWN0X3BlZGl0CmFj
dF9pcHQgYWN0X2dhY3QgYWN0X2NzdW0gbGliY3JjMzJjIGFjdF9jb25ubWFyayBuZl9jb25udHJh
Y2sgbmZfZGVmcmFnX2lwdjYgbmZfZGVmcmFnX2lwdjQgc2NoX3RiZiBzY2hfaW5ncmVzcyBzY2hf
aHRiIHNjaF9oZnNjIGVtX3UzMiBjbHNfdTMyIGNsc190Y2luZGV4IGNsc19yb3V0ZSBjbHNfbWF0
Y2hhbGwgY2xzX2Z3IGNsc19mbG93CmNsc19iYXNpYyBhY3Rfc2tiZWRpdCBhY3RfbWlycmVkIGV2
ZGV2IGxwIGkyY19kZXYgbGVkdHJpZ191c2Jwb3J0IHBwZGV2IHBhcnBvcnQgbGVkdHJpZ19oZWFy
dGJlYXQgbGVkdHJpZ19ncGlvIGNyeXB0b2RldiB4dF9zZXQgaXBfc2V0X2xpc3Rfc2V0IGlwX3Nl
dF9oYXNoX25ldHBvcnRuZXQgaXBfc2V0X2hhc2hfbmV0cG9ydAppcF9zZXRfaGFzaF9uZXRuZXQg
aXBfc2V0X2hhc2hfbmV0aWZhY2UKcm4ga2VybmVsOiBbIDQxOVsgNDE5OS42NjA5MjBdICBpcF9z
ZXRfaGFzaF9uZXQgaXBfc2V0X2hhc2hfbWFjIGlwX3NldF9oYXNoX2lwcG9ydG5ldCBpcF9zZXRf
aGFzaF9pcHBvcnRpcCBpcF9zZXRfaGFzaF9pcHBvcnQgaXBfc2V0X2hhc2hfaXBtYXJrIGlwX3Nl
dF9oYXNoX2lwIGlwX3NldF9iaXRtYXBfcG9ydCBpcF9zZXRfYml0bWFwX2lwbWFjCmlwX3NldF9i
aXRtYXBfaXAgaXBfc2V0IG5mbmV0bGluayBpcDZ0X3J0IGlwNnRfbWggaXA2dF9pcHY2aGVhZGVy
IGlwNnRfaGJoIGlwNnRfZnJhZyBpcDZ0X2V1aTY0IGlwNnRfYWggbmZfbG9nX2lwdjYgbmZfbG9n
X2NvbW1vbiBpcDZ0YWJsZV9tYW5nbGUgaXA2dGFibGVfZmlsdGVyIGlwNl90YWJsZXMgaXA2dF9S
RUpFQ1QgeF90YWJsZXMKbmZfcmVqZWN0X2lwdjYgcHBwb2F0bSBwcHBfZ2VuZXJpYyBzbGhjIG1z
ZG9zIGJvbmRpbmcgaXA2X2dyZSBpcF9ncmUgZ3JlIGlmYiBkdW1teSBuYXQ0NiBsMnRwX2lwNiBs
MnRwX2lwIGwydHBfZXRoIGlwNl92dGkgaXBfdnRpIHNpdCBsMnRwX25ldGxpbmsgbDJ0cF9jb3Jl
IGlwY29tcDYgeGZybTZfdHVubmVsIGVzcDYgYWg2IHhmcm00X3R1bm5lbAppcGNvbXAgZXNwNCBh
aDQgaXBpcCBpcDZfdHVubmVsIHR1bm5lbDYgdHVubmVsNCBpcF90dW5uZWwgdmV0aCB0dW4geGZy
bV91c2VyIHhmcm1faXBjb21wIGFmX2tleSB4ZnJtX2FsZ28gdmZhdCBmYXQgdWRmIGNyY19pdHVf
dCBudGZzIGlzb2ZzIGRuc19yZXNvbHZlciBicjI2ODQgYXRtIGZzY2FjaGUgbmxzX3V0Zjggbmxz
X2lzbzg4NTlfMQpubHNfY3A4NTAgbmxzX2NwNDM3IG5sc19jcDEyNTAgdnhsYW4gdWRwX3R1bm5l
bCBpcDZfdWRwX3R1bm5lbCB3cDUxMiB0d29maXNoX2dlbmVyaWMgdHdvZmlzaF9jb21tb24gdGdy
MTkyIHRlYSBzZXJwZW50X2dlbmVyaWMga2hhemFkIGNhc3Q2X2dlbmVyaWMgY2FzdDVfZ2VuZXJp
YyBjYXN0X2NvbW1vbiBjYW1lbGxpYV9nZW5lcmljCmJsb3dmaXNoX2dlbmVyaWMgYmxvd2Zpc2hf
Y29tbW9uIGFudWJpcyB4dHMKOS40NDQxOTFdIC0tLS0tLVsgNDE5OS44MzYyODRdICBjcnlwdG9f
dXNlciBhbGdpZl9za2NpcGhlciBhbGdpZl9ybmcgYWxnaWZfaGFzaCBhbGdpZl9hZWFkIGFmX2Fs
ZyBzaGE1MTJfZ2VuZXJpYyBzaGEyNTZfZ2VuZXJpYyBsaWJzaGEyNTYgc2hhMV9nZW5lcmljIHNl
cWl2IGppdHRlcmVudHJvcHlfcm5nIGRyYmcgcGNiYyBtaWNoYWVsX21pYyBtZDUKbWQ0IGhtYWMg
Z2hhc2hfZ2VuZXJpYyBnZjEyOG11bCBnY20gZWNoYWluaXYgZWNiIGRlc19nZW5lcmljIGxpYmRl
cyBjdHIgY21hYyBjY20gY2JjIGF1dGhlbmMgYXJjNCB1c2Jfc3RvcmFnZSBpbnB1dF9wb2xsZGV2
IGxlZHNfZ3BpbyB4aGNpX3BsYXRfaGNkIHhoY2lfcGNpIHhoY2lfbXRrIHhoY2lfaGNkIGxlZHRy
aWdfdHJhbnNpZW50CmZzbF9tcGhfZHJfb2YgZWhjaV9wbGF0Zm9ybSBlaGNpX2ZzbCBzZF9tb2Qg
c2NzaV9tb2QgZWhjaV9oY2QgZ3Bpb19idXR0b25faG90cGx1ZyBleHQ0IG1iY2FjaGUgamJkMiBi
dXR0b25faG90cGx1ZyBpbnB1dF9jb3JlIHVzYmNvcmUgbmxzX2Jhc2UgdXNiX2NvbW1vbiBtaWkg
Y3JjMzJjX2dlbmVyaWMKLS0tLS0tWyBjdXQgaGVyZVsgNDIwMC4xMTE3MTFdIENQVTogMCBQSUQ6
IDAgQ29tbTogc3dhcHBlci8wIE5vdCB0YWludGVkIDUuNC4yOCAjMApbIDQyMDAuMTI2MjEwXSBT
dGFjayA6IDAwMDAwMTIyIDgwMDc1YjkwIDAwMDAwMDAwIDgwNmIwMDAwIDgwNzIwMDAwIDgwNmI4
Y2M4IDgwNmI4MGM4IDhmYzBkZGI0ClsgNDIwMC4xNDI4NDldICAgICAgICAgODA4NjAwMDAgODA2
NGNmNWMgODA3MDMyNDggODA3MDJkODMgMDAwMDAwMDAgMDAwMDAwMDEgOGZjMGRkNTggOGM5ZGZj
MmQKWyA0MjAwLjE1OTQ2NV0gICAgICAgICAwMDAwMDAwMCAwMDAwMDAwMCA4MDhhMDAwMCAwMDAw
MDAwMCAwMDAwMDAzMCAwMDAwMDJkNiAzNDJlMzUyMCAyMDM4MzIyZQpbIDQyMDAuMTc2MDgyXSAg
ICAgICAgIDAwMDAwMDAwIDAwMDAwMGQwIDAwMDAwMDAwIDAwMDFiNDVmIDAwMDAwMDAwIDgwNzIw
MDAwIDAwMDAwMDAwIDgwNDVhN2Y4ClsgNDIwMC4xOTI2OTZdICAgICAgICAgMDAwMDAwMDkgMDAw
MDAwMDAgODEwMDQzNzggMDAyMDAwMDAgMDAwMDAwMDIgODAzNDEyZTQgMDAwMDAwMDAgODA4NjAw
MDAKWyA0MjAwLjIwOTMxMV0gICAgICAgICAuLi4KWyA0MjAwLjIxNDE2M10gQ2FsbCBUcmFjZToK
WyA0MjAwLjIxOTA1Nl0gWzw4MDAwY2ZhYz5dIHNob3dfc3RhY2srMHgzMC8weDEwMApbIDQyMDAu
MjI3OTIzXSBbPDgwNThlOWJjPl0gZHVtcF9zdGFjaysweGE0LzB4ZGMKWyA0MjAwLjIzNjYwM10g
Wzw4MDAyOWVmMD5dIF9fd2FybisweGMwLzB4MTBjClsgNDIwMC4yNDQ3NDJdIFs8ODAwMjlmYzg+
XSB3YXJuX3Nsb3dwYXRoX2ZtdCsweDhjLzB4YWMKWyA0MjAwLjI1NDY0Ml0gWzw4MDQ1YTdmOD5d
IGRldl93YXRjaGRvZysweDJmOC8weDMwMApbIDQyMDAuMjY0MDA4XSBbPDgwMDhlODU4Pl0gY2Fs
bF90aW1lcl9mbi5pc3JhLjArMHgxYy8weDhjClsgNDIwMC4yNzQzOTRdIFs8ODAwOGVhZTg+XSBy
dW5fdGltZXJfc29mdGlycSsweDIyMC8weDIzNApbIDQyMDAuMjg0NjMxXSBbPDgwNWIwNzM4Pl0g
X19kb19zb2Z0aXJxKzB4MTY4LzB4MzM0ClsgNDIwMC4yOTM5ODFdIFs8ODAwMmU1ZGM+XSBpcnFf
ZXhpdCsweDk4LzB4YjAKWyA0MjAwLjMwMjMxMV0gWzw4MDJlMWNhOD5dIHBsYXRfaXJxX2Rpc3Bh
dGNoKzB4NjgvMHhlYwpbIDQyMDAuMzEyMTgwXSBbPDgwMDA3N2E4Pl0gZXhjZXB0X3ZlY192aV9l
bmQrMHhiOC8weGM0ClsgNDIwMC4zMjIwNDhdIFs8ODA1YWZlMTg+XSByNGtfd2FpdF9pcnFvZmYr
MHgxOC8weDIwCiBdLS0tLS0tLS0tLS0tCgpBbnkgaWRlYSBhYm91dCB0aGlzPwoKCkRvbid0IG1p
c3VuZGVyc3RhbmQgbWUsIEkgcmVhbGx5IHdhaXRlZCBmb3IgNS40IG9uIG10NzYyMS4gVGhhbmtz
IGZvciBhbGwgdGhlIGVmZm9ydCBmb3IgdXBncmFkaW5nIGl0IQoKS2luZCByZWdhcmRzLAoKQW5k
csOpCgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18Kb3Bl
bndydC1kZXZlbCBtYWlsaW5nIGxpc3QKb3BlbndydC1kZXZlbEBsaXN0cy5vcGVud3J0Lm9yZwpo
dHRwczovL2xpc3RzLm9wZW53cnQub3JnL21haWxtYW4vbGlzdGluZm8vb3BlbndydC1kZXZlbAo=
