Return-Path: <openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org>
X-Original-To: lists+openwrt-devel@lfdr.de
Delivered-To: lists+openwrt-devel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id C9553109A61
	for <lists+openwrt-devel@lfdr.de>; Tue, 26 Nov 2019 09:46:37 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:Subject:MIME-Version:Message-Id:Date:To
	:From:Reply-To:Content-ID:Content-Description:Resent-Date:Resent-From:
	Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:References:
	List-Owner; bh=OHl+EgXGaBgfe9PPjYHd7ub10ZxjPuNSme9+V0uilJs=; b=ZsxQWJb60N+2FV
	vDT82DjRnWm20cr8BmHI/EmN6188y3beHEpHl8r7rAOI10TuuHWq1Ch4K2/aWJlUKHEgZvWhRNMqq
	Dxg7TOvS4HqoZPCekvydirve+QhfPhOyFze2qq3S7iGplsTR4gfrZ5augUiwWbz2V5I1nWamJm0Gt
	OvSHXtDlPkvoVSGvpqmr/sg33B5TPIRBxU0izhy77cYSl6E9Tg2lPL2L7PFhILZfT94qkRJ4Hl6q3
	XTw4cws7jhaRa6gSTWVcYrJ3U2jSHMkUIrghJOKZ9Mna8ojgy3SokeYSs6zaYRL2VKk5q0eAVL4SK
	64JPTZAMAsMbhUWlqLcA==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1iZWUG-0002ja-O9; Tue, 26 Nov 2019 08:46:20 +0000
Received: from mail-wm1-x32d.google.com ([2a00:1450:4864:20::32d])
 by bombadil.infradead.org with esmtps (Exim 4.92.3 #3 (Red Hat Linux))
 id 1iZWU6-0002in-Ps
 for openwrt-devel@lists.openwrt.org; Tue, 26 Nov 2019 08:46:13 +0000
Received: by mail-wm1-x32d.google.com with SMTP id y5so2255051wmi.5
 for <openwrt-devel@lists.openwrt.org>; Tue, 26 Nov 2019 00:46:08 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=darbyshire-bryant.me.uk; s=google;
 h=from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=TZoUtfc0SwqN/dOl5cMg0NH2OLmuEO1sVW29ADU8Ipo=;
 b=g3MTuAftPLoTvO1QxUv+lAbWjXalXACMKF0+sqhy6AY45/58KMUCWoTeZWIQP75pcY
 0KgpADNXgVu9WrmHRVzRk4Mw6uFurDxj300bMrrtZDr5rG6ZyCQ2QFK2jws88+JdQ6of
 R7HbcaRmYhYJOQIsNLkVYo26vf44ug5q22Odc=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:mime-version
 :content-transfer-encoding;
 bh=TZoUtfc0SwqN/dOl5cMg0NH2OLmuEO1sVW29ADU8Ipo=;
 b=N3iC/NJsGlnz2iDbkzJxUKrl8tEaSBWh8TIN3cKXTJNextDsF4yEhmVfGqxDnJPJJV
 1MK06hZd/YP+hBTBA4pmKxTsY1ZsRI3SaeqpnLxzOxrUXh4ksUkQs4NTL5BuhsdKwkjd
 ioY1H4ZyyzXwdQN7uKSSjk/8EPlO2BZhdiC/+J+AI3Sk39RuTorpEdZCZxci98qcEqYh
 ukCcyH48qMDbsPfQmiSibI4fRCVNYwwqzn/wlHjGgkmTBEpOYs/POAECYYuSwhYQBXPy
 WNFfWwoM6sxXDKM2Vef+/1oz1RBIgoTPCKnngnEKt/t4WQW65ZFss1E83XD836a7yUE4
 NxyA==
X-Gm-Message-State: APjAAAVhl4YX69wPpXJfuVvvRlLTTQKAYLKwdAD6PUdXevbUuYDX3laL
 QKoni1dLYNUvgn93L/6FTXHCYpapn58FCQ==
X-Google-Smtp-Source: APXvYqxHKc36lU8uiaMo1TLIzqjYArCl0McOXQj9krRGGGhUcotGetgj7ad2L90ux6jxT5duREsAgA==
X-Received: by 2002:a1c:a906:: with SMTP id s6mr3100135wme.125.1574757966155; 
 Tue, 26 Nov 2019 00:46:06 -0800 (PST)
Received: from Kevins-MBP.lan.darbyshire-bryant.me.uk
 ([2a02:c7f:1243:8e00:dd25:1f58:88cd:5281])
 by smtp.gmail.com with ESMTPSA id t134sm2323144wmt.24.2019.11.26.00.46.04
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
 Tue, 26 Nov 2019 00:46:04 -0800 (PST)
From: Kevin Darbyshire-Bryant <ldir@darbyshire-bryant.me.uk>
To: openwrt-devel@lists.openwrt.org
Date: Tue, 26 Nov 2019 08:45:38 +0000
Message-Id: <20191126084537.30505-1-ldir@darbyshire-bryant.me.uk>
X-Mailer: git-send-email 2.21.0 (Apple Git-122.2)
MIME-Version: 1.0
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20191126_004610_848428_52D548C4 
X-CRM114-Status: GOOD (  18.68  )
X-Spam-Score: -0.2 (/)
X-Spam-Report: SpamAssassin version 3.4.2 on bombadil.infradead.org summary:
 Content analysis details:   (-0.2 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -0.0 RCVD_IN_DNSWL_NONE     RBL: Sender listed at https://www.dnswl.org/,
 no trust [2a00:1450:4864:20:0:0:0:32d listed in]
 [list.dnswl.org]
 -0.0 SPF_PASS               SPF: sender matches SPF record
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 -0.1 DKIM_VALID_EF          Message has a valid DKIM or DK signature from
 envelope-from domain
 0.1 DKIM_SIGNED            Message has a DKIM or DK signature, not necessarily
 valid
 -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
 -0.1 DKIM_VALID_AU          Message has a valid DKIM or DK signature from
 author's domain
Subject: [OpenWrt-Devel] [PATCH] kernel: act_ctinfo: update backport
X-BeenThere: openwrt-devel@lists.openwrt.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <openwrt-devel.lists.openwrt.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/openwrt-devel>, 
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/openwrt-devel/>
List-Post: <mailto:openwrt-devel@lists.openwrt.org>
List-Help: <mailto:openwrt-devel-request@lists.openwrt.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/openwrt-devel>,
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=subscribe>
Cc: Kevin Darbyshire-Bryant <ldir@darbyshire-bryant.me.uk>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "openwrt-devel" <openwrt-devel-bounces@lists.openwrt.org>
Errors-To: openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org

U2luY2UgdGhlIG9yaWdpbmFsIGJhY2twb3J0cyBmcm9tIGtlcm5lbCA1LjMgYSBmZXcgdGhpbmdz
IGhhdmUgYmVlbgp0d2Vha2VkIGJ5IGtlcm5lbCBidW1wcyAmIG90aGVyIHVwc3RyZWFtIGNoYW5n
ZXMuICBVcGRhdGUgdGhlIGJhY2twb3J0CnRvIHJlZmxlY3QgdXBzdHJlYW0gYXMgY2xvc2VseSBh
cyBwb3NzaWJsZSBhbmQgcmVtb3ZlIHRoZSBiaXRyb3QuCgpGdW5jdGlvbnMgcmVtYWluIHRoZSBz
YW1lLCBlcnJvciByZXBvcnRpbmcgaW1wcm92ZWQuCgpTaWduZWQtb2ZmLWJ5OiBLZXZpbiBEYXJi
eXNoaXJlLUJyeWFudCA8bGRpckBkYXJieXNoaXJlLWJyeWFudC5tZS51az4KLS0tCiAuLi5ldC1z
Y2hlZC1JbnRyb2R1Y2UtYWN0X2N0aW5mby1hY3Rpb24ucGF0Y2ggfCAxNDIgKysrKysrKysrKysr
KystLS0tCiAuLi5ldC1zY2hlZC1JbnRyb2R1Y2UtYWN0X2N0aW5mby1hY3Rpb24ucGF0Y2ggfCAx
NDAgKysrKysrKysrKysrLS0tLS0KIDIgZmlsZXMgY2hhbmdlZCwgMjEwIGluc2VydGlvbnMoKyks
IDcyIGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBhL3RhcmdldC9saW51eC9nZW5lcmljL2JhY2tw
b3J0LTQuMTQvMzgwLXY1LjMtbmV0LXNjaGVkLUludHJvZHVjZS1hY3RfY3RpbmZvLWFjdGlvbi5w
YXRjaCBiL3RhcmdldC9saW51eC9nZW5lcmljL2JhY2twb3J0LTQuMTQvMzgwLXY1LjMtbmV0LXNj
aGVkLUludHJvZHVjZS1hY3RfY3RpbmZvLWFjdGlvbi5wYXRjaAppbmRleCBkMmNiMDUzMmM5Li4x
MDUzNzQyZTZlIDEwMDY0NAotLS0gYS90YXJnZXQvbGludXgvZ2VuZXJpYy9iYWNrcG9ydC00LjE0
LzM4MC12NS4zLW5ldC1zY2hlZC1JbnRyb2R1Y2UtYWN0X2N0aW5mby1hY3Rpb24ucGF0Y2gKKysr
IGIvdGFyZ2V0L2xpbnV4L2dlbmVyaWMvYmFja3BvcnQtNC4xNC8zODAtdjUuMy1uZXQtc2NoZWQt
SW50cm9kdWNlLWFjdF9jdGluZm8tYWN0aW9uLnBhdGNoCkBAIC0xLDQ3ICsxLDExMCBAQAotRnJv
bSBlMzc3N2RkNDJkYzZmMWI5Y2IwOTk4MzY3MDdhM2U3OTcxZGNmNGRmIE1vbiBTZXAgMTcgMDA6
MDA6MDAgMjAwMQorRnJvbSBhMDZlY2U1MDNkOTQxZWVmYTkyYmE0OGRjOTgxY2NhYTQwOTMzMzBi
IE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQogRnJvbTogS2V2aW4gRGFyYnlzaGlyZS1CcnlhbnQg
PGxkaXJAZGFyYnlzaGlyZS1icnlhbnQubWUudWs+CiBEYXRlOiBXZWQsIDEzIE1hciAyMDE5IDIw
OjU0OjQ5ICswMDAwCi1TdWJqZWN0OiBbUEFUQ0hdIG5ldDogc2NoZWQ6IEludHJvZHVjZSBhY3Rf
Y3RpbmZvIGFjdGlvbgorU3ViamVjdDogW1BBVENIXSBuZXQ6IHNjaGVkOiBCYWNrcG9ydCBJbnRy
b2R1Y2UgYWN0X2N0aW5mbyBhY3Rpb24KK01JTUUtVmVyc2lvbjogMS4wCitDb250ZW50LVR5cGU6
IHRleHQvcGxhaW47IGNoYXJzZXQ9VVRGLTgKK0NvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDhi
aXQKIAotY3RpbmZvIGlzIGEgbmV3IHRjIGZpbHRlciBhY3Rpb24gbW9kdWxlLiAgSXQgaXMgZGVz
aWduZWQgdG8gcmVzdG9yZSBEU0NQcwotc3RvcmVkIGluIGNvbm50cmFjayBtYXJrcworY3RpbmZv
IGlzIGEgbmV3IHRjIGZpbHRlciBhY3Rpb24gbW9kdWxlLiAgSXQgaXMgZGVzaWduZWQgdG8gcmVz
dG9yZQoraW5mb3JtYXRpb24gY29udGFpbmVkIGluIGZpcmV3YWxsIGNvbm50cmFjayBtYXJrcyB0
byBvdGhlciBwYWNrZXQgZmllbGRzCithbmQgaXMgdHlwaWNhbGx5IHVzZWQgb24gcGFja2V0IGlu
Z3Jlc3MgcGF0aHMuICBBdCBwcmVzZW50IGl0IGhhcyB0d28KK2luZGVwZW5kZW50IHN1Yi1mdW5j
dGlvbnMgb3Igb3BlcmF0aW5nIG1vZGVzLCBEU0NQIHJlc3RvcmF0aW9uIG1vZGUgJgorc2tiIG1h
cmsgcmVzdG9yYXRpb24gbW9kZS4KIAotVGhlIGZlYXR1cmUgaXMgaW50ZW5kZWQgZm9yIHVzZSBh
bmQgaGFzIGJlZW4gZm91bmQgdXNlZnVsIGZvciByZXN0b3JpbmcKLWluZ3Jlc3MgY2xhc3NpZmlj
YXRpb25zIGJhc2VkIG9uIGVncmVzcyBjbGFzc2lmaWNhdGlvbnMgYWNyb3NzIGxpbmtzCi10aGF0
IGJsZWFjaCBvciBvdGhlcndpc2UgY2hhbmdlIERTQ1AsIHR5cGljYWxseSBob21lIElTUCBJbnRl
cm5ldCBsaW5rcy4KLVJlc3RvcmluZyBEU0NQIG9uIGluZ3Jlc3Mgb24gdGhlIFdBTiBsaW5rIGFs
bG93cyBxZGlzY3Mgc3VjaCBhcyBDQUtFIHRvCi1zaGFwZSBpbmJvdW5kIHBhY2tldHMgYWNjb3Jk
aW5nIHRvIHBvbGljaWVzIHRoYXQgYXJlIGVhc2llciB0byBpbXBsZW1lbnQKLW9uIGVncmVzcy4K
K1RoZSBEU0NQIHJlc3RvcmUgbW9kZToKKworVGhpcyBtb2RlIGNvcGllcyBEU0NQIHZhbHVlcyB0
aGF0IGhhdmUgYmVlbiBwbGFjZWQgaW4gdGhlIGZpcmV3YWxsCitjb25udHJhY2sgbWFyayBiYWNr
IGludG8gdGhlIElQdjQvdjYgZGlmZnNlcnYgZmllbGRzIG9mIHJlbGV2YW50CitwYWNrZXRzLgor
CitUaGUgRFNDUCByZXN0b3JhdGlvbiBpcyBpbnRlbmRlZCBmb3IgdXNlIGFuZCBoYXMgYmVlbiBm
b3VuZCB1c2VmdWwgZm9yCityZXN0b3JpbmcgaW5ncmVzcyBjbGFzc2lmaWNhdGlvbnMgYmFzZWQg
b24gZWdyZXNzIGNsYXNzaWZpY2F0aW9ucyBhY3Jvc3MKK2xpbmtzIHRoYXQgYmxlYWNoIG9yIG90
aGVyd2lzZSBjaGFuZ2UgRFNDUCwgdHlwaWNhbGx5IGhvbWUgSVNQIEludGVybmV0CitsaW5rcy4g
IFJlc3RvcmluZyBEU0NQIG9uIGluZ3Jlc3Mgb24gdGhlIFdBTiBsaW5rIGFsbG93cyBxZGlzY3Mg
c3VjaCBhcworYnV0IGJ5IG5vIG1lYW5zIGxpbWl0ZWQgdG8gQ0FLRSB0byBzaGFwZSBpbmJvdW5k
IHBhY2tldHMgYWNjb3JkaW5nIHRvCitwb2xpY2llcyB0aGF0IGFyZSBlYXNpZXIgdG8gc2V0ICYg
bWFyayBvbiBlZ3Jlc3MuCiAKIEluZ3Jlc3MgY2xhc3NpZmljYXRpb24gaXMgdHJhZGl0aW9uYWxs
eSBhIGNoYWxsZW5naW5nIHRhc2sgc2luY2UKIGlwdGFibGVzIHJ1bGVzIGhhdmVuJ3QgeWV0IHJ1
biBhbmQgdGMgZmlsdGVyL2VCUEYgcHJvZ3JhbXMgYXJlIHByZS1OQVQKIGxvb2t1cHMsIGhlbmNl
IGFyZSB1bmFibGUgdG8gc2VlIGludGVybmFsIElQdjQgYWRkcmVzc2VzIGFzIHVzZWQgb24gdGhl
Ci10eXBpY2FsIGhvbWUgbWFzcXVlcmFkaW5nIGdhdGV3YXkuCi0KLWN0aW5mbyB1bmRlcnN0YW5k
cyB0aGUgZm9sbG93aW5nIHBhcmFtZXRlcnM6Cit0eXBpY2FsIGhvbWUgbWFzcXVlcmFkaW5nIGdh
dGV3YXkuICBUaHVzIG1hcmtpbmcgdGhlIGNvbm5lY3Rpb24gaW4gc29tZQorbWFubmVyIG9uIGVn
cmVzcyBmb3IgbGF0ZXIgcmVzdG9yYXRpb24gb2YgY2xhc3NpZmljYXRpb24gb24gaW5ncmVzcyBp
cworZWFzaWVyIHRvIGltcGxlbWVudC4KIAotZHNjcCBtYXNrWy9zdGF0ZW1hc2tdCitQYXJhbWV0
ZXJzIHJlbGF0ZWQgdG8gRFNDUCByZXN0b3JlIG1vZGU6CiAKLW1hc2sgLSBhIDMyIGJpdCBtYXNr
IG9mIGF0IGxlYXN0IDYgY29udGlndW91cyBiaXRzIHdoZXJlIGNvbm5kc2NwIHdpbGwKLXBsYWNl
IHRoZSBEU0NQIGluIGNvbm50cmFjayBtYXJrLiAgVGhlIERTQ1AgaXMgbGVmdC1zaGlmdGVkIGJ5
IHRoZQotbnVtYmVyIG9mIHVuc2V0IGxvd2VyIGJpdHMgb2YgdGhlIG1hc2sgYmVmb3JlIHN0b3Jp
bmcgaW50byB0aGUgbWFyawotZmllbGQuCitkc2NwbWFzayAtIGEgMzIgYml0IG1hc2sgb2YgNiBj
b250aWd1b3VzIGJpdHMgYW5kIGluZGljYXRlIGJpdHMgb2YgdGhlCitjb25udHJhY2sgbWFyayBm
aWVsZCBjb250YWluIHRoZSBEU0NQIHZhbHVlIHRvIGJlIHJlc3RvcmVkLgogCiBzdGF0ZW1hc2sg
LSBhIDMyIGJpdCBtYXNrIG9mICh1c3VhbGx5KSAxIGJpdCBsZW5ndGgsIG91dHNpZGUgdGhlIGFy
ZWEKLXNwZWNpZmllZCBieSBtYXNrLiAgVGhpcyByZXByZXNlbnRzIGEgY29uZGl0aW9uYWwgb3Bl
cmF0aW9uIGZsYWcgdGhlCi1EU0NQIGlzIG9ubHkgcmVzdG9yZWQgaWYgdGhlIGZsYWcgaXMgc2V0
LiAgVGhpcyBpcyB1c2VmdWwgdG8gaW1wbGVtZW50IGEKLSdvbmUgc2hvdCcgaXB0YWJsZXMgYmFz
ZWQgY2xhc3NpZmljYXRpb24gd2hlcmUgdGhlICdjb21wbGljYXRlZCcKLWlwdGFibGVzIHJ1bGVz
IGFyZSBvbmx5IHJ1biBvbmNlIHRvIGNsYXNzaWZ5IHRoZSBjb25uZWN0aW9uIG9uIGluaXRpYWwK
LShlZ3Jlc3MpIHBhY2tldCBhbmQgc3Vic2VxdWVudCBwYWNrZXRzIGFyZSBhbGwgbWFya2VkL3Jl
c3RvcmVkIHdpdGggdGhlCi1zYW1lIERTQ1AuICBBIG1hc2sgb2YgemVybyBkaXNhYmxlcyB0aGUg
Y29uZGl0aW9uYWwgYmVoYXZpb3VyLgorc3BlY2lmaWVkIGJ5IGRzY3BtYXNrLiAgVGhpcyByZXBy
ZXNlbnRzIGEgY29uZGl0aW9uYWwgb3BlcmF0aW9uIGZsYWcKK3doZXJlYnkgdGhlIERTQ1AgaXMg
b25seSByZXN0b3JlZCBpZiB0aGUgZmxhZyBpcyBzZXQuICBUaGlzIGlzIHVzZWZ1bCB0bworaW1w
bGVtZW50IGEgJ29uZSBzaG90JyBpcHRhYmxlcyBiYXNlZCBjbGFzc2lmaWNhdGlvbiB3aGVyZSB0
aGUKKydjb21wbGljYXRlZCcgaXB0YWJsZXMgcnVsZXMgYXJlIG9ubHkgcnVuIG9uY2UgdG8gY2xh
c3NpZnkgdGhlCitjb25uZWN0aW9uIG9uIGluaXRpYWwgKGVncmVzcykgcGFja2V0IGFuZCBzdWJz
ZXF1ZW50IHBhY2tldHMgYXJlIGFsbAorbWFya2VkL3Jlc3RvcmVkIHdpdGggdGhlIHNhbWUgRFND
UC4gIEEgbWFzayBvZiB6ZXJvIGRpc2FibGVzIHRoZQorY29uZGl0aW9uYWwgYmVoYXZpb3VyIGll
LiB0aGUgY29ubnRyYWNrIG1hcmsgRFNDUCBiaXRzIGFyZSBhbHdheXMKK3Jlc3RvcmVkIHRvIHRo
ZSBpcCBkaWZmc2VydiBmaWVsZCAoYXNzdW1pbmcgdGhlIGNvbm50cmFjayBlbnRyeSBpcyBmb3Vu
ZAorJiB0aGUgc2tiIGlzIGFuIGlwdjQvaXB2NiB0eXBlKQorCitlLmcuIGRzY3BtYXNrIDB4ZmMw
MDAwMDAgc3RhdGVtYXNrIDB4MDEwMDAwMDAKKworfC0tLS0weEZDLS0tLWNvbm50cmFjayBtYXJr
LS0tLTAwMDAwMC0tLXwKK3wgQml0cyAzMS0yNiB8IGJpdCAyNSB8IGJpdDI0IHx+fn4gQml0IDB8
Cit8IERTQ1AgICAgICAgfCB1bnVzZWQgfCBmbGFnICB8dW51c2VkICAgfAorfC0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tMHgwMS0tLTAwMDAwMC0tLXwKKyAgICAgIHwgICAgICAgICAgICAgICAgICAg
fAorICAgICAgfCAgICAgICAgICAgICAgICAgICB8CisgICAgICAtLS18ICAgICAgICAgICAgIENv
bmRpdGlvbmFsIGZsYWcKKyAgICAgICAgIHYgICAgICAgICAgICAgb25seSByZXN0b3JlIGlmIHNl
dAorfC1pcCBkaWZmc2Vydi18Cit8IDYgYml0cyAgICAgIHwKK3wtLS0tLS0tLS0tLS0tfAorCitU
aGUgc2tiIG1hcmsgcmVzdG9yZSBtb2RlIChjcG1hcmspOgorCitUaGlzIG1vZGUgY29waWVzIHRo
ZSBmaXJld2FsbCBjb25udHJhY2sgbWFyayB0byB0aGUgc2tiJ3MgbWFyayBmaWVsZC4KK0l0IGlz
IGNvbXBsZXRlbHkgdGhlIGZ1bmN0aW9uYWwgZXF1aXZhbGVudCBvZiB0aGUgZXhpc3RpbmcgYWN0
X2Nvbm5tYXJrCithY3Rpb24gd2l0aCB0aGUgYWRkaXRpb25hbCBmZWF0dXJlIG9mIGJlaW5nIGFi
bGUgdG8gYXBwbHkgYSBtYXNrIHRvIHRoZQorcmVzdG9yZWQgdmFsdWUuCisKK1BhcmFtZXRlcnMg
cmVsYXRlZCB0byBza2IgbWFyayByZXN0b3JlIG1vZGU6CisKK21hc2sgLSBhIDMyIGJpdCBtYXNr
IGFwcGxpZWQgdG8gdGhlIGZpcmV3YWxsIGNvbm50cmFjayBtYXJrIHRvIG1hc2sgb3V0CitiaXRz
IHVud2FudGVkIGZvciByZXN0b3JhdGlvbi4gIFRoaXMgY2FuIGJlIHVzZWZ1bCB3aGVyZSB0aGUg
Y29ubnRyYWNrCittYXJrIGlzIGJlaW5nIHVzZWQgZm9yIGRpZmZlcmVudCBwdXJwb3NlcyBieSBk
aWZmZXJlbnQgYXBwbGljYXRpb25zLiAgSWYKK25vdCBzcGVjaWZpZWQgYW5kIGJ5IGRlZmF1bHQg
dGhlIHdob2xlIG1hcmsgZmllbGQgaXMgY29waWVkIChpLmUuCitkZWZhdWx0IG1hc2sgb2YgMHhm
ZmZmZmZmZikKIAotb3B0aW9uYWwgcGFyYW1ldGVyczoKK2UuZy4gbWFzayAweDAwZmZmZmZmIHRv
IG1hc2sgb3V0IHRoZSB0b3AgOCBiaXRzIGJlaW5nIHVzZWQgYnkgdGhlCithZm9yZW1lbnRpb25l
ZCBEU0NQIHJlc3RvcmUgbW9kZS4KKworfC0tLS0weDAwLS0tLWNvbm50cmFjayBtYXJrLS0tLWZm
ZmZmZi0tLXwKK3wgQml0cyAzMS0yNCB8ICAgICAgICAgICAgICAgICAgICAgICAgICB8Cit8IERT
Q1AgJiBmbGFnfCAgICAgIHNvbWUgdmFsdWUgaGVyZSAgICAgfAorfC0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwKKwkJCXwKKwkJCXwKKwkJCXYKK3wtLS0tLS0tLS0tLS1z
a2IgbWFyay0tLS0tLS0tLS0tLS0tLS0tLS18Cit8ICAgICAgICAgICAgfCAgICAgICAgICAgICAg
ICAgICAgICAgICAgfAorfCAgemVyb2VkICAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgIHwK
K3wtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS18CisKK092ZXJhbGwgcGFy
YW1ldGVyczoKIAogem9uZSAtIGNvbm50cmFjayB6b25lCiAKIGNvbnRyb2wgLSBhY3Rpb24gcmVs
YXRlZCBjb250cm9sIChyZWNsYXNzaWZ5IHwgcGlwZSB8IGRyb3AgfCBjb250aW51ZSB8Ci1vayB8
IGdvdG8gY2hhaW4gPENIQUlOX0lOREVYPgorb2sgfCBnb3RvIGNoYWluIDxDSEFJTl9JTkRFWD4p
CisKK1NpZ25lZC1vZmYtYnk6IEtldmluIERhcmJ5c2hpcmUtQnJ5YW50IDxsZGlyQGRhcmJ5c2hp
cmUtYnJ5YW50Lm1lLnVrPgorUmV2aWV3ZWQtYnk6IFRva2UgSMO4aWxhbmQtSsO4cmdlbnNlbiA8
dG9rZUByZWRoYXQuY29tPgorQWNrZWQtYnk6IENvbmcgV2FuZyA8eGl5b3Uud2FuZ2NvbmdAZ21h
aWwuY29tPgorU2lnbmVkLW9mZi1ieTogRGF2aWQgUy4gTWlsbGVyIDxkYXZlbUBkYXZlbWxvZnQu
bmV0PgogCitCYWNrcG9ydAogU2lnbmVkLW9mZi1ieTogS2V2aW4gRGFyYnlzaGlyZS1CcnlhbnQg
PGxkaXJAZGFyYnlzaGlyZS1icnlhbnQubWUudWs+CiAtLS0KICBpbmNsdWRlL25ldC90Y19hY3Qv
dGNfY3RpbmZvLmggICAgICAgIHwgIDMzICsrKwpAQCAtNDksOCArMTEyLDggQEAgU2lnbmVkLW9m
Zi1ieTogS2V2aW4gRGFyYnlzaGlyZS1CcnlhbnQgPGxkaXJAZGFyYnlzaGlyZS1icnlhbnQubWUu
dWs+CiAgaW5jbHVkZS91YXBpL2xpbnV4L3RjX2FjdC90Y19jdGluZm8uaCB8ICAyOSArKwogIG5l
dC9zY2hlZC9LY29uZmlnICAgICAgICAgICAgICAgICAgICAgfCAgMTMgKwogIG5ldC9zY2hlZC9N
YWtlZmlsZSAgICAgICAgICAgICAgICAgICAgfCAgIDEgKwotIG5ldC9zY2hlZC9hY3RfY3RpbmZv
LmMgICAgICAgICAgICAgICAgfCAzOTQgKysrKysrKysrKysrKysrKysrKysrKysrKysKLSA2IGZp
bGVzIGNoYW5nZWQsIDQ3MiBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0pCisgbmV0L3NjaGVk
L2FjdF9jdGluZm8uYyAgICAgICAgICAgICAgICB8IDQwNyArKysrKysrKysrKysrKysrKysrKysr
KysrKworIDYgZmlsZXMgY2hhbmdlZCwgNDg1IGluc2VydGlvbnMoKyksIDEgZGVsZXRpb24oLSkK
ICBjcmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9uZXQvdGNfYWN0L3RjX2N0aW5mby5oCiAgY3Jl
YXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvdWFwaS9saW51eC90Y19hY3QvdGNfY3RpbmZvLmgKICBj
cmVhdGUgbW9kZSAxMDA2NDQgbmV0L3NjaGVkL2FjdF9jdGluZm8uYwpAQCAtMTY5LDcgKzIzMiw3
IEBAIFNpZ25lZC1vZmYtYnk6IEtldmluIERhcmJ5c2hpcmUtQnJ5YW50IDxsZGlyQGRhcmJ5c2hp
cmUtYnJ5YW50Lm1lLnVrPgogIG9iai0kKENPTkZJR19ORVRfSUZFX1NLQk1BUkspCSs9IGFjdF9t
ZXRhX21hcmsubwogLS0tIC9kZXYvbnVsbAogKysrIGIvbmV0L3NjaGVkL2FjdF9jdGluZm8uYwot
QEAgLTAsMCArMSwzOTQgQEAKK0BAIC0wLDAgKzEsNDA3IEBACiArLy8gU1BEWC1MaWNlbnNlLUlk
ZW50aWZpZXI6IEdQTC0yLjArCiArLyogbmV0L3NjaGVkL2FjdF9jdGluZm8uYyAgbmV0ZmlsdGVy
IGN0aW5mbyBjb25ubWFyayBhY3Rpb25zCiArICoKQEAgLTMzNywxNSArNDAwLDIwIEBAIFNpZ25l
ZC1vZmYtYnk6IEtldmluIERhcmJ5c2hpcmUtQnJ5YW50IDxsZGlyQGRhcmJ5c2hpcmUtYnJ5YW50
Lm1lLnVrPgogKwl1OCBkc2NwbWFza3NoaWZ0OwogKwlpbnQgcmV0ID0gMCwgZXJyOwogKwotKwlp
ZiAoIW5sYSkKKysJaWYgKCFubGEpIHsKKysJCU5MX1NFVF9FUlJfTVNHX01PRChleHRhY2ssICJj
dGluZm8gcmVxdWlyZXMgYXR0cmlidXRlcyB0byBiZSBwYXNzZWQiKTsKICsJCXJldHVybiAtRUlO
VkFMOworKwl9CiArCiArCWVyciA9IG5sYV9wYXJzZV9uZXN0ZWQodGIsIFRDQV9DVElORk9fTUFY
LCBubGEsIGN0aW5mb19wb2xpY3ksIE5VTEwpOwogKwlpZiAoZXJyIDwgMCkKICsJCXJldHVybiBl
cnI7CiArCi0rCWlmICghdGJbVENBX0NUSU5GT19BQ1RdKQorKwlpZiAoIXRiW1RDQV9DVElORk9f
QUNUXSkgeworKwkJTkxfU0VUX0VSUl9NU0dfTU9EKGV4dGFjaywKKysJCQkJICAgIk1pc3Npbmcg
cmVxdWlyZWQgVENBX0NUSU5GT19BQ1QgYXR0cmlidXRlIik7CiArCQlyZXR1cm4gLUVJTlZBTDsK
KysJfQogKwlhY3RwYXJtID0gbmxhX2RhdGEodGJbVENBX0NUSU5GT19BQ1RdKTsKICsKICsJLyog
ZG8gc29tZSBiYXNpYyB2YWxpZGF0aW9uIGhlcmUgYmVmb3JlIGR5bmFtaWNhbGx5IGFsbG9jYXRp
bmcgdGhpbmdzICovCkBAIC0zNTQsMTMgKzQyMiwyMSBAQCBTaWduZWQtb2ZmLWJ5OiBLZXZpbiBE
YXJieXNoaXJlLUJyeWFudCA8bGRpckBkYXJieXNoaXJlLWJyeWFudC5tZS51az4KICsJCWRzY3Bt
YXNrID0gbmxhX2dldF91MzIodGJbVENBX0NUSU5GT19QQVJNU19EU0NQX01BU0tdKTsKICsJCS8q
IG5lZWQgY29udGlndW91cyA2IGJpdCBtYXNrICovCiArCQlkc2NwbWFza3NoaWZ0ID0gZHNjcG1h
c2sgPyBfX2Zmcyhkc2NwbWFzaykgOiAwOwotKwkJaWYgKCh+MCAmIChkc2NwbWFzayA+PiBkc2Nw
bWFza3NoaWZ0KSkgIT0gMHgzZikKKysJCWlmICgofjAgJiAoZHNjcG1hc2sgPj4gZHNjcG1hc2tz
aGlmdCkpICE9IDB4M2YpIHsKKysJCQlOTF9TRVRfRVJSX01TR19BVFRSKGV4dGFjaywKKysJCQkJ
CSAgICB0YltUQ0FfQ1RJTkZPX1BBUk1TX0RTQ1BfTUFTS10sCisrCQkJCQkgICAgImRzY3AgbWFz
ayBtdXN0IGJlIDYgY29udGlndW91cyBiaXRzIik7CiArCQkJcmV0dXJuIC1FSU5WQUw7CisrCQl9
CiArCQlkc2Nwc3RhdGVtYXNrID0gdGJbVENBX0NUSU5GT19QQVJNU19EU0NQX1NUQVRFTUFTS10g
PwogKwkJCW5sYV9nZXRfdTMyKHRiW1RDQV9DVElORk9fUEFSTVNfRFNDUF9TVEFURU1BU0tdKSA6
IDA7CiArCQkvKiBtYXNrICYgc3RhdGVtYXNrIG11c3Qgbm90IG92ZXJsYXAgKi8KLSsJCWlmIChk
c2NwbWFzayAmIGRzY3BzdGF0ZW1hc2spCisrCQlpZiAoZHNjcG1hc2sgJiBkc2Nwc3RhdGVtYXNr
KSB7CisrCQkJTkxfU0VUX0VSUl9NU0dfQVRUUihleHRhY2ssCisrCQkJCQkgICAgdGJbVENBX0NU
SU5GT19QQVJNU19EU0NQX1NUQVRFTUFTS10sCisrCQkJCQkgICAgImRzY3Agc3RhdGVtYXNrIG11
c3Qgbm90IG92ZXJsYXAgZHNjcCBtYXNrIik7CiArCQkJcmV0dXJuIC1FSU5WQUw7CisrCQl9CiAr
CX0KICsJLyogZG9uZSB0aGUgdmFsaWRhdGlvbjpub3cgdG8gdGhlIGFjdHVhbCBhY3Rpb24gYWxs
b2NhdGlvbiAqLwogKwllcnIgPSB0Y2ZfaWRyX2NoZWNrKHRuLCBhY3RwYXJtLT5pbmRleCwgYSwg
YmluZCk7CmRpZmYgLS1naXQgYS90YXJnZXQvbGludXgvZ2VuZXJpYy9iYWNrcG9ydC00LjE5LzM4
MC12NS4zLW5ldC1zY2hlZC1JbnRyb2R1Y2UtYWN0X2N0aW5mby1hY3Rpb24ucGF0Y2ggYi90YXJn
ZXQvbGludXgvZ2VuZXJpYy9iYWNrcG9ydC00LjE5LzM4MC12NS4zLW5ldC1zY2hlZC1JbnRyb2R1
Y2UtYWN0X2N0aW5mby1hY3Rpb24ucGF0Y2gKaW5kZXggOTA5YzY4ZTFiNS4uOGUwNGRjZTMwOSAx
MDA2NDQKLS0tIGEvdGFyZ2V0L2xpbnV4L2dlbmVyaWMvYmFja3BvcnQtNC4xOS8zODAtdjUuMy1u
ZXQtc2NoZWQtSW50cm9kdWNlLWFjdF9jdGluZm8tYWN0aW9uLnBhdGNoCisrKyBiL3RhcmdldC9s
aW51eC9nZW5lcmljL2JhY2twb3J0LTQuMTkvMzgwLXY1LjMtbmV0LXNjaGVkLUludHJvZHVjZS1h
Y3RfY3RpbmZvLWFjdGlvbi5wYXRjaApAQCAtMSwyOSArMSw0MSBAQAotRnJvbSBjMTc4NzdlNDE0
MTU1YjliOTdkMTA0MTZmZjYyYjEwMmQyNTAxOWExIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQor
RnJvbSA2ZDgwNzFiYmJkY2Q5ZDNhMmZiYjQ5ZTU1YjUxNjE3OTA2ZTNiODE2IE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQogRnJvbTogS2V2aW4gRGFyYnlzaGlyZS1CcnlhbnQgPGxkaXJAZGFyYnlz
aGlyZS1icnlhbnQubWUudWs+CiBEYXRlOiBXZWQsIDEzIE1hciAyMDE5IDIwOjU0OjQ5ICswMDAw
Ci1TdWJqZWN0OiBbUEFUQ0hdIG5ldDogc2NoZWQ6IEludHJvZHVjZSBhY3RfY3RpbmZvIGFjdGlv
bgorU3ViamVjdDogW1BBVENIXSBuZXQ6IHNjaGVkOiBCYWNrcG9ydCBJbnRyb2R1Y2UgYWN0X2N0
aW5mbyBhY3Rpb24KK01JTUUtVmVyc2lvbjogMS4wCitDb250ZW50LVR5cGU6IHRleHQvcGxhaW47
IGNoYXJzZXQ9VVRGLTgKK0NvbnRlbnQtVHJhbnNmZXItRW5jb2Rpbmc6IDhiaXQKIAotY3RpbmZv
IGlzIGEgbmV3IHRjIGZpbHRlciBhY3Rpb24gbW9kdWxlLiAgSXQgaXMgZGVzaWduZWQgdG8gcmVz
dG9yZSBEU0NQcwotc3RvcmVkIGluIGNvbm50cmFjayBtYXJrcyBpbnRvIHRoZSBpcHY0L3Y2IGRp
ZmZzZXJ2IGZpZWxkLgorY3RpbmZvIGlzIGEgbmV3IHRjIGZpbHRlciBhY3Rpb24gbW9kdWxlLiAg
SXQgaXMgZGVzaWduZWQgdG8gcmVzdG9yZQoraW5mb3JtYXRpb24gY29udGFpbmVkIGluIGZpcmV3
YWxsIGNvbm50cmFjayBtYXJrcyB0byBvdGhlciBwYWNrZXQgZmllbGRzCithbmQgaXMgdHlwaWNh
bGx5IHVzZWQgb24gcGFja2V0IGluZ3Jlc3MgcGF0aHMuICBBdCBwcmVzZW50IGl0IGhhcyB0d28K
K2luZGVwZW5kZW50IHN1Yi1mdW5jdGlvbnMgb3Igb3BlcmF0aW5nIG1vZGVzLCBEU0NQIHJlc3Rv
cmF0aW9uIG1vZGUgJgorc2tiIG1hcmsgcmVzdG9yYXRpb24gbW9kZS4KIAotVGhlIGZlYXR1cmUg
aXMgaW50ZW5kZWQgZm9yIHVzZSBhbmQgaGFzIGJlZW4gZm91bmQgdXNlZnVsIGZvciByZXN0b3Jp
bmcKLWluZ3Jlc3MgY2xhc3NpZmljYXRpb25zIGJhc2VkIG9uIGVncmVzcyBjbGFzc2lmaWNhdGlv
bnMgYWNyb3NzIGxpbmtzCi10aGF0IGJsZWFjaCBvciBvdGhlcndpc2UgY2hhbmdlIERTQ1AsIHR5
cGljYWxseSBob21lIElTUCBJbnRlcm5ldCBsaW5rcy4KLVJlc3RvcmluZyBEU0NQIG9uIGluZ3Jl
c3Mgb24gdGhlIFdBTiBsaW5rIGFsbG93cyBxZGlzY3Mgc3VjaCBhcyBDQUtFIHRvCi1zaGFwZSBp
bmJvdW5kIHBhY2tldHMgYWNjb3JkaW5nIHRvIHBvbGljaWVzIHRoYXQgYXJlIGVhc2llciB0byBp
bmRpY2F0ZQotb24gZWdyZXNzLgorVGhlIERTQ1AgcmVzdG9yZSBtb2RlOgorCitUaGlzIG1vZGUg
Y29waWVzIERTQ1AgdmFsdWVzIHRoYXQgaGF2ZSBiZWVuIHBsYWNlZCBpbiB0aGUgZmlyZXdhbGwK
K2Nvbm50cmFjayBtYXJrIGJhY2sgaW50byB0aGUgSVB2NC92NiBkaWZmc2VydiBmaWVsZHMgb2Yg
cmVsZXZhbnQKK3BhY2tldHMuCisKK1RoZSBEU0NQIHJlc3RvcmF0aW9uIGlzIGludGVuZGVkIGZv
ciB1c2UgYW5kIGhhcyBiZWVuIGZvdW5kIHVzZWZ1bCBmb3IKK3Jlc3RvcmluZyBpbmdyZXNzIGNs
YXNzaWZpY2F0aW9ucyBiYXNlZCBvbiBlZ3Jlc3MgY2xhc3NpZmljYXRpb25zIGFjcm9zcworbGlu
a3MgdGhhdCBibGVhY2ggb3Igb3RoZXJ3aXNlIGNoYW5nZSBEU0NQLCB0eXBpY2FsbHkgaG9tZSBJ
U1AgSW50ZXJuZXQKK2xpbmtzLiAgUmVzdG9yaW5nIERTQ1Agb24gaW5ncmVzcyBvbiB0aGUgV0FO
IGxpbmsgYWxsb3dzIHFkaXNjcyBzdWNoIGFzCitidXQgYnkgbm8gbWVhbnMgbGltaXRlZCB0byBD
QUtFIHRvIHNoYXBlIGluYm91bmQgcGFja2V0cyBhY2NvcmRpbmcgdG8KK3BvbGljaWVzIHRoYXQg
YXJlIGVhc2llciB0byBzZXQgJiBtYXJrIG9uIGVncmVzcy4KIAogSW5ncmVzcyBjbGFzc2lmaWNh
dGlvbiBpcyB0cmFkaXRpb25hbGx5IGEgY2hhbGxlbmdpbmcgdGFzayBzaW5jZQogaXB0YWJsZXMg
cnVsZXMgaGF2ZW4ndCB5ZXQgcnVuIGFuZCB0YyBmaWx0ZXIvZUJQRiBwcm9ncmFtcyBhcmUgcHJl
LU5BVAogbG9va3VwcywgaGVuY2UgYXJlIHVuYWJsZSB0byBzZWUgaW50ZXJuYWwgSVB2NCBhZGRy
ZXNzZXMgYXMgdXNlZCBvbiB0aGUKLXR5cGljYWwgaG9tZSBtYXNxdWVyYWRpbmcgZ2F0ZXdheS4K
K3R5cGljYWwgaG9tZSBtYXNxdWVyYWRpbmcgZ2F0ZXdheS4gIFRodXMgbWFya2luZyB0aGUgY29u
bmVjdGlvbiBpbiBzb21lCittYW5uZXIgb24gZWdyZXNzIGZvciBsYXRlciByZXN0b3JhdGlvbiBv
ZiBjbGFzc2lmaWNhdGlvbiBvbiBpbmdyZXNzIGlzCitlYXNpZXIgdG8gaW1wbGVtZW50LgogCi1j
dGluZm8gdW5kZXJzdGFuZHMgdGhlIGZvbGxvd2luZyBwYXJhbWV0ZXJzOgorUGFyYW1ldGVycyBy
ZWxhdGVkIHRvIERTQ1AgcmVzdG9yZSBtb2RlOgogCi1kc2NwIGRzY3BtYXNrWy9zdGF0ZW1hc2td
Ci0KLWRzY3BtYXNrIC0gYSAzMiBiaXQgbWFzayBvZiBhdCBsZWFzdCA2IGNvbnRpZ3VvdXMgYml0
cyBhbmQgaW5kaWNhdGVzCi13aGVyZSBjdGluZm8gd2lsbCBmaW5kIHRoZSBEU0NQIGJpdHMgc3Rv
cmVkIGluIHRoZSBjb25udHJhY2sgbWFyay4KK2RzY3BtYXNrIC0gYSAzMiBiaXQgbWFzayBvZiA2
IGNvbnRpZ3VvdXMgYml0cyBhbmQgaW5kaWNhdGUgYml0cyBvZiB0aGUKK2Nvbm50cmFjayBtYXJr
IGZpZWxkIGNvbnRhaW4gdGhlIERTQ1AgdmFsdWUgdG8gYmUgcmVzdG9yZWQuCiAKIHN0YXRlbWFz
ayAtIGEgMzIgYml0IG1hc2sgb2YgKHVzdWFsbHkpIDEgYml0IGxlbmd0aCwgb3V0c2lkZSB0aGUg
YXJlYQogc3BlY2lmaWVkIGJ5IGRzY3BtYXNrLiAgVGhpcyByZXByZXNlbnRzIGEgY29uZGl0aW9u
YWwgb3BlcmF0aW9uIGZsYWcKQEAgLTM2LDE0ICs0OCw3IEBAIGNvbmRpdGlvbmFsIGJlaGF2aW91
ciBpZS4gdGhlIGNvbm50cmFjayBtYXJrIERTQ1AgYml0cyBhcmUgYWx3YXlzCiByZXN0b3JlZCB0
byB0aGUgaXAgZGlmZnNlcnYgZmllbGQgKGFzc3VtaW5nIHRoZSBjb25udHJhY2sgZW50cnkgaXMg
Zm91bmQKICYgdGhlIHNrYiBpcyBhbiBpcHY0L2lwdjYgdHlwZSkKIAotb3B0aW9uYWwgcGFyYW1l
dGVyczoKLQotem9uZSAtIGNvbm50cmFjayB6b25lCi0KLWNvbnRyb2wgLSBhY3Rpb24gcmVsYXRl
ZCBjb250cm9sIChyZWNsYXNzaWZ5IHwgcGlwZSB8IGRyb3AgfCBjb250aW51ZSB8Ci1vayB8IGdv
dG8gY2hhaW4gPENIQUlOX0lOREVYPikKLQotZS5nLiBkc2NwIDB4ZmMwMDAwMDAvMHgwMTAwMDAw
MAorZS5nLiBkc2NwbWFzayAweGZjMDAwMDAwIHN0YXRlbWFzayAweDAxMDAwMDAwCiAKIHwtLS0t
MHhGQy0tLS1jb25udHJhY2sgbWFyay0tLS0wMDAwMDAtLS18CiB8IEJpdHMgMzEtMjYgfCBiaXQg
MjUgfCBiaXQyNCB8fn5+IEJpdCAwfApAQCAtNTcsNiArNjIsNDkgQEAgZS5nLiBkc2NwIDB4ZmMw
MDAwMDAvMHgwMTAwMDAwMAogfCA2IGJpdHMgICAgICB8CiB8LS0tLS0tLS0tLS0tLXwKIAorVGhl
IHNrYiBtYXJrIHJlc3RvcmUgbW9kZSAoY3BtYXJrKToKKworVGhpcyBtb2RlIGNvcGllcyB0aGUg
ZmlyZXdhbGwgY29ubnRyYWNrIG1hcmsgdG8gdGhlIHNrYidzIG1hcmsgZmllbGQuCitJdCBpcyBj
b21wbGV0ZWx5IHRoZSBmdW5jdGlvbmFsIGVxdWl2YWxlbnQgb2YgdGhlIGV4aXN0aW5nIGFjdF9j
b25ubWFyaworYWN0aW9uIHdpdGggdGhlIGFkZGl0aW9uYWwgZmVhdHVyZSBvZiBiZWluZyBhYmxl
IHRvIGFwcGx5IGEgbWFzayB0byB0aGUKK3Jlc3RvcmVkIHZhbHVlLgorCitQYXJhbWV0ZXJzIHJl
bGF0ZWQgdG8gc2tiIG1hcmsgcmVzdG9yZSBtb2RlOgorCittYXNrIC0gYSAzMiBiaXQgbWFzayBh
cHBsaWVkIHRvIHRoZSBmaXJld2FsbCBjb25udHJhY2sgbWFyayB0byBtYXNrIG91dAorYml0cyB1
bndhbnRlZCBmb3IgcmVzdG9yYXRpb24uICBUaGlzIGNhbiBiZSB1c2VmdWwgd2hlcmUgdGhlIGNv
bm50cmFjaworbWFyayBpcyBiZWluZyB1c2VkIGZvciBkaWZmZXJlbnQgcHVycG9zZXMgYnkgZGlm
ZmVyZW50IGFwcGxpY2F0aW9ucy4gIElmCitub3Qgc3BlY2lmaWVkIGFuZCBieSBkZWZhdWx0IHRo
ZSB3aG9sZSBtYXJrIGZpZWxkIGlzIGNvcGllZCAoaS5lLgorZGVmYXVsdCBtYXNrIG9mIDB4ZmZm
ZmZmZmYpCisKK2UuZy4gbWFzayAweDAwZmZmZmZmIHRvIG1hc2sgb3V0IHRoZSB0b3AgOCBiaXRz
IGJlaW5nIHVzZWQgYnkgdGhlCithZm9yZW1lbnRpb25lZCBEU0NQIHJlc3RvcmUgbW9kZS4KKwor
fC0tLS0weDAwLS0tLWNvbm50cmFjayBtYXJrLS0tLWZmZmZmZi0tLXwKK3wgQml0cyAzMS0yNCB8
ICAgICAgICAgICAgICAgICAgICAgICAgICB8Cit8IERTQ1AgJiBmbGFnfCAgICAgIHNvbWUgdmFs
dWUgaGVyZSAgICAgfAorfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXwK
KwkJCXwKKwkJCXwKKwkJCXYKK3wtLS0tLS0tLS0tLS1za2IgbWFyay0tLS0tLS0tLS0tLS0tLS0t
LS18Cit8ICAgICAgICAgICAgfCAgICAgICAgICAgICAgICAgICAgICAgICAgfAorfCAgemVyb2Vk
ICAgIHwgICAgICAgICAgICAgICAgICAgICAgICAgIHwKK3wtLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS18CisKK092ZXJhbGwgcGFyYW1ldGVyczoKKworem9uZSAtIGNvbm50
cmFjayB6b25lCisKK2NvbnRyb2wgLSBhY3Rpb24gcmVsYXRlZCBjb250cm9sIChyZWNsYXNzaWZ5
IHwgcGlwZSB8IGRyb3AgfCBjb250aW51ZSB8CitvayB8IGdvdG8gY2hhaW4gPENIQUlOX0lOREVY
PikKKworU2lnbmVkLW9mZi1ieTogS2V2aW4gRGFyYnlzaGlyZS1CcnlhbnQgPGxkaXJAZGFyYnlz
aGlyZS1icnlhbnQubWUudWs+CitSZXZpZXdlZC1ieTogVG9rZSBIw7hpbGFuZC1Kw7hyZ2Vuc2Vu
IDx0b2tlQHJlZGhhdC5jb20+CitBY2tlZC1ieTogQ29uZyBXYW5nIDx4aXlvdS53YW5nY29uZ0Bn
bWFpbC5jb20+CitTaWduZWQtb2ZmLWJ5OiBEYXZpZCBTLiBNaWxsZXIgPGRhdmVtQGRhdmVtbG9m
dC5uZXQ+CisKK0JhY2twb3J0CiBTaWduZWQtb2ZmLWJ5OiBLZXZpbiBEYXJieXNoaXJlLUJyeWFu
dCA8bGRpckBkYXJieXNoaXJlLWJyeWFudC5tZS51az4KIC0tLQogIGluY2x1ZGUvbmV0L3RjX2Fj
dC90Y19jdGluZm8uaCAgICAgICAgICAgIHwgIDMzICsrCkBAIC02NCw5ICsxMTIsOSBAQCBTaWdu
ZWQtb2ZmLWJ5OiBLZXZpbiBEYXJieXNoaXJlLUJyeWFudCA8bGRpckBkYXJieXNoaXJlLWJyeWFu
dC5tZS51az4KICBpbmNsdWRlL3VhcGkvbGludXgvdGNfYWN0L3RjX2N0aW5mby5oICAgICB8ICAy
OSArKwogIG5ldC9zY2hlZC9LY29uZmlnICAgICAgICAgICAgICAgICAgICAgICAgIHwgIDE3ICsK
ICBuZXQvc2NoZWQvTWFrZWZpbGUgICAgICAgICAgICAgICAgICAgICAgICB8ICAgMSArCi0gbmV0
L3NjaGVkL2FjdF9jdGluZm8uYyAgICAgICAgICAgICAgICAgICAgfCAzOTUgKysrKysrKysrKysr
KysrKysrKysrKworIG5ldC9zY2hlZC9hY3RfY3RpbmZvLmMgICAgICAgICAgICAgICAgICAgIHwg
NDA5ICsrKysrKysrKysrKysrKysrKysrKysKICB0b29scy90ZXN0aW5nL3NlbGZ0ZXN0cy90Yy10
ZXN0aW5nL2NvbmZpZyB8ICAgMSArCi0gNyBmaWxlcyBjaGFuZ2VkLCA0NzggaW5zZXJ0aW9ucygr
KSwgMSBkZWxldGlvbigtKQorIDcgZmlsZXMgY2hhbmdlZCwgNDkyIGluc2VydGlvbnMoKyksIDEg
ZGVsZXRpb24oLSkKICBjcmVhdGUgbW9kZSAxMDA2NDQgaW5jbHVkZS9uZXQvdGNfYWN0L3RjX2N0
aW5mby5oCiAgY3JlYXRlIG1vZGUgMTAwNjQ0IGluY2x1ZGUvdWFwaS9saW51eC90Y19hY3QvdGNf
Y3RpbmZvLmgKICBjcmVhdGUgbW9kZSAxMDA2NDQgbmV0L3NjaGVkL2FjdF9jdGluZm8uYwpAQCAt
MTg5LDcgKzIzNyw3IEBAIFNpZ25lZC1vZmYtYnk6IEtldmluIERhcmJ5c2hpcmUtQnJ5YW50IDxs
ZGlyQGRhcmJ5c2hpcmUtYnJ5YW50Lm1lLnVrPgogIG9iai0kKENPTkZJR19ORVRfSUZFX1NLQk1B
UkspCSs9IGFjdF9tZXRhX21hcmsubwogLS0tIC9kZXYvbnVsbAogKysrIGIvbmV0L3NjaGVkL2Fj
dF9jdGluZm8uYwotQEAgLTAsMCArMSwzOTUgQEAKK0BAIC0wLDAgKzEsNDA5IEBACiArLy8gU1BE
WC1MaWNlbnNlLUlkZW50aWZpZXI6IEdQTC0yLjArCiArLyogbmV0L3NjaGVkL2FjdF9jdGluZm8u
YyAgbmV0ZmlsdGVyIGN0aW5mbyBjb25ubWFyayBhY3Rpb25zCiArICoKQEAgLTM0NywyNCArMzk1
LDI5IEBAIFNpZ25lZC1vZmYtYnk6IEtldmluIERhcmJ5c2hpcmUtQnJ5YW50IDxsZGlyQGRhcmJ5
c2hpcmUtYnJ5YW50Lm1lLnVrPgogKwkJCSAgIHN0cnVjdCBuZXRsaW5rX2V4dF9hY2sgKmV4dGFj
aykKICt7CiArCXN0cnVjdCB0Y19hY3Rpb25fbmV0ICp0biA9IG5ldF9nZW5lcmljKG5ldCwgY3Rp
bmZvX25ldF9pZCk7CisrCXUzMiBkc2NwbWFzayA9IDAsIGRzY3BzdGF0ZW1hc2ssIGluZGV4Owog
KwlzdHJ1Y3QgbmxhdHRyICp0YltUQ0FfQ1RJTkZPX01BWCArIDFdOwogKwlzdHJ1Y3QgdGNmX2N0
aW5mb19wYXJhbXMgKmNwX25ldzsKICsvKglzdHJ1Y3QgdGNmX2NoYWluICpnb3RvX2NoID0gTlVM
TDsgKi8KLSsJdTMyIGRzY3BtYXNrID0gMCwgZHNjcHN0YXRlbWFzazsKICsJc3RydWN0IHRjX2N0
aW5mbyAqYWN0cGFybTsKICsJc3RydWN0IHRjZl9jdGluZm8gKmNpOwogKwl1OCBkc2NwbWFza3No
aWZ0OwogKwlpbnQgcmV0ID0gMCwgZXJyOwogKwotKwlpZiAoIW5sYSkKKysJaWYgKCFubGEpIHsK
KysJCU5MX1NFVF9FUlJfTVNHX01PRChleHRhY2ssICJjdGluZm8gcmVxdWlyZXMgYXR0cmlidXRl
cyB0byBiZSBwYXNzZWQiKTsKICsJCXJldHVybiAtRUlOVkFMOworKwl9CiArCi0rCWVyciA9IG5s
YV9wYXJzZV9uZXN0ZWQodGIsIFRDQV9DVElORk9fTUFYLCBubGEsIGN0aW5mb19wb2xpY3ksIE5V
TEwpOworKwllcnIgPSBubGFfcGFyc2VfbmVzdGVkKHRiLCBUQ0FfQ1RJTkZPX01BWCwgbmxhLCBj
dGluZm9fcG9saWN5LCBleHRhY2spOwogKwlpZiAoZXJyIDwgMCkKICsJCXJldHVybiBlcnI7CiAr
Ci0rCWlmICghdGJbVENBX0NUSU5GT19BQ1RdKQorKwlpZiAoIXRiW1RDQV9DVElORk9fQUNUXSkg
eworKwkJTkxfU0VUX0VSUl9NU0dfTU9EKGV4dGFjaywKKysJCQkJICAgIk1pc3NpbmcgcmVxdWly
ZWQgVENBX0NUSU5GT19BQ1QgYXR0cmlidXRlIik7CiArCQlyZXR1cm4gLUVJTlZBTDsKKysJfQog
KwlhY3RwYXJtID0gbmxhX2RhdGEodGJbVENBX0NUSU5GT19BQ1RdKTsKICsKICsJLyogZG8gc29t
ZSBiYXNpYyB2YWxpZGF0aW9uIGhlcmUgYmVmb3JlIGR5bmFtaWNhbGx5IGFsbG9jYXRpbmcgdGhp
bmdzICovCkBAIC0zNzMsMjIgKzQyNiwzMSBAQCBTaWduZWQtb2ZmLWJ5OiBLZXZpbiBEYXJieXNo
aXJlLUJyeWFudCA8bGRpckBkYXJieXNoaXJlLWJyeWFudC5tZS51az4KICsJCWRzY3BtYXNrID0g
bmxhX2dldF91MzIodGJbVENBX0NUSU5GT19QQVJNU19EU0NQX01BU0tdKTsKICsJCS8qIG5lZWQg
Y29udGlndW91cyA2IGJpdCBtYXNrICovCiArCQlkc2NwbWFza3NoaWZ0ID0gZHNjcG1hc2sgPyBf
X2Zmcyhkc2NwbWFzaykgOiAwOwotKwkJaWYgKCh+MCAmIChkc2NwbWFzayA+PiBkc2NwbWFza3No
aWZ0KSkgIT0gMHgzZikKKysJCWlmICgofjAgJiAoZHNjcG1hc2sgPj4gZHNjcG1hc2tzaGlmdCkp
ICE9IDB4M2YpIHsKKysJCQlOTF9TRVRfRVJSX01TR19BVFRSKGV4dGFjaywKKysJCQkJCSAgICB0
YltUQ0FfQ1RJTkZPX1BBUk1TX0RTQ1BfTUFTS10sCisrCQkJCQkgICAgImRzY3AgbWFzayBtdXN0
IGJlIDYgY29udGlndW91cyBiaXRzIik7CiArCQkJcmV0dXJuIC1FSU5WQUw7CisrCQl9CiArCQlk
c2Nwc3RhdGVtYXNrID0gdGJbVENBX0NUSU5GT19QQVJNU19EU0NQX1NUQVRFTUFTS10gPwogKwkJ
CW5sYV9nZXRfdTMyKHRiW1RDQV9DVElORk9fUEFSTVNfRFNDUF9TVEFURU1BU0tdKSA6IDA7CiAr
CQkvKiBtYXNrICYgc3RhdGVtYXNrIG11c3Qgbm90IG92ZXJsYXAgKi8KLSsJCWlmIChkc2NwbWFz
ayAmIGRzY3BzdGF0ZW1hc2spCisrCQlpZiAoZHNjcG1hc2sgJiBkc2Nwc3RhdGVtYXNrKSB7Cisr
CQkJTkxfU0VUX0VSUl9NU0dfQVRUUihleHRhY2ssCisrCQkJCQkgICAgdGJbVENBX0NUSU5GT19Q
QVJNU19EU0NQX1NUQVRFTUFTS10sCisrCQkJCQkgICAgImRzY3Agc3RhdGVtYXNrIG11c3Qgbm90
IG92ZXJsYXAgZHNjcCBtYXNrIik7CiArCQkJcmV0dXJuIC1FSU5WQUw7CisrCQl9CiArCX0KICsK
ICsJLyogZG9uZSB0aGUgdmFsaWRhdGlvbjpub3cgdG8gdGhlIGFjdHVhbCBhY3Rpb24gYWxsb2Nh
dGlvbiAqLwotKwllcnIgPSB0Y2ZfaWRyX2NoZWNrX2FsbG9jKHRuLCAmYWN0cGFybS0+aW5kZXgs
IGEsIGJpbmQpOworKwlpbmRleCA9IGFjdHBhcm0tPmluZGV4OworKwllcnIgPSB0Y2ZfaWRyX2No
ZWNrX2FsbG9jKHRuLCAmaW5kZXgsIGEsIGJpbmQpOwogKwlpZiAoIWVycikgewotKwkJcmV0ID0g
dGNmX2lkcl9jcmVhdGUodG4sIGFjdHBhcm0tPmluZGV4LCBlc3QsIGEsCisrCQlyZXQgPSB0Y2Zf
aWRyX2NyZWF0ZSh0biwgaW5kZXgsIGVzdCwgYSwKICsJCQkJICAgICAmYWN0X2N0aW5mb19vcHMs
IGJpbmQsIGZhbHNlKTsKICsJCWlmIChyZXQpIHsKLSsJCQl0Y2ZfaWRyX2NsZWFudXAodG4sIGFj
dHBhcm0tPmluZGV4KTsKKysJCQl0Y2ZfaWRyX2NsZWFudXAodG4sIGluZGV4KTsKICsJCQlyZXR1
cm4gcmV0OwogKwkJfQogKwkJcmV0ID0gQUNUX1BfQ1JFQVRFRDsKQEAgLTU4NywxMSArNjQ5LDEx
IEBAIFNpZ25lZC1vZmYtYnk6IEtldmluIERhcmJ5c2hpcmUtQnJ5YW50IDxsZGlyQGRhcmJ5c2hp
cmUtYnJ5YW50Lm1lLnVrPgogK01PRFVMRV9MSUNFTlNFKCJHUEwiKTsKIC0tLSBhL3Rvb2xzL3Rl
c3Rpbmcvc2VsZnRlc3RzL3RjLXRlc3RpbmcvY29uZmlnCiArKysgYi90b29scy90ZXN0aW5nL3Nl
bGZ0ZXN0cy90Yy10ZXN0aW5nL2NvbmZpZwotQEAgLTM3LDYgKzM3LDcgQEAgQ09ORklHX05FVF9B
Q1RfU0tCRURJVD1tCi0gQ09ORklHX05FVF9BQ1RfQ1NVTT1tCitAQCAtMzgsNiArMzgsNyBAQCBD
T05GSUdfTkVUX0FDVF9DU1VNPW0KICBDT05GSUdfTkVUX0FDVF9WTEFOPW0KICBDT05GSUdfTkVU
X0FDVF9CUEY9bQotK0NPTkZJR19ORVRfQUNUX0NPTk5EU0NQPW0KICBDT05GSUdfTkVUX0FDVF9D
T05OTUFSSz1tCisrQ09ORklHX05FVF9BQ1RfQ09OTkNUSU5GTz1tCiAgQ09ORklHX05FVF9BQ1Rf
U0tCTU9EPW0KICBDT05GSUdfTkVUX0FDVF9JRkU9bQorIENPTkZJR19ORVRfQUNUX1RVTk5FTF9L
RVk9bQotLSAKMi4yMS4wIChBcHBsZSBHaXQtMTIyLjIpCgoKX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX18Kb3BlbndydC1kZXZlbCBtYWlsaW5nIGxpc3QKb3Bl
bndydC1kZXZlbEBsaXN0cy5vcGVud3J0Lm9yZwpodHRwczovL2xpc3RzLm9wZW53cnQub3JnL21h
aWxtYW4vbGlzdGluZm8vb3BlbndydC1kZXZlbAo=
