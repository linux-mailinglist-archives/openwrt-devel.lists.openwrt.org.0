Return-Path: <openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org>
X-Original-To: lists+openwrt-devel@lfdr.de
Delivered-To: lists+openwrt-devel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id 647D21B0C59
	for <lists+openwrt-devel@lfdr.de>; Mon, 20 Apr 2020 15:14:47 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:Subject:MIME-Version:References:
	In-Reply-To:Message-Id:Date:To:From:Reply-To:Content-ID:Content-Description:
	Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=LFfX2Q+OUNdJ6Gk/ZzFIFsqjsxLd6WxtDiQYEmPMVz0=; b=i9g8CFtEIdqHpX
	649eSfq7Cb7tvSVMlNIx8UMU5twZ15MEv30UqRWlasbVwkgOT2xHsziCSDWoOvf6/erFF0OHCIndb
	uIAjVpAvYrVeQbmrvIl5mcQDskumnEWk0S0LFkclxR+iHZdtbW1Q1hbQbvLSHKAYIMQV7zz3XbuTS
	KwR5fv25bCyXwm/GktW068DxA5ejvk/xueclf6896RymSDaUefeFaBu5XJ45K+0Iq3HtaBRcUmUNM
	QYPmrqGbEBrP/arJdt/eYi445FUiKH2ESD/4XBtB8qYJ6LZA5nJ1x5kSxkX8cC1j2o07utCXbasLy
	NMxQqYQPVIoInGOypH8w==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1jQWFm-0005MM-V7; Mon, 20 Apr 2020 13:14:27 +0000
Received: from vps.slashdirt.org ([144.91.108.218])
 by bombadil.infradead.org with esmtps (Exim 4.92.3 #3 (Red Hat Linux))
 id 1jQWFL-0004wP-Sz
 for openwrt-devel@lists.openwrt.org; Mon, 20 Apr 2020 13:14:02 +0000
Received: from supercopter (82-64-212-153.subs.proxad.net [82.64.212.153])
 (using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by vps.slashdirt.org (Postfix) with ESMTPS id 8039560335;
 Mon, 20 Apr 2020 15:13:51 +0200 (CEST)
DMARC-Filter: OpenDMARC Filter v1.3.2 vps.slashdirt.org 8039560335
Authentication-Results: vps.slashdirt.org; dmarc=fail (p=quarantine dis=none)
 header.from=slashdirt.org
DKIM-Filter: OpenDKIM Filter v2.11.0 vps.slashdirt.org 8039560335
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=slashdirt.org; s=mail;
 t=1587388432; bh=JYlB+oWWHvUcu89CsPP8cfu5NhMJ+HOv0YRXYZtejls=;
 h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
 b=cdCx2IrXpDbLeTsdqwBpkPa+JUg6qU5MIhlH17Y38/ZrIFCCX+L1tpAi6KwIFHvO/
 mu6fzTBlLacETWv10pqcR4x6ouMdYFVwnDRgFR9e4VjOKivbrf/W+ZXV8KQUh1ZAob
 lloPRbmeXo+oxWYW80KCsk9w2AFxA/QdIStW/n58=
Received: by supercopter (sSMTP sendmail emulation);
 Mon, 20 Apr 2020 15:13:51 +0200
From: =?UTF-8?q?Thibaut=20VAR=C3=88NE?= <hacks@slashdirt.org>
To: openwrt-devel@lists.openwrt.org
Date: Mon, 20 Apr 2020 15:13:31 +0200
Message-Id: <20200420131336.18252-2-hacks@slashdirt.org>
X-Mailer: git-send-email 2.11.0
In-Reply-To: <20200420131336.18252-1-hacks@slashdirt.org>
References: <20200420131336.18252-1-hacks@slashdirt.org>
MIME-Version: 1.0
X-Spam-Status: No, score=-2.0 required=5.0 tests=BAYES_00,DKIM_SIGNED,
 DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,NO_DNS_FOR_FROM,TXREP,
 UNPARSEABLE_RELAY shortcircuit=no autolearn=no autolearn_force=no
 version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on vps.slashdirt.org
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20200420_061400_404387_849CF9BE 
X-CRM114-Status: GOOD (  29.26  )
X-Spam-Score: 0.2 (/)
X-Spam-Report: SpamAssassin version 3.4.4 on bombadil.infradead.org summary:
 Content analysis details:   (0.2 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 0.4 NO_DNS_FOR_FROM        RBL: Envelope sender has no MX or A DNS records
 [listed in slashdirt.org.	IN	A]
 -0.0 SPF_PASS               SPF: sender matches SPF record
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 -0.1 DKIM_VALID_EF          Message has a valid DKIM or DK signature from
 envelope-from domain
 -0.1 DKIM_VALID_AU          Message has a valid DKIM or DK signature from
 author's domain
 -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
 0.1 DKIM_SIGNED            Message has a DKIM or DK signature, not necessarily
 valid
Subject: [OpenWrt-Devel] [PATCH v2 1/6] generic: routerbootpart MTD parser
 for RouterBoot
X-BeenThere: openwrt-devel@lists.openwrt.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <openwrt-devel.lists.openwrt.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/openwrt-devel>, 
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/openwrt-devel/>
List-Post: <mailto:openwrt-devel@lists.openwrt.org>
List-Help: <mailto:openwrt-devel-request@lists.openwrt.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/openwrt-devel>,
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=subscribe>
Cc: =?UTF-8?q?Thibaut=20VAR=C3=88NE?= <hacks@slashdirt.org>,
 koen.vandeputte@ncentric.com
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "openwrt-devel" <openwrt-devel-bounces@lists.openwrt.org>
Errors-To: openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org

VGhpcyBkcml2ZXIgcHJvdmlkZXMgYW4gT0YgTVREIHBhcnNlciB0byBwcm9wZXJseSBhc3NpZ24g
dGhlIFJvdXRlckJvb3QKcGFydGl0aW9ucyBvbiB0aGUgZmxhc2guIFRoaXMgcGFyc2VyIGJ1aWxk
cyBmcm9tIHRoZSAiZml4ZWQtcGFydGl0aW9ucyIKb25lIChzZWUgb2ZwYXJ0LmMpLCBidXQgaXQg
Y2FuIGhhbmRsZSBkeW5hbWljIHBhcnRpdGlvbnMgYXMgZm91bmQgb24Kcm91dGVyYm9vdCBkZXZp
Y2VzLgoKVGhlIHBhcmVudCBub2RlIG11c3QgY29udGFpbiB0aGUgZm9sbG93aW5nOgoJY29tcGF0
aWJsZSA9ICJtaWtyb3Rpayxyb3V0ZXJib290LXBhcnRpdGlvbnMiOwoJI2FkZHJlc3MtY2VsbHMg
PSA8MT47Cgkjc2l6ZS1jZWxscyA9IDwxPjsKCkNoaWxkcmVuIHJvdXRlcmJvb3RwYXJ0IERUUyBu
b2RlcyBhcmUgZGVmaW5lZCBhcyBmb2xsb3dzOgpGb3IgZml4ZWQgcGFydGl0aW9ucwoJbm9kZS1u
YW1lQHVuaXQtYWRkcmVzc8KgewoJCXJlZyA9IDxwcm9wLWVuY29kZWQtYXJyYXk+OwoJCWxhYmVs
ID0gPHN0cmluZz47CgkJcmVhZC1vbmx5OwoJCWxvY2s7Cgl9OwoKQWxsIHByb3BlcnRpZXMgYnV0
IHJlZyBhcmUgb3B0aW9uYWwuCgpGb3IgZHluYW1pYyBwYXJ0aXRpb25zOgoJbm9kZS1uYW1lwqB7
CgkJc2l6ZSA9IDxwcm9wLWVuY29kZWQtYXJyYXk+OwoJCWxhYmVsID0gPHN0cmluZz47CgkJcmVh
ZC1vbmx5OwoJCWxvY2s7Cgl9OwoKc2l6ZSBwcm9wZXJ0eSBpcyBtYW5kYXRvcnkgdW5sZXNzIHRo
ZSBuZXh0IHBhcnRpdGlvbiBpcyBhIGZpeGVkIG9uZSBvcgphICJ3ZWxsLWtub3duIiBvbmUgKG1h
dGNoZWQgZnJvbSB0aGUgc3RyaW5ncyBkZWZpbmVkIGJlbG93KSBpbiB3aGljaCBjYXNlCml0IGNh
biBiZSBvbWl0dGVkIG9yIHNldCB0byAwOyBvdGhlciBwcm9wZXJ0aWVzIGFyZSBvcHRpb25hbC4K
CkJ5IGRlZmF1bHQgZHluYW1pYyBwYXJ0aXRpb25zIGFyZSBhcHBlbmRlZCBhZnRlciB0aGUgcHJl
Y2VkaW5nIG9uZSwgZXhjZXB0CmZvciAid2VsbC1rbm93biIgb25lcyB3aGljaCBhcmUgYXV0b21h
dGljYWxseSBsb2NhdGVkIG9uIGZsYXNoLgoKV2VsbC1rbm93biBwYXJ0aXRpb25zIChtYXRjaGVk
IHZpYSBsYWJlbCBvciBub2RlLW5hbWUpOgogLSAiaGFyZF9jb25maWciCiAtICJzb2Z0X2NvbmZp
ZyIKIC0gImR0Yl9jb25maWciCgpUaGlzIHBhcnNlciByZXF1aXJlcyB0aGUgRFRTIHRvIGxpc3Qg
cGFydGl0aW9ucyBpbiBhc2NlbmRpbmcgb3JkZXIgYXMKZXhwZWN0ZWQgb24gdGhlIE1URCBkZXZp
Y2UuCgpUaGlzIHBhcnNlciBoYXMgYmVlbiBzdWNjZXNzZnVsbHkgdGVzdGVkIG9uIEJFIChhdGg3
OSkgYW5kIExFIChpcHE0MHh4CmFuZCByYW1pcHMpIGhhcmR3YXJlLgoKVGVzdGVkLWJ5OiBCYXB0
aXN0ZSBKb25nbGV6IDxnaXRAYml0c29mbmV0d29ya3Mub3JnPgpUZXN0ZWQtYnk6IFJvZ2VyIFB1
ZXlvIENlbnRlbGxlcyA8cm9nZXIucHVleW9AZ3VpZmkubmV0PgpUZXN0ZWQtYnk6IFRvYmlhcyBT
Y2hyYW1tIDx0LnNjaHJhbW1AbWFuamFyby5vcmc+ClRlc3RlZC1ieTogQ2hyaXN0b3BoZXIgSGls
bCA8Y2g2NTc0QGdtYWlsLmNvbT4KU2lnbmVkLW9mZi1ieTogVGhpYmF1dCBWQVLDiE5FIDxoYWNr
c0BzbGFzaGRpcnQub3JnPgotLS0KIC4uLi9maWxlcy9kcml2ZXJzL210ZC9wYXJzZXJzL3JvdXRl
cmJvb3RwYXJ0LmMgICAgIHwgMzU3ICsrKysrKysrKysrKysrKysrKysrKwogMSBmaWxlIGNoYW5n
ZWQsIDM1NyBpbnNlcnRpb25zKCspCiBjcmVhdGUgbW9kZSAxMDA2NDQgdGFyZ2V0L2xpbnV4L2dl
bmVyaWMvZmlsZXMvZHJpdmVycy9tdGQvcGFyc2Vycy9yb3V0ZXJib290cGFydC5jCgpkaWZmIC0t
Z2l0IGEvdGFyZ2V0L2xpbnV4L2dlbmVyaWMvZmlsZXMvZHJpdmVycy9tdGQvcGFyc2Vycy9yb3V0
ZXJib290cGFydC5jIGIvdGFyZ2V0L2xpbnV4L2dlbmVyaWMvZmlsZXMvZHJpdmVycy9tdGQvcGFy
c2Vycy9yb3V0ZXJib290cGFydC5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAw
MDAuLjhiMDc4NDM4OGYKLS0tIC9kZXYvbnVsbAorKysgYi90YXJnZXQvbGludXgvZ2VuZXJpYy9m
aWxlcy9kcml2ZXJzL210ZC9wYXJzZXJzL3JvdXRlcmJvb3RwYXJ0LmMKQEAgLTAsMCArMSwzNTcg
QEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCisvKgorICogUGFyc2VyIGZv
ciBNaWtyb1RpayBSb3V0ZXJCb290IHBhcnRpdGlvbnMuCisgKgorICogQ29weXJpZ2h0IChDKSAy
MDIwIFRoaWJhdXQgVkFSw4hORSA8aGFja3Mra2VybmVsQHNsYXNoZGlydC5vcmc+CisgKgorICog
VGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFu
ZC9vciBtb2RpZnkgaXQKKyAqIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVyYWwgUHVi
bGljIExpY2Vuc2UgdmVyc2lvbiAyIGFzIHB1Ymxpc2hlZAorICogYnkgdGhlIEZyZWUgU29mdHdh
cmUgRm91bmRhdGlvbi4KKyAqCisgKiBUaGlzIHBhcnNlciBidWlsZHMgZnJvbSB0aGUgImZpeGVk
LXBhcnRpdGlvbnMiIG9uZSAoc2VlIG9mcGFydC5jKSwgYnV0IGl0IGNhbgorICogaGFuZGxlIGR5
bmFtaWMgcGFydGl0aW9ucyBhcyBmb3VuZCBvbiByb3V0ZXJib290IGRldmljZXMuCisgKgorICog
RFRTIG5vZGVzIGFyZSBkZWZpbmVkIGFzIGZvbGxvd3M6CisgKiBGb3IgZml4ZWQgcGFydGl0aW9u
czoKKyAqCW5vZGUtbmFtZUB1bml0LWFkZHJlc3PCoHsKKyAqCQlyZWcgPSA8cHJvcC1lbmNvZGVk
LWFycmF5PjsKKyAqCQlsYWJlbCA9IDxzdHJpbmc+OworICoJCXJlYWQtb25seTsKKyAqCQlsb2Nr
OworICoJfTsKKyAqCisgKiByZWcgcHJvcGVydHkgaXMgbWFuZGF0b3J5OyBvdGhlciBwcm9wZXJ0
aWVzIGFyZSBvcHRpb25hbC4KKyAqIHJlZyBmb3JtYXQgaXMgPGFkZHJlc3MgbGVuZ3RoPi4gbGVu
Z3RoIGNhbiBiZSAwIGlmIHRoZSBuZXh0IHBhcnRpdGlvbiBpcworICogYW5vdGhlciBmaXhlZCBw
YXJ0aXRpb24gb3IgYSAid2VsbC1rbm93biIgcGFydGl0aW9uIGFzIGRlZmluZWQgYmVsb3c6IGlu
IHRoYXQKKyAqIGNhc2UgdGhlIHBhcnRpdGlvbiB3aWxsIGV4dGVuZCB1cCB0byB0aGUgbmV4dCBv
bmUuCisgKgorICogRm9yIGR5bmFtaWMgcGFydGl0aW9uczoKKyAqCW5vZGUtbmFtZSB7CisgKgkJ
c2l6ZSA9IDxwcm9wLWVuY29kZWQtYXJyYXk+OworICoJCWxhYmVsID0gPHN0cmluZz47CisgKgkJ
cmVhZC1vbmx5OworICoJCWxvY2s7CisgKgl9OworICoKKyAqIHNpemUgcHJvcGVydHkgaXMgbWFu
ZGF0b3J5IHVubGVzcyB0aGUgbmV4dCBwYXJ0aXRpb24gaXMgYSBmaXhlZCBvbmUgb3IKKyAqIGEg
IndlbGwta25vd24iIG9uZSAobWF0Y2hlZCBmcm9tIHRoZSBzdHJpbmdzIGRlZmluZWQgYmVsb3cp
IGluIHdoaWNoIGNhc2UgaXQKKyAqIGNhbiBiZSBvbWl0dGVkIG9yIHNldCB0byAwOyBvdGhlciBw
cm9wZXJ0aWVzIGFyZSBvcHRpb25hbC4KKyAqIHNpemUgZm9ybWF0IGlzIDxsZW5ndGg+LgorICog
QnkgZGVmYXVsdCBkeW5hbWljIHBhcnRpdGlvbnMgYXJlIGFwcGVuZGVkIGFmdGVyIHRoZSBwcmVj
ZWRpbmcgb25lLCBleGNlcHQKKyAqIGZvciAid2VsbC1rbm93biIgb25lcyB3aGljaCBhcmUgYXV0
b21hdGljYWxseSBsb2NhdGVkIG9uIGZsYXNoLgorICoKKyAqIFdlbGwta25vd24gcGFydGl0aW9u
cyAobWF0Y2hlZCB2aWEgbGFiZWwgb3Igbm9kZS1uYW1lKToKKyAqIC0gImhhcmRfY29uZmlnIgor
ICogLSAic29mdF9jb25maWciCisgKiAtICJkdGJfY29uZmlnIgorICoKKyAqIE5vdGU6IHRoaXMg
cGFyc2VyIHdpbGwgaGFwcGlseSByZWdpc3RlciAwLXNpemVkIHBhcnRpdGlvbnMgaWYgbWlzdXNl
ZC4KKyAqCisgKiBUaGlzIHBhcnNlciByZXF1aXJlcyB0aGUgRFRTIHRvIGxpc3QgcGFydGl0aW9u
cyBpbiBhc2NlbmRpbmcgb3JkZXIgYXMKKyAqIGV4cGVjdGVkIG9uIHRoZSBNVEQgZGV2aWNlLgor
ICoKKyAqIFNpbmNlIG9ubHkgdGhlICJoYXJkX2NvbmZpZyIgYW5kICJzb2Z0X2NvbmZpZyIgcGFy
dGl0aW9ucyBhcmUgdXNlZCBpbiBPcGVuV1JULAorICogYSBtaW5pbWFsIHdvcmtpbmcgRFRTIGNv
dWxkIGRlZmluZSBvbmx5IHRoZXNlIHR3byBwYXJ0aXRpb25zIGR5bmFtaWNhbGx5IChpbgorICog
dGhlIHJpZ2h0IG9yZGVyLCB1c3VhbGx5IGhhcmRfY29uZmlnIHRoZW4gc29mdF9jb25maWcpLgor
ICoKKyAqIE5vdGU6IHNvbWUgbWlwcyBSQiBkZXZpY2VzIGVuY29kZSB0aGUgaGFyZF9jb25maWcg
b2Zmc2V0IGFuZCBsZW5ndGggaW4gdHdvCisgKiBjb25zZWN1dGl2ZSB1MzIgbG9jYXRlZCBhdCBv
ZmZzZXQgMHgxNCAoZm9yIHJhbWlwcykgb3IgMHgyNCAoZm9yIGF0aDc5KSBvbgorICogdGhlIFNQ
SSBOT1IgZmxhc2guIFVuZm9ydHVuYXRlbHkgdGhpcyBzZWVtcyBpbmNvbnNpc3RlbnQgYWNyb3Nz
IG1hY2hpbmVzIGFuZAorICogZG9lcyBub3QgYXBwbHkgdG8gZS5nLiBpcHEtYmFzZWQgb25lcywg
c28gd2UgaWdub3JlIHRoYXQgaW5mb3JtYXRpb24uCisgKi8KKworCisjaW5jbHVkZSA8bGludXgv
bW9kdWxlLmg+CisjaW5jbHVkZSA8bGludXgvc2xhYi5oPgorI2luY2x1ZGUgPGxpbnV4L210ZC9t
dGQuaD4KKyNpbmNsdWRlIDxsaW51eC9tdGQvcGFydGl0aW9ucy5oPgorI2luY2x1ZGUgPGxpbnV4
L29mLmg+CisjaW5jbHVkZSA8bGludXgvb2ZfZmR0Lmg+CisjaW5jbHVkZSA8bGludXgvbGliZmR0
X2Vudi5oPgorI2luY2x1ZGUgPGxpbnV4L3N0cmluZy5oPgorCisjZGVmaW5lIFJCX01BR0lDX0hB
UkQJKCgnSCcpIHwgKCdhJyA8PCA4KSB8ICgncicgPDwgMTYpIHwgKCdkJyA8PCAyNCkpCisjZGVm
aW5lIFJCX01BR0lDX1NPRlQJKCgnUycpIHwgKCdvJyA8PCA4KSB8ICgnZicgPDwgMTYpIHwgKCd0
JyA8PCAyNCkpCisjZGVmaW5lIFJCX0JMT0NLX1NJWkUJMHgxMDAwCisKK3N0cnVjdCByb3V0ZXJi
b290X2R5bnBhcnQgeworCWNvbnN0IGNoYXIgKiBjb25zdCBuYW1lOworCWNvbnN0IHUzMiBtYWdp
YzsKKwlpbnQgKCogY29uc3Qgc2l6ZV9maXh1cCkoc3RydWN0IG10ZF9pbmZvICosIHN0cnVjdCBy
b3V0ZXJib290X2R5bnBhcnQgKik7CisJc2l6ZV90IG9mZnNldDsKKwlzaXplX3Qgc2l6ZTsKKwli
b29sIGZvdW5kOworfTsKKworc3RhdGljIGludCByb3V0ZXJib290X2R0YnNmaXh1cChzdHJ1Y3Qg
bXRkX2luZm8gKiwgc3RydWN0IHJvdXRlcmJvb3RfZHlucGFydCAqKTsKKworc3RhdGljIHN0cnVj
dCByb3V0ZXJib290X2R5bnBhcnQgcmJfZHlucGFydHNbXSA9IHsKKwl7CisJCS5uYW1lID0gImhh
cmRfY29uZmlnIiwKKwkJLm1hZ2ljID0gUkJfTUFHSUNfSEFSRCwJLy8gc3RvcmVkIGluIENQVS1l
bmRpYW5uZXNzIG9uIGZsYXNoCisJCS5zaXplX2ZpeHVwID0gTlVMTCwKKwkJLm9mZnNldCA9IDB4
MCwKKwkJLnNpemUgPSBSQl9CTE9DS19TSVpFLAorCQkuZm91bmQgPSBmYWxzZSwKKwl9LCB7CisJ
CS5uYW1lID0gInNvZnRfY29uZmlnIiwKKwkJLm1hZ2ljID0gUkJfTUFHSUNfU09GVCwJLy8gc3Rv
cmVkIGluIENQVS1lbmRpYW5uZXNzIG9uIGZsYXNoCisJCS5zaXplX2ZpeHVwID0gTlVMTCwKKwkJ
Lm9mZnNldCA9IDB4MCwKKwkJLnNpemUgPSBSQl9CTE9DS19TSVpFLAorCQkuZm91bmQgPSBmYWxz
ZSwKKwl9LCB7CisJCS5uYW1lID0gImR0Yl9jb25maWciLAorCQkubWFnaWMgPSBmZHQzMl90b19j
cHUoT0ZfRFRfSEVBREVSKSwJLy8gc3RvcmVkIEJFIG9uIGZsYXNoCisJCS5zaXplX2ZpeHVwID0g
cm91dGVyYm9vdF9kdGJzZml4dXAsCisJCS5vZmZzZXQgPSAweDAsCisJCS5zaXplID0gMHgwLAor
CQkuZm91bmQgPSBmYWxzZSwKKwl9Cit9OworCitzdGF0aWMgaW50IHJvdXRlcmJvb3RfZHRic2Zp
eHVwKHN0cnVjdCBtdGRfaW5mbyAqbWFzdGVyLCBzdHJ1Y3Qgcm91dGVyYm9vdF9keW5wYXJ0ICpy
YmRwYXJ0KQoreworCWludCBlcnI7CisJc2l6ZV90IGJ5dGVzX3JlYWQsIHBzaXplOworCXN0cnVj
dCB7CisJCWZkdDMyX3QgbWFnaWM7CisJCWZkdDMyX3QgdG90YWxzaXplOworCQlmZHQzMl90IG9m
Zl9kdF9zdHJ1Y3Q7CisJCWZkdDMyX3Qgb2ZmX2R0X3N0cmluZ3M7CisJCWZkdDMyX3Qgb2ZmX21l
bV9yc3ZtYXA7CisJCWZkdDMyX3QgdmVyc2lvbjsKKwkJZmR0MzJfdCBsYXN0X2NvbXBfdmVyc2lv
bjsKKwkJZmR0MzJfdCBib290X2NwdWlkX3BoeXM7CisJCWZkdDMyX3Qgc2l6ZV9kdF9zdHJpbmdz
OworCQlmZHQzMl90IHNpemVfZHRfc3RydWN0OworCX0gZmR0X2hlYWRlcjsKKworCWVyciA9IG10
ZF9yZWFkKG1hc3RlciwgcmJkcGFydC0+b2Zmc2V0LCBzaXplb2YoZmR0X2hlYWRlciksCisJCSAg
ICAgICAmYnl0ZXNfcmVhZCwgKHU4ICopJmZkdF9oZWFkZXIpOworCWlmIChlcnIpCisJCXJldHVy
biBlcnI7CisKKwlpZiAoYnl0ZXNfcmVhZCAhPSBzaXplb2YoZmR0X2hlYWRlcikpCisJCXJldHVy
biAtRUlPOworCisJcHNpemUgPSBmZHQzMl90b19jcHUoZmR0X2hlYWRlci50b3RhbHNpemUpOwor
CWlmICghcHNpemUpCisJCXJldHVybiAtRUlOVkFMOworCisJcmJkcGFydC0+c2l6ZSA9IHBzaXpl
OworCXJldHVybiAwOworfQorCitzdGF0aWMgdm9pZCByb3V0ZXJib290X2ZpbmRfZHlucGFydHMo
c3RydWN0IG10ZF9pbmZvICptYXN0ZXIpCit7CisJc2l6ZV90IGJ5dGVzX3JlYWQsIG9mZnNldDsK
Kwlib29sIGFsbGZvdW5kOworCWludCBlcnIsIGk7CisJdTMyIGJ1ZjsKKworCS8qCisJICogRHlu
YW1pYyBSb3V0ZXJCb290IHBhcnRpdGlvbnMgb2Zmc2V0cyBhcmUgYWxpZ25lZCB0byBSQl9CTE9D
S19TSVpFLgorCSAqIFJlYWQgdGhlIHdob2xlIHBhcnRpdGlvbiBhdCBSQl9CTE9DS19TSVpFIGlu
dGVydmFscyB0byBmaW5kIHNpZ3MuCisJICovCisJb2Zmc2V0ID0gMDsKKwl3aGlsZSAob2Zmc2V0
IDwgbWFzdGVyLT5zaXplKSB7CisJCWVyciA9IG10ZF9yZWFkKG1hc3Rlciwgb2Zmc2V0LCBzaXpl
b2YoYnVmKSwgJmJ5dGVzX3JlYWQsICh1OCAqKSZidWYpOworCQlpZiAoZXJyKSB7CisJCQlwcl9l
cnIoIiVzOiBtdGRfcmVhZCBlcnJvciB3aGlsZSBwYXJzaW5nIChvZmZzZXQ6IDB4JVgpOiAlZFxu
IiwKKwkJCSAgICAgICBtYXN0ZXItPm5hbWUsIG9mZnNldCwgZXJyKTsKKwkJCWNvbnRpbnVlOwor
CQl9CisKKwkJYWxsZm91bmQgPSB0cnVlOworCisJCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpF
KHJiX2R5bnBhcnRzKTsgaSsrKSB7CisJCQlpZiAocmJfZHlucGFydHNbaV0uZm91bmQpCisJCQkJ
Y29udGludWU7CisKKwkJCWFsbGZvdW5kID0gZmFsc2U7CisKKwkJCWlmIChyYl9keW5wYXJ0c1tp
XS5tYWdpYyA9PSBidWYpIHsKKwkJCQlyYl9keW5wYXJ0c1tpXS5vZmZzZXQgPSBvZmZzZXQ7CisK
KwkJCQlpZiAocmJfZHlucGFydHNbaV0uc2l6ZV9maXh1cCkgeworCQkJCQllcnIgPSByYl9keW5w
YXJ0c1tpXS5zaXplX2ZpeHVwKG1hc3RlciwgJnJiX2R5bnBhcnRzW2ldKTsKKwkJCQkJaWYgKGVy
cikgeworCQkJCQkJcHJfZXJyKCIlczogc2l6ZSBmaXh1cCBlcnJvciB3aGlsZSBwYXJzaW5nIFwi
JXNcIjogJWRcbiIsCisJCQkJCQkgICAgICAgbWFzdGVyLT5uYW1lLCByYl9keW5wYXJ0c1tpXS5u
YW1lLCBlcnIpOworCQkJCQkJY29udGludWU7CisJCQkJCX0KKwkJCQl9CisKKwkJCQlyYl9keW5w
YXJ0c1tpXS5mb3VuZCA9IHRydWU7CisKKwkJCQkvKgorCQkJCSAqIG1vdmUgb2Zmc2V0IHRvIHNr
aXAgdGhlIHdob2xlIHBhcnRpdGlvbiBvbgorCQkJCSAqIG5leHQgaXRlcmF0aW9uIGlmIHNpemUg
PiBSQl9CTE9DS19TSVpFLgorCQkJCSAqLworCQkJCWlmIChyYl9keW5wYXJ0c1tpXS5zaXplID4g
UkJfQkxPQ0tfU0laRSkKKwkJCQkJb2Zmc2V0ICs9IEFMSUdOX0RPV04oKHJiX2R5bnBhcnRzW2ld
LnNpemUgLSBSQl9CTE9DS19TSVpFKSwgUkJfQkxPQ0tfU0laRSk7CisKKwkJCQlicmVhazsKKwkJ
CX0KKwkJfQorCisJCW9mZnNldCArPSBSQl9CTE9DS19TSVpFOworCisJCWlmIChhbGxmb3VuZCkK
KwkJCWJyZWFrOworCX0KK30KKworc3RhdGljIGludCByb3V0ZXJib290X3BhcnRpdGlvbnNfcGFy
c2Uoc3RydWN0IG10ZF9pbmZvICptYXN0ZXIsCisJCQkJICAgICAgIGNvbnN0IHN0cnVjdCBtdGRf
cGFydGl0aW9uICoqcHBhcnRzLAorCQkJCSAgICAgICBzdHJ1Y3QgbXRkX3BhcnRfcGFyc2VyX2Rh
dGEgKmRhdGEpCit7CisJc3RydWN0IG10ZF9wYXJ0aXRpb24gKnBhcnRzOworCXN0cnVjdCBkZXZp
Y2Vfbm9kZSAqcmJwYXJ0X25vZGUsICpwcDsKKwljb25zdCBjaGFyICpwYXJ0bmFtZTsKKwlzaXpl
X3QgbWFzdGVyX29mczsKKwlpbnQgbnA7CisKKworCS8qIFB1bGwgb2Zfbm9kZSBmcm9tIHRoZSBt
YXN0ZXIgZGV2aWNlIG5vZGUgKi8KKwlyYnBhcnRfbm9kZSA9IG10ZF9nZXRfb2Zfbm9kZShtYXN0
ZXIpOworCWlmICghcmJwYXJ0X25vZGUpCisJCXJldHVybiAwOworCisJLyogRmlyc3QgY291bnQg
dGhlIHN1Ym5vZGVzICovCisJbnAgPSAwOworCWZvcl9lYWNoX2NoaWxkX29mX25vZGUocmJwYXJ0
X25vZGUsICBwcCkKKwkJbnArKzsKKworCWlmICghbnApCisJCXJldHVybiAwOworCisJcGFydHMg
PSBrY2FsbG9jKG5wLCBzaXplb2YoKnBhcnRzKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFwYXJ0cykK
KwkJcmV0dXJuIC1FTk9NRU07CisKKwkvKiBQcmVlbXB0aXZlbHkgbG9vayBmb3Iga25vd24gcGFy
dHMgaW4gZmxhc2ggKi8KKwlyb3V0ZXJib290X2ZpbmRfZHlucGFydHMobWFzdGVyKTsKKworCW5w
ID0gMDsKKwltYXN0ZXJfb2ZzID0gMDsKKwlmb3JfZWFjaF9jaGlsZF9vZl9ub2RlKHJicGFydF9u
b2RlLCBwcCkgeworCQljb25zdCBfX2JlMzIgKnJlZywgKnN6OworCQlzaXplX3Qgb2Zmc2V0LCBz
aXplOworCQlpbnQgaSwgbGVuLCBhX2NlbGxzLCBzX2NlbGxzOworCisJCXBhcnRuYW1lID0gb2Zf
Z2V0X3Byb3BlcnR5KHBwLCAibGFiZWwiLCAmbGVuKTsKKwkJLyogQWxsb3cgZGVwcmVjYXRlZCB1
c2Ugb2YgIm5hbWUiIGluc3RlYWQgb2YgImxhYmVsIiAqLworCQlpZiAoIXBhcnRuYW1lKQorCQkJ
cGFydG5hbWUgPSBvZl9nZXRfcHJvcGVydHkocHAsICJuYW1lIiwgJmxlbik7CisJCS8qIEZhbGxi
YWNrIHRvIG5vZGUgbmFtZSBwZXIgc3BlYyBpZiBhbGwgZWxzZSBmYWlsczogcGFydG5hbWUgaXMg
YWx3YXlzIHNldCAqLworCQlpZiAoIXBhcnRuYW1lKQorCQkJcGFydG5hbWUgPSBwcC0+bmFtZTsK
KwkJcGFydHNbbnBdLm5hbWUgPSBwYXJ0bmFtZTsKKworCQlyZWcgPSBvZl9nZXRfcHJvcGVydHko
cHAsICJyZWciLCAmbGVuKTsKKwkJaWYgKHJlZykgeworCQkJLyogRml4ZWQgcGFydGl0aW9uICov
CisJCQlhX2NlbGxzID0gb2Zfbl9hZGRyX2NlbGxzKHBwKTsKKwkJCXNfY2VsbHMgPSBvZl9uX3Np
emVfY2VsbHMocHApOworCisJCQlpZiAoKGxlbiAvIDQpICE9IChhX2NlbGxzICsgc19jZWxscykp
IHsKKwkJCQlwcl9kZWJ1ZygiJXM6IHJvdXRlcmJvb3QgcGFydGl0aW9uICVwT0YgKCVwT0YpIGVy
cm9yIHBhcnNpbmcgcmVnIHByb3BlcnR5LlxuIiwKKwkJCQkJIG1hc3Rlci0+bmFtZSwgcHAsIHJi
cGFydF9ub2RlKTsKKwkJCQlnb3RvIHJicGFydF9mYWlsOworCQkJfQorCisJCQlvZmZzZXQgPSBv
Zl9yZWFkX251bWJlcihyZWcsIGFfY2VsbHMpOworCQkJc2l6ZSA9IG9mX3JlYWRfbnVtYmVyKHJl
ZyArIGFfY2VsbHMsIHNfY2VsbHMpOworCQl9IGVsc2UgeworCQkJLyogRHluYW1pYyBwYXJ0aXRp
b24gKi8KKwkJCS8qIERlZmF1bHQ6IHBhcnQgc3RhcnRzIGF0IGN1cnJlbnQgb2Zmc2V0LCAwIHNp
emUgKi8KKwkJCW9mZnNldCA9IG1hc3Rlcl9vZnM7CisJCQlzaXplID0gMDsKKworCQkJLyogQ2hl
Y2sgaWYgd2VsbC1rbm93biBwYXJ0aXRpb24gKi8KKwkJCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9T
SVpFKHJiX2R5bnBhcnRzKTsgaSsrKSB7CisJCQkJaWYgKCFzdHJjbXAocGFydG5hbWUsIHJiX2R5
bnBhcnRzW2ldLm5hbWUpICYmIHJiX2R5bnBhcnRzW2ldLmZvdW5kKSB7CisJCQkJCW9mZnNldCA9
IHJiX2R5bnBhcnRzW2ldLm9mZnNldDsKKwkJCQkJc2l6ZSA9IHJiX2R5bnBhcnRzW2ldLnNpemU7
CisJCQkJCWJyZWFrOworCQkJCX0KKwkJCX0KKworCQkJLyogU3RhbmRhbG9uZSAnc2l6ZScgcHJv
cGVydHk/IE92ZXJyaWRlIHNpemUgKi8KKwkJCXN6ID0gb2ZfZ2V0X3Byb3BlcnR5KHBwLCAic2l6
ZSIsICZsZW4pOworCQkJaWYgKHN6KSB7CisJCQkJc19jZWxscyA9IG9mX25fc2l6ZV9jZWxscyhw
cCk7CisJCQkJaWYgKChsZW4gLyA0KSAhPSBzX2NlbGxzKSB7CisJCQkJCXByX2RlYnVnKCIlczog
cm91dGVyYm9vdCBwYXJ0aXRpb24gJXBPRiAoJXBPRikgZXJyb3IgcGFyc2luZyBzaXplIHByb3Bl
cnR5LlxuIiwKKwkJCQkJCSBtYXN0ZXItPm5hbWUsIHBwLCByYnBhcnRfbm9kZSk7CisJCQkJCWdv
dG8gcmJwYXJ0X2ZhaWw7CisJCQkJfQorCisJCQkJc2l6ZSA9IG9mX3JlYWRfbnVtYmVyKHN6LCBz
X2NlbGxzKTsKKwkJCX0KKwkJfQorCisJCWlmIChucCA+IDApIHsKKwkJCS8qIE1pbm9yIHNhbml0
eSBjaGVjayBmb3Igb3ZlcmxhcHMgKi8KKwkJCWlmIChvZmZzZXQgPCAocGFydHNbbnAtMV0ub2Zm
c2V0ICsgcGFydHNbbnAtMV0uc2l6ZSkpIHsKKwkJCQlwcl9lcnIoIiVzOiByb3V0ZXJib290IHBh
cnRpdGlvbiAlcE9GICglcE9GKSBcIiVzXCIgb3ZlcmxhcHMgd2l0aCBwcmV2aW91cyBwYXJ0aXRp
b24gXCIlc1wiLlxuIiwKKwkJCQkgICAgICAgbWFzdGVyLT5uYW1lLCBwcCwgcmJwYXJ0X25vZGUs
CisJCQkJICAgICAgIHBhcnRuYW1lLCBwYXJ0c1tucC0xXS5uYW1lKTsKKwkJCQlnb3RvIHJicGFy
dF9mYWlsOworCQkJfQorCisJCQkvKiBGaXh1cCBlbmQgb2YgcHJldmlvdXMgcGFydGl0aW9uIGlm
IG5lY2Vzc2FyeSAqLworCQkJaWYgKCFwYXJ0c1tucC0xXS5zaXplKQorCQkJCXBhcnRzW25wLTFd
LnNpemUgPSAob2Zmc2V0IC0gcGFydHNbbnAtMV0ub2Zmc2V0KTsKKwkJfQorCisJCWlmICgob2Zm
c2V0ICsgc2l6ZSkgPiBtYXN0ZXItPnNpemUpIHsKKwkJCXByX2VycigiJXM6IHJvdXRlcmJvb3Qg
cGFydGl0aW9uICVwT0YgKCVwT0YpIFwiJXNcIiBleHRlbmRzIHBhc3QgZW5kIG9mIHNlZ21lbnQu
XG4iLAorCQkJICAgICAgIG1hc3Rlci0+bmFtZSwgcHAsIHJicGFydF9ub2RlLCBwYXJ0bmFtZSk7
CisJCQlnb3RvIHJicGFydF9mYWlsOworCQl9CisKKwkJcGFydHNbbnBdLm9mZnNldCA9IG9mZnNl
dDsKKwkJcGFydHNbbnBdLnNpemUgPSBzaXplOworCQlwYXJ0c1tucF0ub2Zfbm9kZSA9IHBwOwor
CisJCWlmIChvZl9nZXRfcHJvcGVydHkocHAsICJyZWFkLW9ubHkiLCAmbGVuKSkKKwkJCXBhcnRz
W25wXS5tYXNrX2ZsYWdzIHw9IE1URF9XUklURUFCTEU7CisKKwkJaWYgKG9mX2dldF9wcm9wZXJ0
eShwcCwgImxvY2siLCAmbGVuKSkKKwkJCXBhcnRzW25wXS5tYXNrX2ZsYWdzIHw9IE1URF9QT1dF
UlVQX0xPQ0s7CisKKwkJLyogS2VlcCBtYXN0ZXIgb2Zmc2V0IGFsaWduZWQgdG8gUkJfQkxPQ0tf
U0laRSAqLworCQltYXN0ZXJfb2ZzID0gQUxJR04ob2Zmc2V0ICsgc2l6ZSwgUkJfQkxPQ0tfU0la
RSk7CisJCW5wKys7CisJfQorCisJKnBwYXJ0cyA9IHBhcnRzOworCXJldHVybiBucDsKKworcmJw
YXJ0X2ZhaWw6CisJcHJfZXJyKCIlczogZXJyb3IgcGFyc2luZyByb3V0ZXJib290IHBhcnRpdGlv
biAlcE9GICglcE9GKVxuIiwKKwkgICAgICAgbWFzdGVyLT5uYW1lLCBwcCwgcmJwYXJ0X25vZGUp
OworCW9mX25vZGVfcHV0KHBwKTsKKwlrZnJlZShwYXJ0cyk7CisJcmV0dXJuIC1FSU5WQUw7Cit9
CisKK3N0YXRpYyBjb25zdCBzdHJ1Y3Qgb2ZfZGV2aWNlX2lkIHBhcnNlX3JvdXRlcmJvb3RwYXJ0
X21hdGNoX3RhYmxlW10gPSB7CisJeyAuY29tcGF0aWJsZSA9ICJtaWtyb3Rpayxyb3V0ZXJib290
LXBhcnRpdGlvbnMiIH0sCisJe30sCit9OworTU9EVUxFX0RFVklDRV9UQUJMRShvZiwgcGFyc2Vf
cm91dGVyYm9vdHBhcnRfbWF0Y2hfdGFibGUpOworCitzdGF0aWMgc3RydWN0IG10ZF9wYXJ0X3Bh
cnNlciByb3V0ZXJib290cGFydF9wYXJzZXIgPSB7CisJLnBhcnNlX2ZuID0gcm91dGVyYm9vdF9w
YXJ0aXRpb25zX3BhcnNlLAorCS5uYW1lID0gInJvdXRlcmJvb3RwYXJ0IiwKKwkub2ZfbWF0Y2hf
dGFibGUgPSBwYXJzZV9yb3V0ZXJib290cGFydF9tYXRjaF90YWJsZSwKK307Cittb2R1bGVfbXRk
X3BhcnRfcGFyc2VyKHJvdXRlcmJvb3RwYXJ0X3BhcnNlcik7CisKK01PRFVMRV9MSUNFTlNFKCJH
UEwiKTsKK01PRFVMRV9ERVNDUklQVElPTigiTVREIHBhcnRpdGlvbmluZyBmb3IgUm91dGVyQm9v
dCIpOworTU9EVUxFX0FVVEhPUigiVGhpYmF1dCBWQVJFTkUiKTsKLS0gCjIuMTEuMAoKCl9fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCm9wZW53cnQtZGV2ZWwg
bWFpbGluZyBsaXN0Cm9wZW53cnQtZGV2ZWxAbGlzdHMub3BlbndydC5vcmcKaHR0cHM6Ly9saXN0
cy5vcGVud3J0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL29wZW53cnQtZGV2ZWwK
