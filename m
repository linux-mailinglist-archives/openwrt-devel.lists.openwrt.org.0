Return-Path: <openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org>
X-Original-To: lists+openwrt-devel@lfdr.de
Delivered-To: lists+openwrt-devel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id 481221045FA
	for <lists+openwrt-devel@lfdr.de>; Wed, 20 Nov 2019 22:45:03 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:Subject:MIME-Version:References:
	In-Reply-To:Message-Id:Date:To:From:Reply-To:Content-ID:Content-Description:
	Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=4i+xY+qIBHTzIm+HNJ8dcIVBlV7zSldmpGKwgSCemD0=; b=idMriHu2rGDccA
	s5vCYnYjecQ8LMp51GfnYT6Sh55GKS8eLoGCNsLOtLmyk1naTdhOFDzJ0Beh8/3sXj9uZj7kmnOtE
	0VId8N4EhnwY3aVk7MXRpGbi4MORbj8zRb693MogIfAgExussVknIrHMkZPCcvyDvsRd/4yPUmt8l
	yj+bY06oGUgzlxtyidz9mozqXmTeuZVHJO+9pNtJkV5p0WTwycQypl7xisdSd9IMPHmGzEJSpRwwJ
	80BMPDrpKSqrVibc0wbwxwJ33wsqskJwhqdNGK3s8QUPwWeWIvYl531Hyj619dAkJZYxmDEsPBPVC
	CXRkjMDejWBWQAu2zmhg==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1iXXmV-0006Xi-PB; Wed, 20 Nov 2019 21:44:59 +0000
Received: from smtp-out.xnet.cz ([178.217.244.18])
 by bombadil.infradead.org with esmtps (Exim 4.92.3 #3 (Red Hat Linux))
 id 1iXXla-0005nT-RF
 for openwrt-devel@lists.openwrt.org; Wed, 20 Nov 2019 21:44:05 +0000
Received: from meh.true.cz (meh.true.cz [108.61.167.218])
 (Authenticated sender: petr@true.cz)
 by smtp-out.xnet.cz (Postfix) with ESMTPSA id 6F5174AD8;
 Wed, 20 Nov 2019 22:44:01 +0100 (CET)
Received: by meh.true.cz (OpenSMTPD) with ESMTP id 93ab4d9a;
 Wed, 20 Nov 2019 22:43:51 +0100 (CET)
From: =?UTF-8?q?Petr=20=C5=A0tetiar?= <ynezz@true.cz>
To: openwrt-devel@lists.openwrt.org
Date: Wed, 20 Nov 2019 22:43:47 +0100
Message-Id: <20191120214353.27652-5-ynezz@true.cz>
In-Reply-To: <20191120214353.27652-1-ynezz@true.cz>
References: <20191120214353.27652-1-ynezz@true.cz>
MIME-Version: 1.0
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20191120_134403_182216_BC7206EF 
X-CRM114-Status: GOOD (  11.96  )
X-Spam-Score: 0.0 (/)
X-Spam-Report: SpamAssassin version 3.4.2 on bombadil.infradead.org summary:
 Content analysis details:   (0.0 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -0.0 RCVD_IN_DNSWL_NONE     RBL: Sender listed at https://www.dnswl.org/,
 no trust [178.217.244.18 listed in list.dnswl.org]
 0.0 SPF_NONE               SPF: sender does not publish an SPF Record
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
Subject: [OpenWrt-Devel] [PATCH v2 libubox 04/10] add cram based unit tests
X-BeenThere: openwrt-devel@lists.openwrt.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <openwrt-devel.lists.openwrt.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/openwrt-devel>, 
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/openwrt-devel/>
List-Post: <mailto:openwrt-devel@lists.openwrt.org>
List-Help: <mailto:openwrt-devel-request@lists.openwrt.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/openwrt-devel>,
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=subscribe>
Cc: =?UTF-8?q?Petr=20=C5=A0tetiar?= <ynezz@true.cz>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "openwrt-devel" <openwrt-devel-bounces@lists.openwrt.org>
Errors-To: openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org

Rm9yIGltcHJvdmVkIFFBIGV0Yy4gZm9yIHRoZSBzdGFydCB3aXRoIGluaXRpYWwgdGVzdCBjYXNl
cyBmb3IgYXZsLApiYXNlNjQgYW5kIGpzaG4uCgpTaWduZWQtb2ZmLWJ5OiBQZXRyIMWgdGV0aWFy
IDx5bmV6ekB0cnVlLmN6PgotLS0KIENNYWtlTGlzdHMudHh0ICAgICAgICAgICAgfCAgNSArKysK
IHRlc3RzL0NNYWtlTGlzdHMudHh0ICAgICAgfCAxMCArKysrKwogdGVzdHMvY3JhbS9DTWFrZUxp
c3RzLnR4dCB8IDI3ICsrKysrKysrKysrKwogdGVzdHMvY3JhbS90ZXN0X2F2bC50ICAgICB8IDEw
ICsrKysrCiB0ZXN0cy9jcmFtL3Rlc3RfYmFzZTY0LnQgIHwgMTcgKysrKysrKysKIHRlc3RzL2Ny
YW0vdGVzdF9qc2huLnQgICAgfCAyNSArKysrKysrKysrKwogdGVzdHMvdGVzdC1hdmwuYyAgICAg
ICAgICB8IDg3ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwogdGVzdHMv
dGVzdC1iNjQuYyAgICAgICAgICB8IDM5ICsrKysrKysrKysrKysrKysrKwogOCBmaWxlcyBjaGFu
Z2VkLCAyMjAgaW5zZXJ0aW9ucygrKQogY3JlYXRlIG1vZGUgMTAwNjQ0IHRlc3RzL0NNYWtlTGlz
dHMudHh0CiBjcmVhdGUgbW9kZSAxMDA2NDQgdGVzdHMvY3JhbS9DTWFrZUxpc3RzLnR4dAogY3Jl
YXRlIG1vZGUgMTAwNjQ0IHRlc3RzL2NyYW0vdGVzdF9hdmwudAogY3JlYXRlIG1vZGUgMTAwNjQ0
IHRlc3RzL2NyYW0vdGVzdF9iYXNlNjQudAogY3JlYXRlIG1vZGUgMTAwNjQ0IHRlc3RzL2NyYW0v
dGVzdF9qc2huLnQKIGNyZWF0ZSBtb2RlIDEwMDY0NCB0ZXN0cy90ZXN0LWF2bC5jCiBjcmVhdGUg
bW9kZSAxMDA2NDQgdGVzdHMvdGVzdC1iNjQuYwoKZGlmZiAtLWdpdCBhL0NNYWtlTGlzdHMudHh0
IGIvQ01ha2VMaXN0cy50eHQKaW5kZXggN2E4Njg1NDg0MWUzLi5iODBkNTUxYzExMmYgMTAwNjQ0
Ci0tLSBhL0NNYWtlTGlzdHMudHh0CisrKyBiL0NNYWtlTGlzdHMudHh0CkBAIC00Miw2ICs0Miwx
MSBAQCBJTlNUQUxMKFRBUkdFVFMgdWJveCB1Ym94LXN0YXRpYwogQUREX1NVQkRJUkVDVE9SWShs
dWEpCiBBRERfU1VCRElSRUNUT1JZKGV4YW1wbGVzKQogCitJRihVTklUX1RFU1RJTkcpCisgIEVO
QUJMRV9URVNUSU5HKCkKKyAgQUREX1NVQkRJUkVDVE9SWSh0ZXN0cykKK0VORElGKCkKKwogZmlu
ZF9saWJyYXJ5KGpzb24gTkFNRVMganNvbi1jKQogSUYoRVhJU1RTICR7anNvbn0pCiAJQUREX0xJ
QlJBUlkoYmxvYm1zZ19qc29uIFNIQVJFRCBibG9ibXNnX2pzb24uYykKZGlmZiAtLWdpdCBhL3Rl
c3RzL0NNYWtlTGlzdHMudHh0IGIvdGVzdHMvQ01ha2VMaXN0cy50eHQKbmV3IGZpbGUgbW9kZSAx
MDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi42ODMyYjNmNTJjMzAKLS0tIC9kZXYvbnVsbAorKysg
Yi90ZXN0cy9DTWFrZUxpc3RzLnR4dApAQCAtMCwwICsxLDEwIEBACitBRERfU1VCRElSRUNUT1JZ
KGNyYW0pCisKK01BQ1JPKEFERF9VTklUX1RFU1QgbmFtZSkKKyAgQUREX0VYRUNVVEFCTEUodGVz
dC0ke25hbWV9IHRlc3QtJHtuYW1lfS5jKQorICBUQVJHRVRfTElOS19MSUJSQVJJRVModGVzdC0k
e25hbWV9IHVib3gpCisgIFRBUkdFVF9JTkNMVURFX0RJUkVDVE9SSUVTKHRlc3QtJHtuYW1lfSBQ
UklWQVRFICR7UFJPSkVDVF9TT1VSQ0VfRElSfSkKK0VORE1BQ1JPKEFERF9VTklUX1RFU1QpCisK
K0FERF9VTklUX1RFU1QoYXZsKQorQUREX1VOSVRfVEVTVChiNjQpCmRpZmYgLS1naXQgYS90ZXN0
cy9jcmFtL0NNYWtlTGlzdHMudHh0IGIvdGVzdHMvY3JhbS9DTWFrZUxpc3RzLnR4dApuZXcgZmls
ZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmNhMDBkMTFkZDY4NgotLS0gL2Rldi9u
dWxsCisrKyBiL3Rlc3RzL2NyYW0vQ01ha2VMaXN0cy50eHQKQEAgLTAsMCArMSwyNyBAQAorRklO
RF9QQUNLQUdFKFB5dGhvbkludGVycCAzIFJFUVVJUkVEKQorRklMRShHTE9CIHRlc3RfY2FzZXMg
InRlc3RfKi50IikKKworU0VUKFBZVEhPTl9WRU5WX0RJUiAiJHtDTUFLRV9DVVJSRU5UX0JJTkFS
WV9ESVJ9Ly52ZW52IikKK1NFVChQWVRIT05fVkVOVl9QSVAgIiR7UFlUSE9OX1ZFTlZfRElSfS9i
aW4vcGlwIikKK1NFVChQWVRIT05fVkVOVl9DUkFNICIke1BZVEhPTl9WRU5WX0RJUn0vYmluL2Ny
YW0iKQorCitBRERfQ1VTVE9NX0NPTU1BTkQoCisJT1VUUFVUICR7UFlUSE9OX1ZFTlZfQ1JBTX0K
KwlDT01NQU5EICR7UFlUSE9OX0VYRUNVVEFCTEV9IC1tIHZlbnYgJHtQWVRIT05fVkVOVl9ESVJ9
CisJQ09NTUFORCAke1BZVEhPTl9WRU5WX1BJUH0gaW5zdGFsbCBjcmFtCispCitBRERfQ1VTVE9N
X1RBUkdFVChwcmVwYXJlLWNyYW0tdmVudiBBTEwgREVQRU5EUyAke1BZVEhPTl9WRU5WX0NSQU19
KQorCitBRERfVEVTVCgKKwlOQU1FIGNyYW0KKwlDT01NQU5EICR7UFlUSE9OX1ZFTlZfQ1JBTX0g
JHt0ZXN0X2Nhc2VzfQorCVdPUktJTkdfRElSRUNUT1JZICR7Q01BS0VfQ1VSUkVOVF9TT1VSQ0Vf
RElSfQorKQorCitNQUNSTyhBRERfQ1JBTV9URVNUX0VOViBlbnYgZmlsZSkKKwlTRVRfUFJPUEVS
VFkoVEVTVCBjcmFtIEFQUEVORCBQUk9QRVJUWSBFTlZJUk9OTUVOVCAiJHtlbnZ9PSQ8VEFSR0VU
X0ZJTEU6JHtmaWxlfT4iKQorRU5ETUFDUk8oQUREX0NSQU1fVEVTVF9FTlYpCisKK0FERF9DUkFN
X1RFU1RfRU5WKEpTSE4ganNobikKK0FERF9DUkFNX1RFU1RfRU5WKFRFU1RfQVZMIHRlc3QtYXZs
KQorQUREX0NSQU1fVEVTVF9FTlYoVEVTVF9CNjQgdGVzdC1iNjQpCmRpZmYgLS1naXQgYS90ZXN0
cy9jcmFtL3Rlc3RfYXZsLnQgYi90ZXN0cy9jcmFtL3Rlc3RfYXZsLnQKbmV3IGZpbGUgbW9kZSAx
MDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi42NjE3NzliOWIxOTAKLS0tIC9kZXYvbnVsbAorKysg
Yi90ZXN0cy9jcmFtL3Rlc3RfYXZsLnQKQEAgLTAsMCArMSwxMCBAQAorY2hlY2sgdGhhdCBhdmwg
aXMgcHJvZHVjaW5nIGV4cGVjdGVkIHJlc3VsdHM6CisKKyAgJCB2YWxncmluZCAtLXF1aWV0IC0t
bGVhay1jaGVjaz1mdWxsICRURVNUX0FWTAorICB0ZXN0X2Jhc2ljczogaW5zZXJ0OiAwPXplcm8g
MD1vbmUgMD10d28gMD10aHJlZSAwPWZvdXIgMD1maXZlIDA9c2l4IDA9c2V2ZW4gMD1laWdodCAw
PW5pbmUgMD10ZW4gMD1lbGV2ZW4gMD10d2VsdmUgCisgIHRlc3RfYmFzaWNzOiBpbnNlcnQgZHVw
bGljYXRlOiAtMT16ZXJvIC0xPW9uZSAtMT10d28gLTE9dGhyZWUgLTE9Zm91ciAtMT1maXZlIC0x
PXNpeCAtMT1zZXZlbiAtMT1laWdodCAtMT1uaW5lIC0xPXRlbiAtMT1lbGV2ZW4gLTE9dHdlbHZl
IAorICB0ZXN0X2Jhc2ljczogZmlyc3Q9ZWlnaHQgbGFzdD16ZXJvCisgIHRlc3RfYmFzaWNzOiBm
b3IgZWFjaCBlbGVtZW50OiBlaWdodCBlbGV2ZW4gZml2ZSBmb3VyIG5pbmUgb25lIHNldmVuIHNp
eCB0ZW4gdGhyZWUgdHdlbHZlIHR3byB6ZXJvIAorICB0ZXN0X2Jhc2ljczogZGVsZXRlICdvbmUn
IGVsZW1lbnQKKyAgdGVzdF9iYXNpY3M6IGZvciBlYWNoIGVsZW1lbnQgcmV2ZXJzZTogemVybyB0
d28gdHdlbHZlIHRocmVlIHRlbiBzaXggc2V2ZW4gbmluZSBmb3VyIGZpdmUgZWxldmVuIGVpZ2h0
IAorICB0ZXN0X2Jhc2ljczogZGVsZXRlIGFsbCBlbGVtZW50cwpkaWZmIC0tZ2l0IGEvdGVzdHMv
Y3JhbS90ZXN0X2Jhc2U2NC50IGIvdGVzdHMvY3JhbS90ZXN0X2Jhc2U2NC50Cm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uN2U0MTQ0Mjc0NmQ4Ci0tLSAvZGV2L251bGwK
KysrIGIvdGVzdHMvY3JhbS90ZXN0X2Jhc2U2NC50CkBAIC0wLDAgKzEsMTcgQEAKK2NoZWNrIHRo
YXQgYmFzZTY0IGlzIHByb2R1Y2luZyBleHBlY3RlZCByZXN1bHRzOgorCisgICQgdmFsZ3JpbmQg
LS1xdWlldCAtLWxlYWstY2hlY2s9ZnVsbCAkVEVTVF9CNjQKKyAgMCAKKyAgNCBaZz09CisgIDQg
Wm04PQorICA0IFptOXYKKyAgOCBabTl2WWc9PQorICA4IFptOXZZbUU9CisgIDggWm05dlltRnkK
KyAgMCAKKyAgMSBmCisgIDIgZm8KKyAgMyBmb28KKyAgNCBmb29iCisgIDUgZm9vYmEKKyAgNiBm
b29iYXIKZGlmZiAtLWdpdCBhL3Rlc3RzL2NyYW0vdGVzdF9qc2huLnQgYi90ZXN0cy9jcmFtL3Rl
c3RfanNobi50Cm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uZDIyOGYw
ZTY0OGM2Ci0tLSAvZGV2L251bGwKKysrIGIvdGVzdHMvY3JhbS90ZXN0X2pzaG4udApAQCAtMCww
ICsxLDI1IEBACitzZXQganNobiBmb3IgY29udmVuaWVuY2U6CisKKyAgJCBbIC1uICIkSlNITiIg
XSAmJiBleHBvcnQgUEFUSD0iJChkaXJuYW1lICIkSlNITiIpOiRQQVRIIgorICAkIGFsaWFzIGpz
aG49InZhbGdyaW5kIC0tcXVpZXQgLS1sZWFrLWNoZWNrPWZ1bGwganNobiIKKworY2hlY2sgdXNh
Z2U6CisKKyAgJCBqc2huCisgIFVzYWdlOiBqc2huIFstbl0gWy1pXSAtciA8bWVzc2FnZT58LVIg
PGZpbGU+fC13CisgIFsyXQorCit0ZXN0IGJhZCBqc29uOgorCisgICQganNobiAtciAnW10nCisg
IEZhaWxlZCB0byBwYXJzZSBtZXNzYWdlIGRhdGEKKyAgWzFdCisKK3Rlc3QgZ29vZCBqc29uOgor
CisgICQganNobiAtciAneyJmb28iOiAiYmFyIiwgImJheiI6IHsibmV4dCI6ICJtZWVwIn19Jwor
ICBqc29uX2luaXQ7CisgIGpzb25fYWRkX3N0cmluZyAnZm9vJyAnYmFyJzsKKyAganNvbl9hZGRf
b2JqZWN0ICdiYXonOworICBqc29uX2FkZF9zdHJpbmcgJ25leHQnICdtZWVwJzsKKyAganNvbl9j
bG9zZV9vYmplY3Q7CmRpZmYgLS1naXQgYS90ZXN0cy90ZXN0LWF2bC5jIGIvdGVzdHMvdGVzdC1h
dmwuYwpuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjE4ZWU5Yjc2OTdj
NQotLS0gL2Rldi9udWxsCisrKyBiL3Rlc3RzL3Rlc3QtYXZsLmMKQEAgLTAsMCArMSw4NyBAQAor
I2luY2x1ZGUgPHN0ZGlvLmg+CisjaW5jbHVkZSA8c3RyaW5nLmg+CisjaW5jbHVkZSA8c3RkbGli
Lmg+CisKKyNpbmNsdWRlICJhdmwuaCIKKyNpbmNsdWRlICJhdmwtY21wLmgiCisjaW5jbHVkZSAi
dXRpbHMuaCIKKworI2RlZmluZSBPVVQoZm10LCAuLi4pIGRvIHsgXAorCWZwcmludGYoc3Rkb3V0
LCAiJXM6ICIgZm10LCBfX2Z1bmNfXywgIyMgX19WQV9BUkdTX18pOyBcCit9IHdoaWxlICgwKTsK
Kworc3RydWN0IG5vZGUgeworCXN0cnVjdCBhdmxfbm9kZSBhdmw7Cit9OworCitzdGF0aWMgdm9p
ZCB0ZXN0X2Jhc2ljcygpCit7CisJc2l6ZV90IGk7CisJc3RydWN0IGF2bF90cmVlIHQ7CisJc3Ry
dWN0IG5vZGUgKnRlbXA7CisJc3RydWN0IG5vZGUgKmVsZW07CisJc3RydWN0IG5vZGUgKmxhc3Q7
CisJc3RydWN0IG5vZGUgKmZpcnN0OworCWNvbnN0IGNoYXIgKnZhbHNbXSA9IHsKKwkJInplcm8i
LCAib25lIiwgInR3byIsICJ0aHJlZSIsICJmb3VyIiwgImZpdmUiLCAic2l4IiwKKwkJInNldmVu
IiwgImVpZ2h0IiwgIm5pbmUiLCAidGVuIiwgImVsZXZlbiIsICJ0d2VsdmUiCisJfTsKKworCWF2
bF9pbml0KCZ0LCBhdmxfc3RyY21wLCBmYWxzZSwgTlVMTCk7CisKKwlPVVQoImluc2VydDogIik7
CisJZm9yIChpPTA7IGk8QVJSQVlfU0laRSh2YWxzKTsgaSsrKSB7CisJCXN0cnVjdCBub2RlICpu
ID0gbWFsbG9jKHNpemVvZihzdHJ1Y3Qgbm9kZSkpOworCQluLT5hdmwua2V5ID0gdmFsc1tpXTsK
KworCQlpbnQgciA9IGF2bF9pbnNlcnQoJnQsICZuLT5hdmwpOworCQlmcHJpbnRmKHN0ZG91dCwg
IiVkPSVzICIsIHIsIChjaGFyICopbi0+YXZsLmtleSk7CisJfQorCWZwcmludGYoc3Rkb3V0LCAi
XG4iKTsKKworCU9VVCgiaW5zZXJ0IGR1cGxpY2F0ZTogIik7CisJZm9yIChpPTA7IGk8QVJSQVlf
U0laRSh2YWxzKTsgaSsrKSB7CisJCXN0cnVjdCBub2RlICpuID0gbWFsbG9jKHNpemVvZihzdHJ1
Y3Qgbm9kZSkpOworCQluLT5hdmwua2V5ID0gdmFsc1tpXTsKKworCQlpbnQgciA9IGF2bF9pbnNl
cnQoJnQsICZuLT5hdmwpOworCQlmcHJpbnRmKHN0ZG91dCwgIiVkPSVzICIsIHIsIChjaGFyICop
bi0+YXZsLmtleSk7CisKKwkJaWYgKHIpCisJCQlmcmVlKG4pOworCX0KKwlmcHJpbnRmKHN0ZG91
dCwgIlxuIik7CisKKwlmaXJzdCA9IGF2bF9maXJzdF9lbGVtZW50KCZ0LCBmaXJzdCwgYXZsKTsK
KwlsYXN0ID0gYXZsX2xhc3RfZWxlbWVudCgmdCwgbGFzdCwgYXZsKTsKKwlPVVQoImZpcnN0PSVz
IGxhc3Q9JXNcbiIsIChjaGFyKilmaXJzdC0+YXZsLmtleSwgKGNoYXIqKWxhc3QtPmF2bC5rZXkp
OworCisJT1VUKCJmb3IgZWFjaCBlbGVtZW50OiAiKTsKKwlhdmxfZm9yX2VhY2hfZWxlbWVudCgm
dCwgZWxlbSwgYXZsKSB7CisJCWZwcmludGYoc3Rkb3V0LCAiJXMgIiwgKGNoYXIqKWVsZW0tPmF2
bC5rZXkpOworCX0KKwlmcHJpbnRmKHN0ZG91dCwgIlxuIik7CisKKwlPVVQoImRlbGV0ZSAnb25l
JyBlbGVtZW50XG4iKTsKKwllbGVtID0gYXZsX2ZpbmRfZWxlbWVudCgmdCwgIm9uZSIsIGVsZW0s
IGF2bCk7CisJYXZsX2RlbGV0ZSgmdCwgJmVsZW0tPmF2bCk7CisJZnJlZShlbGVtKTsKKworCU9V
VCgiZm9yIGVhY2ggZWxlbWVudCByZXZlcnNlOiAiKTsKKwlhdmxfZm9yX2VhY2hfZWxlbWVudF9y
ZXZlcnNlKCZ0LCBlbGVtLCBhdmwpIHsKKwkJZnByaW50ZihzdGRvdXQsICIlcyAiLCAoY2hhciop
ZWxlbS0+YXZsLmtleSk7CisJfQorCWZwcmludGYoc3Rkb3V0LCAiXG4iKTsKKworCU9VVCgiZGVs
ZXRlIGFsbCBlbGVtZW50c1xuIik7CisJYXZsX2Zvcl9lYWNoX2VsZW1lbnRfc2FmZSgmdCwgZWxl
bSwgYXZsLCB0ZW1wKSB7CisJCWF2bF9kZWxldGUoJnQsICZlbGVtLT5hdmwpOworCQlmcmVlKGVs
ZW0pOworCX0KK30KKworaW50IG1haW4oKQoreworCXRlc3RfYmFzaWNzKCk7CisJcmV0dXJuIDA7
Cit9CmRpZmYgLS1naXQgYS90ZXN0cy90ZXN0LWI2NC5jIGIvdGVzdHMvdGVzdC1iNjQuYwpuZXcg
ZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmMyOWI0ZTJjNzNhMwotLS0gL2Rl
di9udWxsCisrKyBiL3Rlc3RzL3Rlc3QtYjY0LmMKQEAgLTAsMCArMSwzOSBAQAorI2luY2x1ZGUg
PHN0ZGlvLmg+CisjaW5jbHVkZSA8c3RyaW5nLmg+CisKKyNpbmNsdWRlICJ1dGlscy5oIgorCitz
dGF0aWMgdm9pZCB0ZXN0X2I2NF9lbmNvZGUoY29uc3QgY2hhciAqc3JjKQoreworCWNoYXIgZHN0
WzI1NV0gPSB7MH07CisJaW50IHIgPSBiNjRfZW5jb2RlKHNyYywgc3RybGVuKHNyYyksIGRzdCwg
c2l6ZW9mKGRzdCkpOworCWZwcmludGYoc3Rkb3V0LCAiJWQgJXNcbiIsIHIsIGRzdCk7Cit9CisK
K3N0YXRpYyB2b2lkIHRlc3RfYjY0X2RlY29kZShjb25zdCBjaGFyICpzcmMpCit7CisJY2hhciBk
c3RbMjU1XSA9IHswfTsKKwlpbnQgciA9IGI2NF9kZWNvZGUoc3JjLCBkc3QsIHNpemVvZihkc3Qp
KTsKKwlmcHJpbnRmKHN0ZG91dCwgIiVkICVzXG4iLCByLCBkc3QpOworfQorCitpbnQgbWFpbigp
Cit7CisJdGVzdF9iNjRfZW5jb2RlKCIiKTsKKwl0ZXN0X2I2NF9lbmNvZGUoImYiKTsKKwl0ZXN0
X2I2NF9lbmNvZGUoImZvIik7CisJdGVzdF9iNjRfZW5jb2RlKCJmb28iKTsKKwl0ZXN0X2I2NF9l
bmNvZGUoImZvb2IiKTsKKwl0ZXN0X2I2NF9lbmNvZGUoImZvb2JhIik7CisJdGVzdF9iNjRfZW5j
b2RlKCJmb29iYXIiKTsKKworCXRlc3RfYjY0X2RlY29kZSgiIik7CisJdGVzdF9iNjRfZGVjb2Rl
KCJaZz09Iik7CisJdGVzdF9iNjRfZGVjb2RlKCJabTg9Iik7CisJdGVzdF9iNjRfZGVjb2RlKCJa
bTl2Iik7CisJdGVzdF9iNjRfZGVjb2RlKCJabTl2WWc9PSIpOworCXRlc3RfYjY0X2RlY29kZSgi
Wm05dlltRT0iKTsKKwl0ZXN0X2I2NF9kZWNvZGUoIlptOXZZbUZ5Iik7CisKKwlyZXR1cm4gMDsK
K30KCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCm9wZW53
cnQtZGV2ZWwgbWFpbGluZyBsaXN0Cm9wZW53cnQtZGV2ZWxAbGlzdHMub3BlbndydC5vcmcKaHR0
cHM6Ly9saXN0cy5vcGVud3J0Lm9yZy9tYWlsbWFuL2xpc3RpbmZvL29wZW53cnQtZGV2ZWwK
