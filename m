Return-Path: <openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org>
X-Original-To: lists+openwrt-devel@lfdr.de
Delivered-To: lists+openwrt-devel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id BA8751966AB
	for <lists+openwrt-devel@lfdr.de>; Sat, 28 Mar 2020 15:21:24 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:Subject:MIME-Version:References:
	In-Reply-To:Message-Id:Date:To:From:Reply-To:Content-ID:Content-Description:
	Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=Rgk+ckhGfBNb88oFzo98k6gRRlno3TZwIP2SukYUyhw=; b=ZRtLfuKPMxRj3+
	prZyxUjrc0J2wLhvkMKDhdP4hRCWZahd4df12vaHZ/aREUDqOa7q0fs+maaW4xJC5IiPQ0CPauzAS
	CVdDur2EbR8nfDVSwAbOKwxmZotdxMGmGzviEXkO5boZZGdY/ySYPquBho3W0RQzb2dCUEKpXsKo+
	7KDVPlk3rhoCpA+7SHKJXPHsUwFxFxtjrvDnDhWAft9TB5RsFsqV65Lvlzs7UlWrKFvFHuARx1ksx
	nIlu1eXKYiR7qZa8KJ97lWQfCL6JTYAzPT/LxLbZ1mU7cAxmk+vENhN6/BwWdFipgJ0y5hEqdqAtX
	ihhsmGIHwjLS6/+QK0qw==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1jICKw-0007oM-J3; Sat, 28 Mar 2020 14:21:22 +0000
Received: from vps.slashdirt.org ([144.91.108.218])
 by bombadil.infradead.org with esmtps (Exim 4.92.3 #3 (Red Hat Linux))
 id 1jICKZ-0007g3-7y
 for openwrt-devel@lists.openwrt.org; Sat, 28 Mar 2020 14:21:01 +0000
Received: from supercopter (82-64-212-153.subs.proxad.net [82.64.212.153])
 (using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
 (No client certificate requested)
 by vps.slashdirt.org (Postfix) with ESMTPS id 09C7A6055D;
 Sat, 28 Mar 2020 15:20:52 +0100 (CET)
DMARC-Filter: OpenDMARC Filter v1.3.2 vps.slashdirt.org 09C7A6055D
Authentication-Results: vps.slashdirt.org; dmarc=fail (p=quarantine dis=none)
 header.from=slashdirt.org
DKIM-Filter: OpenDKIM Filter v2.11.0 vps.slashdirt.org 09C7A6055D
Received: by supercopter (sSMTP sendmail emulation);
 Sat, 28 Mar 2020 15:20:52 +0100
From: =?UTF-8?q?Thibaut=20VAR=C3=88NE?= <hacks@slashdirt.org>
To: openwrt-devel@lists.openwrt.org
Date: Sat, 28 Mar 2020 15:20:22 +0100
Message-Id: <20200328142032.37734-2-hacks@slashdirt.org>
X-Mailer: git-send-email 2.11.0
In-Reply-To: <20200328142032.37734-1-hacks@slashdirt.org>
References: <20200328142032.37734-1-hacks@slashdirt.org>
MIME-Version: 1.0
X-Spam-Status: No, score=-2.6 required=5.0 tests=BAYES_00,DKIM_ADSP_ALL,
 NO_DNS_FOR_FROM,TXREP,UNPARSEABLE_RELAY shortcircuit=no autolearn=no
 autolearn_force=no version=3.4.2
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on vps.slashdirt.org
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20200328_072059_606905_992961A5 
X-CRM114-Status: GOOD (  27.74  )
X-Spam-Score: 1.5 (+)
X-Spam-Report: SpamAssassin version 3.4.4 on bombadil.infradead.org summary:
 Content analysis details:   (1.5 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 0.4 NO_DNS_FOR_FROM        RBL: Envelope sender has no MX or A DNS records
 [listed in slashdirt.org.	IN	A]
 -0.0 SPF_PASS               SPF: sender matches SPF record
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 1.1 DKIM_ADSP_ALL          No valid author signature, domain signs all mail
Subject: [OpenWrt-Devel] [PATCH 01/11] generic: routerbootpart MTD parser
 for RouterBoot
X-BeenThere: openwrt-devel@lists.openwrt.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <openwrt-devel.lists.openwrt.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/openwrt-devel>, 
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/openwrt-devel/>
List-Post: <mailto:openwrt-devel@lists.openwrt.org>
List-Help: <mailto:openwrt-devel-request@lists.openwrt.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/openwrt-devel>,
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=subscribe>
Cc: =?UTF-8?q?Thibaut=20VAR=C3=88NE?= <hacks@slashdirt.org>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "openwrt-devel" <openwrt-devel-bounces@lists.openwrt.org>
Errors-To: openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org

VGhpcyBkcml2ZXIgcHJvdmlkZXMgYW4gT0YgTVREIHBhcnNlciB0byBwcm9wZXJseSBhc3NpZ24g
dGhlIFJvdXRlckJvb3QKcGFydGl0aW9ucyBvbiB0aGUgZmxhc2guIFRoaXMgcGFyc2VyIGJ1aWxk
cyBmcm9tIHRoZSAiZml4ZWQtcGFydGl0aW9ucyIKb25lIChzZWUgb2ZwYXJ0LmMpLCBidXQgaXQg
Y2FuIGhhbmRsZSBkeW5hbWljIHBhcnRpdGlvbnMgYXMgZm91bmQgb24Kcm91dGVyYm9vdCBkZXZp
Y2VzLgoKVGhlIHBhcmVudCBub2RlIG11c3QgY29udGFpbiB0aGUgZm9sbG93aW5nOgoJY29tcGF0
aWJsZSA9ICJtaWtyb3Rpayxyb3V0ZXJib290LXBhcnRpdGlvbnMiOwoJI2FkZHJlc3MtY2VsbHMg
PSA8MT47Cgkjc2l6ZS1jZWxscyA9IDwxPjsKCkNoaWxkcmVuIHJvdXRlcmJvb3RwYXJ0IERUUyBu
b2RlcyBhcmUgZGVmaW5lZCBhcyBmb2xsb3dzOgpGb3IgZml4ZWQgcGFydGl0aW9ucwoJbm9kZS1u
YW1lQHVuaXQtYWRkcmVzc8KgewoJCXJlZyA9IDxwcm9wLWVuY29kZWQtYXJyYXk+OwoJCWxhYmVs
ID0gPHN0cmluZz47CgkJcmVhZC1vbmx5OwoJCWxvY2s7Cgl9OwoKQWxsIHByb3BlcnRpZXMgYnV0
IHJlZyBhcmUgb3B0aW9uYWwuCgpGb3IgZHluYW1pYyBwYXJ0aXRpb25zOgoJbm9kZS1uYW1lwqB7
CgkJc2l6ZSA9IDxwcm9wLWVuY29kZWQtYXJyYXk+OwoJCWxhYmVsID0gPHN0cmluZz47CgkJcmVh
ZC1vbmx5OwoJCWxvY2s7Cgl9OwoKc2l6ZSBwcm9wZXJ0eSBpcyBtYW5kYXRvcnkgdW5sZXNzIHRo
ZSBuZXh0IHBhcnRpdGlvbiBpcyBhIGZpeGVkIG9uZSBvcgphICJ3ZWxsLWtub3duIiBvbmUgKG1h
dGNoZWQgZnJvbSB0aGUgc3RyaW5ncyBkZWZpbmVkIGJlbG93KSBpbiB3aGljaCBjYXNlCml0IGNh
biBiZSBvbWl0dGVkIG9yIHNldCB0byAwOyBvdGhlciBwcm9wZXJ0aWVzIGFyZSBvcHRpb25hbC4K
CkJ5IGRlZmF1bHQgZHluYW1pYyBwYXJ0aXRpb25zIGFyZSBhcHBlbmRlZCBhZnRlciB0aGUgcHJl
Y2VkaW5nIG9uZSwgZXhjZXB0CmZvciAid2VsbC1rbm93biIgb25lcyB3aGljaCBhcmUgYXV0b21h
dGljYWxseSBsb2NhdGVkIG9uIGZsYXNoLgoKV2VsbC1rbm93biBwYXJ0aXRpb25zIChtYXRjaGVk
IHZpYSBsYWJlbCBvciBub2RlLW5hbWUpOgogLSAiaGFyZF9jb25maWciCiAtICJzb2Z0X2NvbmZp
ZyIKIC0gImR0Yl9jb25maWciCgpUaGlzIHBhcnNlciByZXF1aXJlcyB0aGUgRFRTIHRvIGxpc3Qg
cGFydGl0aW9ucyBpbiBhc2NlbmRpbmcgb3JkZXIgYXMKZXhwZWN0ZWQgb24gdGhlIE1URCBkZXZp
Y2UuCgpUaGlzIHBhcnNlciBoYXMgYmVlbiBzdWNjZXNzZnVsbHkgdGVzdGVkIG9uIEJFIChhdGg3
OSkgYW5kIExFIChpcHE0MHh4KQpoYXJkd2FyZS4KClRlc3RlZC1ieTogQmFwdGlzdGUgSm9uZ2xl
eiA8Z2l0QGJpdHNvZm5ldHdvcmtzLm9yZz4KVGVzdGVkLWJ5OiBSb2dlciBQdWV5byBDZW50ZWxs
ZXMgPHJvZ2VyLnB1ZXlvQGd1aWZpLm5ldD4KU2lnbmVkLW9mZi1ieTogVGhpYmF1dCBWQVLDiE5F
IDxoYWNrc0BzbGFzaGRpcnQub3JnPgotLS0KIC4uLi9maWxlcy9kcml2ZXJzL210ZC9wYXJzZXJz
L3JvdXRlcmJvb3RwYXJ0LmMgICAgIHwgMzU1ICsrKysrKysrKysrKysrKysrKysrKwogMSBmaWxl
IGNoYW5nZWQsIDM1NSBpbnNlcnRpb25zKCspCiBjcmVhdGUgbW9kZSAxMDA2NDQgdGFyZ2V0L2xp
bnV4L2dlbmVyaWMvZmlsZXMvZHJpdmVycy9tdGQvcGFyc2Vycy9yb3V0ZXJib290cGFydC5jCgpk
aWZmIC0tZ2l0IGEvdGFyZ2V0L2xpbnV4L2dlbmVyaWMvZmlsZXMvZHJpdmVycy9tdGQvcGFyc2Vy
cy9yb3V0ZXJib290cGFydC5jIGIvdGFyZ2V0L2xpbnV4L2dlbmVyaWMvZmlsZXMvZHJpdmVycy9t
dGQvcGFyc2Vycy9yb3V0ZXJib290cGFydC5jCm5ldyBmaWxlIG1vZGUgMTAwNjQ0CmluZGV4IDAw
MDAwMDAwMDAuLjFjYTcxMzVkODAKLS0tIC9kZXYvbnVsbAorKysgYi90YXJnZXQvbGludXgvZ2Vu
ZXJpYy9maWxlcy9kcml2ZXJzL210ZC9wYXJzZXJzL3JvdXRlcmJvb3RwYXJ0LmMKQEAgLTAsMCAr
MSwzNTUgQEAKKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4wCisvKgorICogUGFy
c2VyIGZvciBNaWtyb1RpayBSb3V0ZXJCb290IHBhcnRpdGlvbnMuCisgKgorICogQ29weXJpZ2h0
IChDKSAyMDIwIFRoaWJhdXQgVkFSw4hORSA8aGFja3Mra2VybmVsQHNsYXNoZGlydC5vcmc+Cisg
KgorICogVGhpcyBwcm9ncmFtIGlzIGZyZWUgc29mdHdhcmU7IHlvdSBjYW4gcmVkaXN0cmlidXRl
IGl0IGFuZC9vciBtb2RpZnkgaXQKKyAqIHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIEdlbmVy
YWwgUHVibGljIExpY2Vuc2UgdmVyc2lvbiAyIGFzIHB1Ymxpc2hlZAorICogYnkgdGhlIEZyZWUg
U29mdHdhcmUgRm91bmRhdGlvbi4KKyAqCisgKiBUaGlzIHBhcnNlciBidWlsZHMgZnJvbSB0aGUg
ImZpeGVkLXBhcnRpdGlvbnMiIG9uZSAoc2VlIG9mcGFydC5jKSwgYnV0IGl0IGNhbgorICogaGFu
ZGxlIGR5bmFtaWMgcGFydGl0aW9ucyBhcyBmb3VuZCBvbiByb3V0ZXJib290IGRldmljZXMuCisg
KgorICogRFRTIG5vZGVzIGFyZSBkZWZpbmVkIGFzIGZvbGxvd3M6CisgKiBGb3IgZml4ZWQgcGFy
dGl0aW9uczoKKyAqCW5vZGUtbmFtZUB1bml0LWFkZHJlc3PCoHsKKyAqCQlyZWcgPSA8cHJvcC1l
bmNvZGVkLWFycmF5PjsKKyAqCQlsYWJlbCA9IDxzdHJpbmc+OworICoJCXJlYWQtb25seTsKKyAq
CQlsb2NrOworICoJfTsKKyAqCisgKiByZWcgcHJvcGVydHkgaXMgbWFuZGF0b3J5OyBvdGhlciBw
cm9wZXJ0aWVzIGFyZSBvcHRpb25hbC4KKyAqIHJlZyBmb3JtYXQgaXMgPGFkZHJlc3MgbGVuZ3Ro
Pi4gbGVuZ3RoIGNhbiBiZSAwIGlmIHRoZSBuZXh0IHBhcnRpdGlvbiBpcworICogYW5vdGhlciBm
aXhlZCBwYXJ0aXRpb24gb3IgYSAid2VsbC1rbm93biIgcGFydGl0aW9uIGFzIGRlZmluZWQgYmVs
b3c6IGluIHRoYXQKKyAqIGNhc2UgdGhlIHBhcnRpdGlvbiB3aWxsIGV4dGVuZCB1cCB0byB0aGUg
bmV4dCBvbmUuCisgKgorICogRm9yIGR5bmFtaWMgcGFydGl0aW9uczoKKyAqCW5vZGUtbmFtZSB7
CisgKgkJc2l6ZSA9IDxwcm9wLWVuY29kZWQtYXJyYXk+OworICoJCWxhYmVsID0gPHN0cmluZz47
CisgKgkJcmVhZC1vbmx5OworICoJCWxvY2s7CisgKgl9OworICoKKyAqIHNpemUgcHJvcGVydHkg
aXMgbWFuZGF0b3J5IHVubGVzcyB0aGUgbmV4dCBwYXJ0aXRpb24gaXMgYSBmaXhlZCBvbmUgb3IK
KyAqIGEgIndlbGwta25vd24iIG9uZSAobWF0Y2hlZCBmcm9tIHRoZSBzdHJpbmdzIGRlZmluZWQg
YmVsb3cpIGluIHdoaWNoIGNhc2UgaXQKKyAqIGNhbiBiZSBvbWl0dGVkIG9yIHNldCB0byAwOyBv
dGhlciBwcm9wZXJ0aWVzIGFyZSBvcHRpb25hbC4KKyAqIHNpemUgZm9ybWF0IGlzIDxsZW5ndGg+
LgorICogQnkgZGVmYXVsdCBkeW5hbWljIHBhcnRpdGlvbnMgYXJlIGFwcGVuZGVkIGFmdGVyIHRo
ZSBwcmVjZWRpbmcgb25lLCBleGNlcHQKKyAqIGZvciAid2VsbC1rbm93biIgb25lcyB3aGljaCBh
cmUgYXV0b21hdGljYWxseSBsb2NhdGVkIG9uIGZsYXNoLgorICoKKyAqIFdlbGwta25vd24gcGFy
dGl0aW9ucyAobWF0Y2hlZCB2aWEgbGFiZWwgb3Igbm9kZS1uYW1lKToKKyAqIC0gImhhcmRfY29u
ZmlnIgorICogLSAic29mdF9jb25maWciCisgKiAtICJkdGJfY29uZmlnIgorICoKKyAqIE5vdGU6
IHRoaXMgcGFyc2VyIHdpbGwgaGFwcGlseSByZWdpc3RlciAwLXNpemVkIHBhcnRpdGlvbnMgaWYg
bWlzdXNlZC4KKyAqCisgKiBUaGlzIHBhcnNlciByZXF1aXJlcyB0aGUgRFRTIHRvIGxpc3QgcGFy
dGl0aW9ucyBpbiBhc2NlbmRpbmcgb3JkZXIgYXMKKyAqIGV4cGVjdGVkIG9uIHRoZSBNVEQgZGV2
aWNlLgorICoKKyAqIFNpbmNlIG9ubHkgdGhlICJoYXJkX2NvbmZpZyIgYW5kICJzb2Z0X2NvbmZp
ZyIgcGFydGl0aW9ucyBhcmUgdXNlZCBpbiBPcGVuV1JULAorICogYSBtaW5pbWFsIHdvcmtpbmcg
RFRTIGNvdWxkIGRlZmluZSBvbmx5IHRoZXNlIHR3byBwYXJ0aXRpb25zIGR5bmFtaWNhbGx5IChp
bgorICogdGhlIHJpZ2h0IG9yZGVyLCB1c3VhbGx5IGhhcmRfY29uZmlnIHRoZW4gc29mdF9jb25m
aWcpLgorICovCisKKworI2luY2x1ZGUgPGxpbnV4L21vZHVsZS5oPgorI2luY2x1ZGUgPGxpbnV4
L3NsYWIuaD4KKyNpbmNsdWRlIDxsaW51eC9tdGQvbXRkLmg+CisjaW5jbHVkZSA8bGludXgvbXRk
L3BhcnRpdGlvbnMuaD4KKyNpbmNsdWRlIDxsaW51eC9vZi5oPgorI2luY2x1ZGUgPGxpbnV4L29m
X2ZkdC5oPgorI2luY2x1ZGUgPGxpbnV4L2xpYmZkdF9lbnYuaD4KKyNpbmNsdWRlIDxsaW51eC9z
dHJpbmcuaD4KKworI2RlZmluZSBSQl9NQUdJQ19IQVJECSgoJ0gnKSB8ICgnYScgPDwgOCkgfCAo
J3InIDw8IDE2KSB8ICgnZCcgPDwgMjQpKQorI2RlZmluZSBSQl9NQUdJQ19TT0ZUCSgoJ1MnKSB8
ICgnbycgPDwgOCkgfCAoJ2YnIDw8IDE2KSB8ICgndCcgPDwgMjQpKQorI2RlZmluZSBSQl9CTE9D
S19TSVpFCTB4MTAwMAorCitzdHJ1Y3Qgcm91dGVyYm9vdF9keW5wYXJ0IHsKKwljb25zdCBjaGFy
ICogY29uc3QgbmFtZTsKKwljb25zdCB1MzIgbWFnaWM7CisJaW50ICgqIGNvbnN0IHNpemVfZml4
dXApKHN0cnVjdCBtdGRfaW5mbyAqLCBzdHJ1Y3Qgcm91dGVyYm9vdF9keW5wYXJ0ICopOworCXNp
emVfdCBvZmZzZXQ7CisJc2l6ZV90IHNpemU7CisJYm9vbCBmb3VuZDsKK307CisKK3N0YXRpYyBp
bnQgcm91dGVyYm9vdF9kdGJzZml4dXAoc3RydWN0IG10ZF9pbmZvICosIHN0cnVjdCByb3V0ZXJi
b290X2R5bnBhcnQgKik7CisKK3N0YXRpYyBzdHJ1Y3Qgcm91dGVyYm9vdF9keW5wYXJ0IHJiX2R5
bnBhcnRzW10gPSB7CisJeworCQkubmFtZSA9ICJoYXJkX2NvbmZpZyIsCisJCS5tYWdpYyA9IFJC
X01BR0lDX0hBUkQsCS8vIHN0b3JlZCBpbiBDUFUtZW5kaWFubmVzcyBvbiBmbGFzaAorCQkuc2l6
ZV9maXh1cCA9IE5VTEwsCisJCS5vZmZzZXQgPSAweDAsCisJCS5zaXplID0gUkJfQkxPQ0tfU0la
RSwKKwkJLmZvdW5kID0gZmFsc2UsCisJfSwgeworCQkubmFtZSA9ICJzb2Z0X2NvbmZpZyIsCisJ
CS5tYWdpYyA9IFJCX01BR0lDX1NPRlQsCS8vIHN0b3JlZCBpbiBDUFUtZW5kaWFubmVzcyBvbiBm
bGFzaAorCQkuc2l6ZV9maXh1cCA9IE5VTEwsCisJCS5vZmZzZXQgPSAweDAsCisJCS5zaXplID0g
UkJfQkxPQ0tfU0laRSwKKwkJLmZvdW5kID0gZmFsc2UsCisJfSwgeworCQkubmFtZSA9ICJkdGJf
Y29uZmlnIiwKKwkJLm1hZ2ljID0gZmR0MzJfdG9fY3B1KE9GX0RUX0hFQURFUiksCS8vIHN0b3Jl
ZCBCRSBvbiBmbGFzaAorCQkuc2l6ZV9maXh1cCA9IHJvdXRlcmJvb3RfZHRic2ZpeHVwLAorCQku
b2Zmc2V0ID0gMHgwLAorCQkuc2l6ZSA9IDB4MCwKKwkJLmZvdW5kID0gZmFsc2UsCisJfQorfTsK
Kworc3RhdGljIGludCByb3V0ZXJib290X2R0YnNmaXh1cChzdHJ1Y3QgbXRkX2luZm8gKm1hc3Rl
ciwgc3RydWN0IHJvdXRlcmJvb3RfZHlucGFydCAqcmJkcGFydCkKK3sKKwlpbnQgZXJyOworCXNp
emVfdCBieXRlc19yZWFkLCBwc2l6ZTsKKwlzdHJ1Y3QgeworCQlmZHQzMl90IG1hZ2ljOworCQlm
ZHQzMl90IHRvdGFsc2l6ZTsKKwkJZmR0MzJfdCBvZmZfZHRfc3RydWN0OworCQlmZHQzMl90IG9m
Zl9kdF9zdHJpbmdzOworCQlmZHQzMl90IG9mZl9tZW1fcnN2bWFwOworCQlmZHQzMl90IHZlcnNp
b247CisJCWZkdDMyX3QgbGFzdF9jb21wX3ZlcnNpb247CisJCWZkdDMyX3QgYm9vdF9jcHVpZF9w
aHlzOworCQlmZHQzMl90IHNpemVfZHRfc3RyaW5nczsKKwkJZmR0MzJfdCBzaXplX2R0X3N0cnVj
dDsKKwl9IGZkdF9oZWFkZXI7CisKKwllcnIgPSBtdGRfcmVhZChtYXN0ZXIsIHJiZHBhcnQtPm9m
ZnNldCwgc2l6ZW9mKGZkdF9oZWFkZXIpLAorCQkgICAgICAgJmJ5dGVzX3JlYWQsICh1OCAqKSZm
ZHRfaGVhZGVyKTsKKwlpZiAoZXJyKQorCQlyZXR1cm4gZXJyOworCisJaWYgKGJ5dGVzX3JlYWQg
IT0gc2l6ZW9mKGZkdF9oZWFkZXIpKQorCQlyZXR1cm4gLUVJTzsKKworCXBzaXplID0gZmR0MzJf
dG9fY3B1KGZkdF9oZWFkZXIudG90YWxzaXplKTsKKwlpZiAoIXBzaXplKQorCQlyZXR1cm4gLUVJ
TlZBTDsKKworCXJiZHBhcnQtPnNpemUgPSBwc2l6ZTsKKwlyZXR1cm4gMDsKK30KKworc3RhdGlj
IHZvaWQgcm91dGVyYm9vdF9maW5kX2R5bnBhcnRzKHN0cnVjdCBtdGRfaW5mbyAqbWFzdGVyKQor
eworCXNpemVfdCBieXRlc19yZWFkLCBvZmZzZXQ7CisJYm9vbCBhbGxmb3VuZDsKKwlpbnQgZXJy
LCBpOworCXUzMiBidWY7CisKKwkvKiBSZWFkIHRoZSB3aG9sZSBwYXJ0aXRpb24gYXQgUkJfQkxP
Q0tfU0laRSBpbnRlcnZhbHMgdG8gZmluZCBzaWdzICovCisJb2Zmc2V0ID0gMDsKKwl3aGlsZSAo
b2Zmc2V0IDwgbWFzdGVyLT5zaXplKSB7CisJCWVyciA9IG10ZF9yZWFkKG1hc3Rlciwgb2Zmc2V0
LCBzaXplb2YoYnVmKSwgJmJ5dGVzX3JlYWQsICh1OCAqKSZidWYpOworCQlpZiAoZXJyKSB7CisJ
CQlwcl9lcnIoIiVzOiBtdGRfcmVhZCBlcnJvciB3aGlsZSBwYXJzaW5nIChvZmZzZXQ6IDB4JVgp
OiAlZFxuIiwKKwkJCSAgICAgICBtYXN0ZXItPm5hbWUsIG9mZnNldCwgZXJyKTsKKwkJCWNvbnRp
bnVlOworCQl9CisKKwkJYWxsZm91bmQgPSB0cnVlOworCisJCWZvciAoaSA9IDA7IGkgPCBBUlJB
WV9TSVpFKHJiX2R5bnBhcnRzKTsgaSsrKSB7CisJCQlpZiAocmJfZHlucGFydHNbaV0uZm91bmQp
CisJCQkJY29udGludWU7CisKKwkJCWFsbGZvdW5kID0gZmFsc2U7CisKKwkJCWlmIChyYl9keW5w
YXJ0c1tpXS5tYWdpYyA9PSBidWYpIHsKKwkJCQlyYl9keW5wYXJ0c1tpXS5vZmZzZXQgPSBvZmZz
ZXQ7CisKKwkJCQlpZiAocmJfZHlucGFydHNbaV0uc2l6ZV9maXh1cCkgeworCQkJCQllcnIgPSBy
Yl9keW5wYXJ0c1tpXS5zaXplX2ZpeHVwKG1hc3RlciwgJnJiX2R5bnBhcnRzW2ldKTsKKwkJCQkJ
aWYgKGVycikgeworCQkJCQkJcHJfZXJyKCIlczogc2l6ZSBmaXh1cCBlcnJvciB3aGlsZSBwYXJz
aW5nIFwiJXNcIjogJWRcbiIsCisJCQkJCQkgICAgICAgbWFzdGVyLT5uYW1lLCByYl9keW5wYXJ0
c1tpXS5uYW1lLCBlcnIpOworCQkJCQkJY29udGludWU7CisJCQkJCX0KKwkJCQl9CisKKwkJCQly
Yl9keW5wYXJ0c1tpXS5mb3VuZCA9IHRydWU7CisKKwkJCQkvKgorCQkJCSAqIG1vdmUgb2Zmc2V0
IHRvIHNraXAgdGhlIHdob2xlIHBhcnRpdGlvbiBvbgorCQkJCSAqIG5leHQgaXRlcmF0aW9uIGlm
IHNpemUgPiBSQl9CTE9DS19TSVpFLgorCQkJCSAqLworCQkJCWlmIChyYl9keW5wYXJ0c1tpXS5z
aXplID4gUkJfQkxPQ0tfU0laRSkKKwkJCQkJb2Zmc2V0ICs9IEFMSUdOX0RPV04oKHJiX2R5bnBh
cnRzW2ldLnNpemUgLSBSQl9CTE9DS19TSVpFKSwgUkJfQkxPQ0tfU0laRSk7CisKKwkJCQlicmVh
azsKKwkJCX0KKwkJfQorCisJCW9mZnNldCArPSBSQl9CTE9DS19TSVpFOworCisJCWlmIChhbGxm
b3VuZCkKKwkJCWJyZWFrOworCX0KK30KKworc3RhdGljIGludCByb3V0ZXJib290X3BhcnRpdGlv
bnNfcGFyc2Uoc3RydWN0IG10ZF9pbmZvICptYXN0ZXIsCisJCQkJICAgICAgIGNvbnN0IHN0cnVj
dCBtdGRfcGFydGl0aW9uICoqcHBhcnRzLAorCQkJCSAgICAgICBzdHJ1Y3QgbXRkX3BhcnRfcGFy
c2VyX2RhdGEgKmRhdGEpCit7CisJc3RydWN0IG10ZF9wYXJ0aXRpb24gKnBhcnRzOworCXN0cnVj
dCBkZXZpY2Vfbm9kZSAqcmJwYXJ0X25vZGUsICpwcDsKKwljb25zdCBjaGFyICpwYXJ0bmFtZTsK
KwlzaXplX3QgbWFzdGVyX29mczsKKwlpbnQgbnA7CisKKworCS8qIFB1bGwgb2Zfbm9kZSBmcm9t
IHRoZSBtYXN0ZXIgZGV2aWNlIG5vZGUgKi8KKwlyYnBhcnRfbm9kZSA9IG10ZF9nZXRfb2Zfbm9k
ZShtYXN0ZXIpOworCWlmICghcmJwYXJ0X25vZGUpCisJCXJldHVybiAwOworCisJLyogRmlyc3Qg
Y291bnQgdGhlIHN1Ym5vZGVzICovCisJbnAgPSAwOworCWZvcl9lYWNoX2NoaWxkX29mX25vZGUo
cmJwYXJ0X25vZGUsICBwcCkKKwkJbnArKzsKKworCWlmICghbnApCisJCXJldHVybiAwOworCisJ
cGFydHMgPSBrY2FsbG9jKG5wLCBzaXplb2YoKnBhcnRzKSwgR0ZQX0tFUk5FTCk7CisJaWYgKCFw
YXJ0cykKKwkJcmV0dXJuIC1FTk9NRU07CisKKwkvKiBQcmVlbXB0aXZlbHkgbG9vayBmb3Iga25v
d24gcGFydHMgaW4gZmxhc2ggKi8KKwlyb3V0ZXJib290X2ZpbmRfZHlucGFydHMobWFzdGVyKTsK
KworCW5wID0gMDsKKwltYXN0ZXJfb2ZzID0gMDsKKwlmb3JfZWFjaF9jaGlsZF9vZl9ub2RlKHJi
cGFydF9ub2RlLCBwcCkgeworCQljb25zdCBfX2JlMzIgKnJlZywgKnN6OworCQlzaXplX3Qgb2Zm
c2V0LCBzaXplOworCQlpbnQgaSwgbGVuLCBhX2NlbGxzLCBzX2NlbGxzOworCisJCXBhcnRuYW1l
ID0gb2ZfZ2V0X3Byb3BlcnR5KHBwLCAibGFiZWwiLCAmbGVuKTsKKwkJLyogQWxsb3cgZGVwcmVj
YXRlZCB1c2Ugb2YgIm5hbWUiIGluc3RlYWQgb2YgImxhYmVsIiAqLworCQlpZiAoIXBhcnRuYW1l
KQorCQkJcGFydG5hbWUgPSBvZl9nZXRfcHJvcGVydHkocHAsICJuYW1lIiwgJmxlbik7CisJCS8q
IEZhbGxiYWNrIHRvIG5vZGUgbmFtZSBwZXIgc3BlYyBpZiBhbGwgZWxzZSBmYWlscyAqLworCQlp
ZiAoIXBhcnRuYW1lKQorCQkJcGFydG5hbWUgPSBwcC0+bmFtZTsKKwkJcGFydHNbbnBdLm5hbWUg
PSBwYXJ0bmFtZTsKKworCQlyZWcgPSBvZl9nZXRfcHJvcGVydHkocHAsICJyZWciLCAmbGVuKTsK
KwkJaWYgKHJlZykgeworCQkJLyogRml4ZWQgcGFydGl0aW9uICovCisJCQlhX2NlbGxzID0gb2Zf
bl9hZGRyX2NlbGxzKHBwKTsKKwkJCXNfY2VsbHMgPSBvZl9uX3NpemVfY2VsbHMocHApOworCisJ
CQlpZiAoKGxlbiAvIDQpICE9IChhX2NlbGxzICsgc19jZWxscykpIHsKKwkJCQlwcl9kZWJ1Zygi
JXM6IHJvdXRlcmJvb3QgcGFydGl0aW9uICVwT0YgKCVwT0YpIGVycm9yIHBhcnNpbmcgcmVnIHBy
b3BlcnR5LlxuIiwKKwkJCQkJIG1hc3Rlci0+bmFtZSwgcHAsIHJicGFydF9ub2RlKTsKKwkJCQln
b3RvIHJicGFydF9mYWlsOworCQkJfQorCisJCQlvZmZzZXQgPSBvZl9yZWFkX251bWJlcihyZWcs
IGFfY2VsbHMpOworCQkJc2l6ZSA9IG9mX3JlYWRfbnVtYmVyKHJlZyArIGFfY2VsbHMsIHNfY2Vs
bHMpOworCQl9IGVsc2UgeworCQkJLyogRHluYW1pYyBwYXJ0aXRpb24gKi8KKwkJCWlmICghcGFy
dG5hbWUpIHsKKwkJCQlwcl9kZWJ1ZygiJXM6IHJvdXRlcmJvb3QgcGFydGl0aW9uICVwT0YgKCVw
T0YpIG1pc3NpbmcgbmFtZSBmb3IgZHluYW1pYyBwYXJ0aXRpb24uXG4iLAorCQkJCQkgbWFzdGVy
LT5uYW1lLCBwcCwgcmJwYXJ0X25vZGUpOworCQkJCWdvdG8gcmJwYXJ0X2ZhaWw7CisJCQl9CisK
KwkJCS8qIERlZmF1bHQ6IHBhcnQgc3RhcnRzIGF0IGN1cnJlbnQgb2Zmc2V0LCAwIHNpemUgKi8K
KwkJCW9mZnNldCA9IG1hc3Rlcl9vZnM7CisJCQlzaXplID0gMDsKKworCQkJLyogQ2hlY2sgaWYg
d2VsbC1rbm93biBwYXJ0aXRpb24gKi8KKwkJCWZvciAoaSA9IDA7IGkgPCBBUlJBWV9TSVpFKHJi
X2R5bnBhcnRzKTsgaSsrKSB7CisJCQkJaWYgKCFzdHJjbXAocGFydG5hbWUsIHJiX2R5bnBhcnRz
W2ldLm5hbWUpICYmIHJiX2R5bnBhcnRzW2ldLmZvdW5kKSB7CisJCQkJCW9mZnNldCA9IHJiX2R5
bnBhcnRzW2ldLm9mZnNldDsKKwkJCQkJc2l6ZSA9IHJiX2R5bnBhcnRzW2ldLnNpemU7CisJCQkJ
CWJyZWFrOworCQkJCX0KKwkJCX0KKworCQkJLyogU3RhbmRhbG9uZSBzaXplIHByb3BlcnR5PyBP
dmVycmlkZSBzaXplICovCisJCQlzeiA9IG9mX2dldF9wcm9wZXJ0eShwcCwgInNpemUiLCAmbGVu
KTsKKwkJCWlmIChzeikgeworCQkJCXNfY2VsbHMgPSBvZl9uX3NpemVfY2VsbHMocHApOworCQkJ
CWlmICgobGVuIC8gNCkgIT0gc19jZWxscykgeworCQkJCQlwcl9kZWJ1ZygiJXM6IHJvdXRlcmJv
b3QgcGFydGl0aW9uICVwT0YgKCVwT0YpIGVycm9yIHBhcnNpbmcgc2l6ZSBwcm9wZXJ0eS5cbiIs
CisJCQkJCQkgbWFzdGVyLT5uYW1lLCBwcCwgcmJwYXJ0X25vZGUpOworCQkJCQlnb3RvIHJicGFy
dF9mYWlsOworCQkJCX0KKworCQkJCXNpemUgPSBvZl9yZWFkX251bWJlcihzeiwgc19jZWxscyk7
CisJCQl9CisJCX0KKworCQlpZiAobnAgPiAwKSB7CisJCQkvKiBNaW5vciBzYW5pdHkgY2hlY2sg
Zm9yIG92ZXJsYXBzICovCisJCQlpZiAob2Zmc2V0IDwgKHBhcnRzW25wLTFdLm9mZnNldCArIHBh
cnRzW25wLTFdLnNpemUpKSB7CisJCQkJcHJfZXJyKCIlczogcm91dGVyYm9vdCBwYXJ0aXRpb24g
JXBPRiAoJXBPRikgXCIlc1wiIG92ZXJsYXBzIHdpdGggcHJldmlvdXMgcGFydGl0aW9uIFwiJXNc
Ii5cbiIsCisJCQkJICAgICAgIG1hc3Rlci0+bmFtZSwgcHAsIHJicGFydF9ub2RlLAorCQkJCSAg
ICAgICBwYXJ0bmFtZSwgcGFydHNbbnAtMV0ubmFtZSk7CisJCQkJZ290byByYnBhcnRfZmFpbDsK
KwkJCX0KKworCQkJLyogRml4dXAgZW5kIG9mIHByZXZpb3VzIHBhcnRpdGlvbiBpZiBuZWNlc3Nh
cnkgKi8KKwkJCWlmICghcGFydHNbbnAtMV0uc2l6ZSkKKwkJCQlwYXJ0c1tucC0xXS5zaXplID0g
KG9mZnNldCAtIHBhcnRzW25wLTFdLm9mZnNldCk7CisJCX0KKworCQlpZiAoKG9mZnNldCArIHNp
emUpID4gbWFzdGVyLT5zaXplKSB7CisJCQlwcl9lcnIoIiVzOiByb3V0ZXJib290IHBhcnRpdGlv
biAlcE9GICglcE9GKSBcIiVzXCIgZXh0ZW5kcyBwYXN0IGVuZCBvZiBzZWdtZW50LlxuIiwKKwkJ
CSAgICAgICBtYXN0ZXItPm5hbWUsIHBwLCByYnBhcnRfbm9kZSwgcGFydG5hbWUpOworCQkJZ290
byByYnBhcnRfZmFpbDsKKwkJfQorCisJCXBhcnRzW25wXS5vZmZzZXQgPSBvZmZzZXQ7CisJCXBh
cnRzW25wXS5zaXplID0gc2l6ZTsKKwkJcGFydHNbbnBdLm9mX25vZGUgPSBwcDsKKworCQlpZiAo
b2ZfZ2V0X3Byb3BlcnR5KHBwLCAicmVhZC1vbmx5IiwgJmxlbikpCisJCQlwYXJ0c1tucF0ubWFz
a19mbGFncyB8PSBNVERfV1JJVEVBQkxFOworCisJCWlmIChvZl9nZXRfcHJvcGVydHkocHAsICJs
b2NrIiwgJmxlbikpCisJCQlwYXJ0c1tucF0ubWFza19mbGFncyB8PSBNVERfUE9XRVJVUF9MT0NL
OworCisJCS8qIEtlZXAgbWFzdGVyIG9mZnNldCBhbGlnbmVkIHRvIFJCX0JMT0NLX1NJWkUgKi8K
KwkJbWFzdGVyX29mcyA9IEFMSUdOKG9mZnNldCArIHNpemUsIFJCX0JMT0NLX1NJWkUpOworCQlu
cCsrOworCX0KKworCSpwcGFydHMgPSBwYXJ0czsKKwlyZXR1cm4gbnA7CisKK3JicGFydF9mYWls
OgorCXByX2VycigiJXM6IGVycm9yIHBhcnNpbmcgcm91dGVyYm9vdCBwYXJ0aXRpb24gJXBPRiAo
JXBPRilcbiIsCisJICAgICAgIG1hc3Rlci0+bmFtZSwgcHAsIHJicGFydF9ub2RlKTsKKwlvZl9u
b2RlX3B1dChwcCk7CisJa2ZyZWUocGFydHMpOworCXJldHVybiAtRUlOVkFMOworfQorCitzdGF0
aWMgY29uc3Qgc3RydWN0IG9mX2RldmljZV9pZCBwYXJzZV9yb3V0ZXJib290cGFydF9tYXRjaF90
YWJsZVtdID0geworCXsgLmNvbXBhdGlibGUgPSAibWlrcm90aWsscm91dGVyYm9vdC1wYXJ0aXRp
b25zIiB9LAorCXt9LAorfTsKK01PRFVMRV9ERVZJQ0VfVEFCTEUob2YsIHBhcnNlX3JvdXRlcmJv
b3RwYXJ0X21hdGNoX3RhYmxlKTsKKworc3RhdGljIHN0cnVjdCBtdGRfcGFydF9wYXJzZXIgcm91
dGVyYm9vdHBhcnRfcGFyc2VyID0geworCS5wYXJzZV9mbiA9IHJvdXRlcmJvb3RfcGFydGl0aW9u
c19wYXJzZSwKKwkubmFtZSA9ICJyb3V0ZXJib290cGFydCIsCisJLm9mX21hdGNoX3RhYmxlID0g
cGFyc2Vfcm91dGVyYm9vdHBhcnRfbWF0Y2hfdGFibGUsCit9OworbW9kdWxlX210ZF9wYXJ0X3Bh
cnNlcihyb3V0ZXJib290cGFydF9wYXJzZXIpOworCitNT0RVTEVfTElDRU5TRSgiR1BMIik7CitN
T0RVTEVfREVTQ1JJUFRJT04oIk1URCBwYXJ0aXRpb25pbmcgZm9yIFJvdXRlckJvb3QiKTsKK01P
RFVMRV9BVVRIT1IoIlRoaWJhdXQgVkFSRU5FIik7Ci0tIAoyLjExLjAKCgpfX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwpvcGVud3J0LWRldmVsIG1haWxpbmcg
bGlzdApvcGVud3J0LWRldmVsQGxpc3RzLm9wZW53cnQub3JnCmh0dHBzOi8vbGlzdHMub3Blbndy
dC5vcmcvbWFpbG1hbi9saXN0aW5mby9vcGVud3J0LWRldmVsCg==
