Return-Path: <openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org>
X-Original-To: lists+openwrt-devel@lfdr.de
Delivered-To: lists+openwrt-devel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id 365B912B507
	for <lists+openwrt-devel@lfdr.de>; Fri, 27 Dec 2019 14:59:56 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:Subject:In-Reply-To:MIME-Version:
	Message-Id:Date:To:From:Reply-To:Content-ID:Content-Description:Resent-Date:
	Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:References:
	List-Owner; bh=oK65P2Zoh1OB2SFLloBvafPqNPEqoT5aOjROF4z14pE=; b=fr/xQOoG1U79++
	wGIFEDpnf+c89yFzsh6cHUge9tqxoH60rxSNgiNKzM+70j4RcT5QNXqPHvwActob3XO88kk14j6HX
	sDh6lyTJqsfXugy+eIxSghYYhv/ZvVgsdLWxO9AXmkKahYuluX33C+W3yylTSgQMZyw9DmevpdD3m
	177+pHdL73DZiImoyO0YofTktIAIl/J34S1aZr3tXCXNa6fKPv7fUHvB74LnmHtf3lZcam9y7Xwyt
	h1ZpWwW96uusMYo2W/2b3tqVRMPOo3yuxnK1e6l6xCM1avdAV6NCR5QkTm4UySlnBe1y39m1efCGJ
	wqYLYyAvDqxhgL9LO5QA==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1ikq9S-0007Z9-EH; Fri, 27 Dec 2019 13:59:38 +0000
Received: from smtp-out.xnet.cz ([178.217.244.18])
 by bombadil.infradead.org with esmtps (Exim 4.92.3 #3 (Red Hat Linux))
 id 1ikq9M-0007Yd-0e
 for openwrt-devel@lists.openwrt.org; Fri, 27 Dec 2019 13:59:34 +0000
Received: from meh.true.cz (meh.true.cz [108.61.167.218])
 (Authenticated sender: petr@true.cz)
 by smtp-out.xnet.cz (Postfix) with ESMTPSA id EC7FE38B8;
 Fri, 27 Dec 2019 14:59:27 +0100 (CET)
Received: by meh.true.cz (OpenSMTPD) with ESMTP id 1021b207;
 Fri, 27 Dec 2019 14:59:17 +0100 (CET)
From: =?UTF-8?q?Petr=20=C5=A0tetiar?= <ynezz@true.cz>
To: openwrt-devel@lists.openwrt.org
Date: Fri, 27 Dec 2019 14:59:22 +0100
Message-Id: <20191227135922.13972-1-ynezz@true.cz>
MIME-Version: 1.0
In-Reply-To: <fa84e9a6-5b08-c680-b3ed-0ad1b3f00359@iki.fi>
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20191227_055932_356484_547C81B1 
X-CRM114-Status: GOOD (  12.19  )
X-Spam-Score: 0.0 (/)
X-Spam-Report: SpamAssassin version 3.4.2 on bombadil.infradead.org summary:
 Content analysis details:   (0.0 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -0.0 RCVD_IN_DNSWL_NONE     RBL: Sender listed at https://www.dnswl.org/,
 no trust [178.217.244.18 listed in list.dnswl.org]
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 0.0 SPF_NONE               SPF: sender does not publish an SPF Record
Subject: [OpenWrt-Devel] [PATCH ubus] ubusd/libubus-io: fix socket
 descriptor passing
X-BeenThere: openwrt-devel@lists.openwrt.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <openwrt-devel.lists.openwrt.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/openwrt-devel>, 
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/openwrt-devel/>
List-Post: <mailto:openwrt-devel@lists.openwrt.org>
List-Help: <mailto:openwrt-devel-request@lists.openwrt.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/openwrt-devel>,
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=subscribe>
Cc: Hannu Nyman <hannu.nyman@welho.com>,
 =?UTF-8?q?Petr=20=C5=A0tetiar?= <ynezz@true.cz>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "openwrt-devel" <openwrt-devel-bounces@lists.openwrt.org>
Errors-To: openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org

SW4gY29tbWl0IDVkN2NhODMwOWQwYSAoInVidXNkL2xpYnVidXMtaW86IGZpeCB2YXJpYWJsZSBz
aXplZCBzdHJ1Y3QKcG9zaXRpb24gd2FybmluZyIpIHRoZSBwb3NpdGlvbiBvZiBjbXNnaGRyIHN0
cnVjdCBoYXMgYmVlbiBjaGFuZ2VkIGluCm9yZGVyIHRvIGZpeCBjbGFuZy05IGNvbXBpbGVyIHdh
cm5pbmcsIGJ1dCBpdCBoYXMgaW50cm9kdWNlZCByZWdyZXNzaW9uCmluIGF0IGxlYXN0IGBsb2dy
ZWFkYCB3aGljaCBoYW5nZWQgaW5kZWZpbml0ZWx5LgoKU28gdGhpcyBwYXRjaCByZXdvcmtzIHRo
ZSBzb2NrZXQgZGVzY3JpcHRvciBwYXNzaW5nIGluIGEgd2F5IHJlY29tbWVuZGVkCmluIHRoZSBg
Y21zZygzKWAgbWFudWFsIHBhZ2UuCgpSZWY6IGh0dHA6Ly9saXN0cy5pbmZyYWRlYWQub3JnL3Bp
cGVybWFpbC9vcGVud3J0LWRldmVsLzIwMTktRGVjZW1iZXIvMDIwODQwLmh0bWwKRml4ZXM6IDVk
N2NhODMwOWQwYSAoInVidXNkL2xpYnVidXMtaW86IGZpeCB2YXJpYWJsZSBzaXplZCBzdHJ1Y3Qg
cG9zaXRpb24gd2FybmluZyIpClJlcG9ydGVkLWJ5OiBIYW5udSBOeW1hbiA8aGFubnUubnltYW5A
d2VsaG8uY29tPgpTaWduZWQtb2ZmLWJ5OiBQZXRyIMWgdGV0aWFyIDx5bmV6ekB0cnVlLmN6Pgot
LS0KIGxpYnVidXMtaW8uYyB8IDk2ICsrKysrKysrKysrKysrKysrKysrKysrKysrKystLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0KIHVidXNkLmMgICAgICB8IDQzICsrKysrKysrKysrLS0tLS0tLS0t
LS0tCiB1YnVzZF9tYWluLmMgfCA0NyArKysrKysrKysrKysrLS0tLS0tLS0tLS0tCiAzIGZpbGVz
IGNoYW5nZWQsIDk4IGluc2VydGlvbnMoKyksIDg4IGRlbGV0aW9ucygtKQoKZGlmZiAtLWdpdCBh
L2xpYnVidXMtaW8uYyBiL2xpYnVidXMtaW8uYwppbmRleCBiYTEwMTZkMGZhMDkuLjc2NjhkYzUy
ZThkMyAxMDA2NDQKLS0tIGEvbGlidWJ1cy1pby5jCisrKyBiL2xpYnVidXMtaW8uYwpAQCAtNTks
MzUgKzU5LDM2IEBAIHN0YXRpYyB2b2lkIHdhaXRfZGF0YShpbnQgZmQsIGJvb2wgd3JpdGUpCiAK
IHN0YXRpYyBpbnQgd3JpdGV2X3JldHJ5KGludCBmZCwgc3RydWN0IGlvdmVjICppb3YsIGludCBp
b3ZfbGVuLCBpbnQgc29ja19mZCkKIHsKLQlzdGF0aWMgc3RydWN0IHsKLQkJaW50IGZkOwotCQlz
dHJ1Y3QgY21zZ2hkciBoOwotCX0gZmRfYnVmID0gewotCQkuaCA9IHsKLQkJCS5jbXNnX2xlbiA9
IHNpemVvZihmZF9idWYpLAotCQkJLmNtc2dfbGV2ZWwgPSBTT0xfU09DS0VULAotCQkJLmNtc2df
dHlwZSA9IFNDTV9SSUdIVFMsCi0JCX0KLQl9OwotCXN0cnVjdCBtc2doZHIgbXNnaGRyID0gewot
CQkubXNnX2lvdiA9IGlvdiwKLQkJLm1zZ19pb3ZsZW4gPSBpb3ZfbGVuLAotCQkubXNnX2NvbnRy
b2wgPSAmZmRfYnVmLAotCQkubXNnX2NvbnRyb2xsZW4gPSBzaXplb2YoZmRfYnVmKSwKLQl9Owor
CXVpbnQ4X3QgZmRfYnVmW0NNU0dfU1BBQ0Uoc2l6ZW9mKGludCkpXSA9IHsgMCB9OworCXN0cnVj
dCBtc2doZHIgbXNnID0geyAwIH07CisJc3RydWN0IGNtc2doZHIgKmNtc2c7CiAJaW50IGxlbiA9
IDA7CisJaW50ICpwZmQ7CisKKwltc2cubXNnX2lvdiA9IGlvdiwKKwltc2cubXNnX2lvdmxlbiA9
IGlvdl9sZW4sCisJbXNnLm1zZ19jb250cm9sID0gZmRfYnVmOworCW1zZy5tc2dfY29udHJvbGxl
biA9IHNpemVvZihmZF9idWYpOworCisJY21zZyA9IENNU0dfRklSU1RIRFIoJm1zZyk7CisJY21z
Zy0+Y21zZ190eXBlID0gU0NNX1JJR0hUUzsKKwljbXNnLT5jbXNnX2xldmVsID0gU09MX1NPQ0tF
VDsKKwljbXNnLT5jbXNnX2xlbiA9IENNU0dfTEVOKHNpemVvZihpbnQpKTsKKworCXBmZCA9IChp
bnQgKikgQ01TR19EQVRBKGNtc2cpOworCW1zZy5tc2dfY29udHJvbGxlbiA9IGNtc2ctPmNtc2df
bGVuOwogCiAJZG8gewogCQlzc2l6ZV90IGN1cl9sZW47CiAKIAkJaWYgKHNvY2tfZmQgPCAwKSB7
Ci0JCQltc2doZHIubXNnX2NvbnRyb2wgPSBOVUxMOwotCQkJbXNnaGRyLm1zZ19jb250cm9sbGVu
ID0gMDsKKwkJCW1zZy5tc2dfY29udHJvbCA9IE5VTEw7CisJCQltc2cubXNnX2NvbnRyb2xsZW4g
PSAwOwogCQl9IGVsc2UgewotCQkJZmRfYnVmLmZkID0gc29ja19mZDsKKwkJCSpwZmQgPSBzb2Nr
X2ZkOwogCQl9CiAKLQkJY3VyX2xlbiA9IHNlbmRtc2coZmQsICZtc2doZHIsIDApOworCQljdXJf
bGVuID0gc2VuZG1zZyhmZCwgJm1zZywgMCk7CiAJCWlmIChjdXJfbGVuIDwgMCkgewogCQkJc3dp
dGNoKGVycm5vKSB7CiAJCQljYXNlIEVBR0FJTjoKQEAgLTExNCw4ICsxMTUsOCBAQCBzdGF0aWMg
aW50IHdyaXRldl9yZXRyeShpbnQgZmQsIHN0cnVjdCBpb3ZlYyAqaW92LCBpbnQgaW92X2xlbiwg
aW50IHNvY2tfZmQpCiAJCX0KIAkJaW92LT5pb3ZfYmFzZSArPSBjdXJfbGVuOwogCQlpb3YtPmlv
dl9sZW4gLT0gY3VyX2xlbjsKLQkJbXNnaGRyLm1zZ19pb3YgPSBpb3Y7Ci0JCW1zZ2hkci5tc2df
aW92bGVuID0gaW92X2xlbjsKKwkJbXNnLm1zZ19pb3YgPSBpb3Y7CisJCW1zZy5tc2dfaW92bGVu
ID0gaW92X2xlbjsKIAl9IHdoaWxlICgxKTsKIAogCS8qIFNob3VsZCBuZXZlciByZWFjaCBoZXJl
ICovCkBAIC0xNTYsMzQgKzE1NywzOSBAQCBpbnQgX19oaWRkZW4gdWJ1c19zZW5kX21zZyhzdHJ1
Y3QgdWJ1c19jb250ZXh0ICpjdHgsIHVpbnQzMl90IHNlcSwKIAogc3RhdGljIGludCByZWN2X3Jl
dHJ5KHN0cnVjdCB1YnVzX2NvbnRleHQgKmN0eCwgc3RydWN0IGlvdmVjICppb3YsIGJvb2wgd2Fp
dCwgaW50ICpyZWN2X2ZkKQogewotCWludCBieXRlcywgdG90YWwgPSAwOwotCWludCBmZCA9IGN0
eC0+c29jay5mZDsKLQlzdGF0aWMgc3RydWN0IHsKLQkJaW50IGZkOwotCQlzdHJ1Y3QgY21zZ2hk
ciBoOwotCX0gZmRfYnVmID0gewotCQkuaCA9IHsKLQkJCS5jbXNnX3R5cGUgPSBTQ01fUklHSFRT
LAotCQkJLmNtc2dfbGV2ZWwgPSBTT0xfU09DS0VULAotCQkJLmNtc2dfbGVuID0gc2l6ZW9mKGZk
X2J1ZiksCi0JCX0sCi0JfTsKLQlzdHJ1Y3QgbXNnaGRyIG1zZ2hkciA9IHsKLQkJLm1zZ19pb3Yg
PSBpb3YsCi0JCS5tc2dfaW92bGVuID0gMSwKLQl9OworCXVpbnQ4X3QgZmRfYnVmW0NNU0dfU1BB
Q0Uoc2l6ZW9mKGludCkpXSA9IHsgMCB9OworCXN0cnVjdCBtc2doZHIgbXNnID0geyAwIH07CisJ
c3RydWN0IGNtc2doZHIgKmNtc2c7CisJaW50IHRvdGFsID0gMDsKKwlpbnQgYnl0ZXM7CisJaW50
ICpwZmQ7CisJaW50IGZkOworCisJZmQgPSBjdHgtPnNvY2suZmQ7CisKKwltc2cubXNnX2lvdiA9
IGlvdiwKKwltc2cubXNnX2lvdmxlbiA9IDEsCisJbXNnLm1zZ19jb250cm9sID0gZmRfYnVmOwor
CW1zZy5tc2dfY29udHJvbGxlbiA9IHNpemVvZihmZF9idWYpOworCisJY21zZyA9IENNU0dfRklS
U1RIRFIoJm1zZyk7CisJY21zZy0+Y21zZ190eXBlID0gU0NNX1JJR0hUUzsKKwljbXNnLT5jbXNn
X2xldmVsID0gU09MX1NPQ0tFVDsKKwljbXNnLT5jbXNnX2xlbiA9IENNU0dfTEVOKHNpemVvZihp
bnQpKTsKKworCXBmZCA9IChpbnQgKikgQ01TR19EQVRBKGNtc2cpOwogCiAJd2hpbGUgKGlvdi0+
aW92X2xlbiA+IDApIHsKIAkJaWYgKHJlY3ZfZmQpIHsKLQkJCW1zZ2hkci5tc2dfY29udHJvbCA9
ICZmZF9idWY7Ci0JCQltc2doZHIubXNnX2NvbnRyb2xsZW4gPSBzaXplb2YoZmRfYnVmKTsKKwkJ
CW1zZy5tc2dfY29udHJvbCA9IGZkX2J1ZjsKKwkJCW1zZy5tc2dfY29udHJvbGxlbiA9IGNtc2ct
PmNtc2dfbGVuOwogCQl9IGVsc2UgewotCQkJbXNnaGRyLm1zZ19jb250cm9sID0gTlVMTDsKLQkJ
CW1zZ2hkci5tc2dfY29udHJvbGxlbiA9IDA7CisJCQltc2cubXNnX2NvbnRyb2wgPSBOVUxMOwor
CQkJbXNnLm1zZ19jb250cm9sbGVuID0gMDsKIAkJfQogCi0JCWZkX2J1Zi5mZCA9IC0xOwotCQli
eXRlcyA9IHJlY3Ztc2coZmQsICZtc2doZHIsIDApOworCQkqcGZkID0gLTE7CisJCWJ5dGVzID0g
cmVjdm1zZyhmZCwgJm1zZywgMCk7CiAJCWlmICghYnl0ZXMpCiAJCQlyZXR1cm4gLTE7CiAKQEAg
LTE5OSw3ICsyMDUsNyBAQCBzdGF0aWMgaW50IHJlY3ZfcmV0cnkoc3RydWN0IHVidXNfY29udGV4
dCAqY3R4LCBzdHJ1Y3QgaW92ZWMgKmlvdiwgYm9vbCB3YWl0LCBpbgogCQkJcmV0dXJuIDA7CiAK
IAkJaWYgKHJlY3ZfZmQpCi0JCQkqcmVjdl9mZCA9IGZkX2J1Zi5mZDsKKwkJCSpyZWN2X2ZkID0g
KnBmZDsKIAogCQlyZWN2X2ZkID0gTlVMTDsKIApkaWZmIC0tZ2l0IGEvdWJ1c2QuYyBiL3VidXNk
LmMKaW5kZXggMGQ0Mzk3N2MwYmRlLi42ZjNhMjgwY2RmNTcgMTAwNjQ0Ci0tLSBhL3VidXNkLmMK
KysrIGIvdWJ1c2QuYwpAQCAtODIsMzAgKzgyLDMxIEBAIHZvaWQgdWJ1c19tc2dfZnJlZShzdHJ1
Y3QgdWJ1c19tc2dfYnVmICp1YikKIAogc3NpemVfdCB1YnVzX21zZ193cml0ZXYoaW50IGZkLCBz
dHJ1Y3QgdWJ1c19tc2dfYnVmICp1Yiwgc2l6ZV90IG9mZnNldCkKIHsKKwl1aW50OF90IGZkX2J1
ZltDTVNHX1NQQUNFKHNpemVvZihpbnQpKV0gPSB7IDAgfTsKIAlzdGF0aWMgc3RydWN0IGlvdmVj
IGlvdlsyXTsKLQlzdGF0aWMgc3RydWN0IHsKLQkJaW50IGZkOwotCQlzdHJ1Y3QgY21zZ2hkciBo
OwotCX0gZmRfYnVmID0gewotCQkuaCA9IHsKLQkJCS5jbXNnX2xlbiA9IHNpemVvZihmZF9idWYp
LAotCQkJLmNtc2dfbGV2ZWwgPSBTT0xfU09DS0VULAotCQkJLmNtc2dfdHlwZSA9IFNDTV9SSUdI
VFMsCi0JCX0sCi0JfTsKLQlzdHJ1Y3QgbXNnaGRyIG1zZ2hkciA9IHsKLQkJLm1zZ19pb3YgPSBp
b3YsCi0JCS5tc2dfaW92bGVuID0gQVJSQVlfU0laRShpb3YpLAotCQkubXNnX2NvbnRyb2wgPSAm
ZmRfYnVmLAotCQkubXNnX2NvbnRyb2xsZW4gPSBzaXplb2YoZmRfYnVmKSwKLQl9OworCXN0cnVj
dCBtc2doZHIgbXNnID0geyAwIH07CiAJc3RydWN0IHVidXNfbXNnaGRyIGhkcjsKKwlzdHJ1Y3Qg
Y21zZ2hkciAqY21zZzsKIAlzc2l6ZV90IHJldDsKKwlpbnQgKnBmZDsKIAotCWZkX2J1Zi5mZCA9
IHViLT5mZDsKKwltc2cubXNnX2lvdiA9IGlvdjsKKwltc2cubXNnX2lvdmxlbiA9IEFSUkFZX1NJ
WkUoaW92KTsKKwltc2cubXNnX2NvbnRyb2wgPSBmZF9idWY7CisJbXNnLm1zZ19jb250cm9sbGVu
ID0gc2l6ZW9mKGZkX2J1Zik7CisKKwljbXNnID0gQ01TR19GSVJTVEhEUigmbXNnKTsKKwljbXNn
LT5jbXNnX3R5cGUgPSBTQ01fUklHSFRTOworCWNtc2ctPmNtc2dfbGV2ZWwgPSBTT0xfU09DS0VU
OworCWNtc2ctPmNtc2dfbGVuID0gQ01TR19MRU4oc2l6ZW9mKGludCkpOworCisJcGZkID0gKGlu
dCAqKSBDTVNHX0RBVEEoY21zZyk7CisJbXNnLm1zZ19jb250cm9sbGVuID0gY21zZy0+Y21zZ19s
ZW47CisKKwkqcGZkID0gdWItPmZkOwogCWlmICh1Yi0+ZmQgPCAwIHx8IG9mZnNldCkgewotCQlt
c2doZHIubXNnX2NvbnRyb2wgPSBOVUxMOwotCQltc2doZHIubXNnX2NvbnRyb2xsZW4gPSAwOwor
CQltc2cubXNnX2NvbnRyb2wgPSBOVUxMOworCQltc2cubXNnX2NvbnRyb2xsZW4gPSAwOwogCX0K
IAogCWlmIChvZmZzZXQgPCBzaXplb2YodWItPmhkcikpIHsKQEAgLTEyMiwxMSArMTIzLDExIEBA
IHNzaXplX3QgdWJ1c19tc2dfd3JpdGV2KGludCBmZCwgc3RydWN0IHVidXNfbXNnX2J1ZiAqdWIs
IHNpemVfdCBvZmZzZXQpCiAJCW9mZnNldCAtPSBzaXplb2YodWItPmhkcik7CiAJCWlvdlswXS5p
b3ZfYmFzZSA9ICgoY2hhciAqKSB1Yi0+ZGF0YSkgKyBvZmZzZXQ7CiAJCWlvdlswXS5pb3ZfbGVu
ID0gdWItPmxlbiAtIG9mZnNldDsKLQkJbXNnaGRyLm1zZ19pb3ZsZW4gPSAxOworCQltc2cubXNn
X2lvdmxlbiA9IDE7CiAJfQogCiAJZG8gewotCQlyZXQgPSBzZW5kbXNnKGZkLCAmbXNnaGRyLCAw
KTsKKwkJcmV0ID0gc2VuZG1zZyhmZCwgJm1zZywgMCk7CiAJfSB3aGlsZSAocmV0IDwgMCAmJiBl
cnJubyA9PSBFSU5UUik7CiAKIAlyZXR1cm4gcmV0OwpkaWZmIC0tZ2l0IGEvdWJ1c2RfbWFpbi5j
IGIvdWJ1c2RfbWFpbi5jCmluZGV4IDgxODY4YzE0ODJiYy4uMTFjYjJmOTlmN2I2IDEwMDY0NAot
LS0gYS91YnVzZF9tYWluLmMKKysrIGIvdWJ1c2RfbWFpbi5jCkBAIC01MCwyMiArNTAsMjUgQEAg
c3RhdGljIHZvaWQgaGFuZGxlX2NsaWVudF9kaXNjb25uZWN0KHN0cnVjdCB1YnVzX2NsaWVudCAq
Y2wpCiBzdGF0aWMgdm9pZCBjbGllbnRfY2Ioc3RydWN0IHVsb29wX2ZkICpzb2NrLCB1bnNpZ25l
ZCBpbnQgZXZlbnRzKQogewogCXN0cnVjdCB1YnVzX2NsaWVudCAqY2wgPSBjb250YWluZXJfb2Yo
c29jaywgc3RydWN0IHVidXNfY2xpZW50LCBzb2NrKTsKKwl1aW50OF90IGZkX2J1ZltDTVNHX1NQ
QUNFKHNpemVvZihpbnQpKV0gPSB7IDAgfTsKKwlzdHJ1Y3QgbXNnaGRyIG1zZyA9IHsgMCB9Owog
CXN0cnVjdCB1YnVzX21zZ19idWYgKnViOwogCXN0YXRpYyBzdHJ1Y3QgaW92ZWMgaW92OwotCXN0
YXRpYyBzdHJ1Y3QgewotCQlpbnQgZmQ7Ci0JCXN0cnVjdCBjbXNnaGRyIGg7Ci0JfSBmZF9idWYg
PSB7Ci0JCS5oID0gewotCQkJLmNtc2dfdHlwZSA9IFNDTV9SSUdIVFMsCi0JCQkuY21zZ19sZXZl
bCA9IFNPTF9TT0NLRVQsCi0JCQkuY21zZ19sZW4gPSBzaXplb2YoZmRfYnVmKSwKLQkJfQotCX07
Ci0Jc3RydWN0IG1zZ2hkciBtc2doZHIgPSB7Ci0JCS5tc2dfaW92ID0gJmlvdiwKLQkJLm1zZ19p
b3ZsZW4gPSAxLAotCX07CisJc3RydWN0IGNtc2doZHIgKmNtc2c7CisJaW50ICpwZmQ7CisKKwlt
c2cubXNnX2lvdiA9ICZpb3YsCisJbXNnLm1zZ19pb3ZsZW4gPSAxLAorCW1zZy5tc2dfY29udHJv
bCA9IGZkX2J1ZjsKKwltc2cubXNnX2NvbnRyb2xsZW4gPSBzaXplb2YoZmRfYnVmKTsKKworCWNt
c2cgPSBDTVNHX0ZJUlNUSERSKCZtc2cpOworCWNtc2ctPmNtc2dfdHlwZSA9IFNDTV9SSUdIVFM7
CisJY21zZy0+Y21zZ19sZXZlbCA9IFNPTF9TT0NLRVQ7CisJY21zZy0+Y21zZ19sZW4gPSBDTVNH
X0xFTihzaXplb2YoaW50KSk7CisKKwlwZmQgPSAoaW50ICopIENNU0dfREFUQShjbXNnKTsKKwlt
c2cubXNnX2NvbnRyb2xsZW4gPSBjbXNnLT5jbXNnX2xlbjsKIAogCS8qIGZpcnN0IHRyeSB0byB0
eCBtb3JlIHBlbmRpbmcgZGF0YSAqLwogCXdoaWxlICgodWIgPSB1YnVzX21zZ19oZWFkKGNsKSkp
IHsKQEAgLTEwMCwyNSArMTAzLDI1IEBAIHJldHJ5OgogCQlpbnQgb2Zmc2V0ID0gY2wtPnBlbmRp
bmdfbXNnX29mZnNldDsKIAkJaW50IGJ5dGVzOwogCi0JCWZkX2J1Zi5mZCA9IC0xOworCQkqcGZk
ID0gLTE7CiAKIAkJaW92Lmlvdl9iYXNlID0gKChjaGFyICopICZjbC0+aGRyYnVmKSArIG9mZnNl
dDsKIAkJaW92Lmlvdl9sZW4gPSBzaXplb2YoY2wtPmhkcmJ1ZikgLSBvZmZzZXQ7CiAKIAkJaWYg
KGNsLT5wZW5kaW5nX21zZ19mZCA8IDApIHsKLQkJCW1zZ2hkci5tc2dfY29udHJvbCA9ICZmZF9i
dWY7Ci0JCQltc2doZHIubXNnX2NvbnRyb2xsZW4gPSBzaXplb2YoZmRfYnVmKTsKKwkJCW1zZy5t
c2dfY29udHJvbCA9IGZkX2J1ZjsKKwkJCW1zZy5tc2dfY29udHJvbGxlbiA9IGNtc2ctPmNtc2df
bGVuOwogCQl9IGVsc2UgewotCQkJbXNnaGRyLm1zZ19jb250cm9sID0gTlVMTDsKLQkJCW1zZ2hk
ci5tc2dfY29udHJvbGxlbiA9IDA7CisJCQltc2cubXNnX2NvbnRyb2wgPSBOVUxMOworCQkJbXNn
Lm1zZ19jb250cm9sbGVuID0gMDsKIAkJfQogCi0JCWJ5dGVzID0gcmVjdm1zZyhzb2NrLT5mZCwg
Jm1zZ2hkciwgMCk7CisJCWJ5dGVzID0gcmVjdm1zZyhzb2NrLT5mZCwgJm1zZywgMCk7CiAJCWlm
IChieXRlcyA8IDApCiAJCQlnb3RvIG91dDsKIAotCQlpZiAoZmRfYnVmLmZkID49IDApCi0JCQlj
bC0+cGVuZGluZ19tc2dfZmQgPSBmZF9idWYuZmQ7CisJCWlmICgqcGZkID49IDApCisJCQljbC0+
cGVuZGluZ19tc2dfZmQgPSAqcGZkOwogCiAJCWNsLT5wZW5kaW5nX21zZ19vZmZzZXQgKz0gYnl0
ZXM7CiAJCWlmIChjbC0+cGVuZGluZ19tc2dfb2Zmc2V0IDwgKGludCkgc2l6ZW9mKGNsLT5oZHJi
dWYpKQoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18Kb3Bl
bndydC1kZXZlbCBtYWlsaW5nIGxpc3QKb3BlbndydC1kZXZlbEBsaXN0cy5vcGVud3J0Lm9yZwpo
dHRwczovL2xpc3RzLm9wZW53cnQub3JnL21haWxtYW4vbGlzdGluZm8vb3BlbndydC1kZXZlbAo=
