Return-Path: <openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org>
X-Original-To: lists+openwrt-devel@lfdr.de
Delivered-To: lists+openwrt-devel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id 3586D18E172
	for <lists+openwrt-devel@lfdr.de>; Sat, 21 Mar 2020 14:07:15 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:Subject:MIME-Version:References:
	In-Reply-To:Message-Id:Date:To:From:Reply-To:Content-ID:Content-Description:
	Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=j/vjKRKWEYRHQ8954w+GV6Wq4o4AkQJfYjGOMRmsPO0=; b=HdGKM/PxlgLxds
	ijKdff/KSMdX3/kYhKDO3kXbOKWUDG0j9yJm4e4helUMD8+vu8oqWwKl4xQM1JtdxpjwPa3ceddva
	ABdFRCt0sh4G4I8cNbgAVx6q3TIoyat+7/RQXJaFJP/tvvEw1P1K9NFZxxlnqTCnqOPJTHiTku5jj
	/CSmz5jPTMrZdDb4pb7aWGpEfsAxpNijA/OnQw5s7W6/J9hJELl85oLm4RuCq4WHBA+505ri05Oar
	PuU4VaN8/L5bcD1RlQ1k04q1AV3hJyTL+6KjIrBq7KeicLG2qc+mUjN7gTwo6u6ysrdquJCPMxd5m
	KmC/eQ78bTudHAjBEAHA==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92.3 #3 (Red Hat Linux))
	id 1jFdqK-00011S-Oi; Sat, 21 Mar 2020 13:07:13 +0000
Received: from mail-lf1-x143.google.com ([2a00:1450:4864:20::143])
 by bombadil.infradead.org with esmtps (Exim 4.92.3 #3 (Red Hat Linux))
 id 1jFdpw-0000qm-RA
 for openwrt-devel@lists.openwrt.org; Sat, 21 Mar 2020 13:06:53 +0000
Received: by mail-lf1-x143.google.com with SMTP id j17so6644179lfe.7
 for <openwrt-devel@lists.openwrt.org>; Sat, 21 Mar 2020 06:06:48 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=linaro.org; s=google;
 h=from:to:cc:subject:date:message-id:in-reply-to:references
 :mime-version:content-transfer-encoding;
 bh=zCZzcbn50th7wx7g5gRBIbe7l7DBrsVixKoLqwj6sjo=;
 b=srG3HcqqCRY1GO+u67cTM7/EKBn1gYyTAduLHkKdtTy//9xoMWgj6i51T0uUG2iig6
 5CxtXtAaXGYSlQWdsOWgbmTSuSI/Ib3C0RGb5x4fwecz0APNLZp5PqIDAocHpbP4ouwN
 pem6ZGKIIxlAl8a0aisq7kvtd5k6Jb92xRFld6KH61F5uPaI+jw4w0kJum4agEjAwjFh
 Gly/PAg8bosDRF6tl3GuNzkkfriBHa32Xi8MHHTt5D8mkUslcbUEqR4v9ZVQ7llP7z5y
 WFiM9Orjqi2mI3OeknYDODx23r2WcHtULU+Xo+vZNP7rt1E3Tm7lNxx6/wUvgYnJLCa2
 Zupw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20161025;
 h=x-gm-message-state:from:to:cc:subject:date:message-id:in-reply-to
 :references:mime-version:content-transfer-encoding;
 bh=zCZzcbn50th7wx7g5gRBIbe7l7DBrsVixKoLqwj6sjo=;
 b=OEnTmWUtJNuvJIWnAd9Gh+w/z4IOY5zZb1TkUH8QuxQI2lYgzTGd80CDH028iE//a7
 8xCMLPpE2M8xVm5+908b0CmoteEAEw0cF+R1oUYTsaApn3Jf3b/j5DK+uEP4iP25aOwS
 yw5qkMQMjL/iN2MittOYn4RL8mFwN80Ddvjotg5O9I1VJkV6g1AGggnnqB5SZuYzPvqj
 q/O18MfnhBnkWLGAcSRu7zORxPX1pDw9EamQVvFgNP60gdKESedqYE1e4k6TAdgb1mk5
 Ujsm6Hw8oKdbwFafXMPHBdxyxLBPiihpY7BgPxolikUhPr/nyMd2zofIAro9V1oz6bGm
 EpEw==
X-Gm-Message-State: ANhLgQ3+3mFZkm9oXoG3OUxAWLjQ+Ywo6kSKakX/6OG7F/DYgL+s0Vyv
 e6kttdTpvC/OkBUISpR91sISTg==
X-Google-Smtp-Source: ADFU+vta7+S4uXv/8a9lQo2pEtQNt+6blR46AXarmRsl8bUpoGG4KL9nq7GSaDln+jwTvnjrwz4skA==
X-Received: by 2002:a19:ac41:: with SMTP id r1mr8031520lfc.113.1584796005748; 
 Sat, 21 Mar 2020 06:06:45 -0700 (PDT)
Received: from localhost.bredbandsbolaget
 (c-5ac9225c.014-348-6c756e10.bbcust.telenor.se. [92.34.201.90])
 by smtp.gmail.com with ESMTPSA id i18sm5403611lfe.15.2020.03.21.06.06.44
 (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
 Sat, 21 Mar 2020 06:06:44 -0700 (PDT)
From: Linus Walleij <linus.walleij@linaro.org>
To: Roman Yeryomin <roman@advem.lv>, Sebastian Luft <sebastian.luft@gmail.com>,
 Hans Ulli Kroll <ulli.kroll@googlemail.com>,
 Hauke Mehrtens <hauke@hauke-m.de>, Christian Lamparter <chunkeey@gmail.com>
Date: Sat, 21 Mar 2020 14:05:53 +0100
Message-Id: <20200321130555.30053-2-linus.walleij@linaro.org>
X-Mailer: git-send-email 2.21.1
In-Reply-To: <20200321130555.30053-1-linus.walleij@linaro.org>
References: <20200321130555.30053-1-linus.walleij@linaro.org>
MIME-Version: 1.0
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20200321_060649_067752_FF5CE9BC 
X-CRM114-Status: GOOD (  25.32  )
X-Spam-Score: -0.2 (/)
X-Spam-Report: SpamAssassin version 3.4.3 on bombadil.infradead.org summary:
 Content analysis details:   (-0.2 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -0.0 RCVD_IN_DNSWL_NONE     RBL: Sender listed at https://www.dnswl.org/,
 no trust [2a00:1450:4864:20:0:0:0:143 listed in]
 [list.dnswl.org]
 -0.0 SPF_PASS               SPF: sender matches SPF record
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 0.1 DKIM_SIGNED            Message has a DKIM or DK signature, not necessarily
 valid
 -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
 -0.1 DKIM_VALID_AU          Message has a valid DKIM or DK signature from
 author's domain
 -0.1 DKIM_VALID_EF          Message has a valid DKIM or DK signature from
 envelope-from domain
Subject: [OpenWrt-Devel] [PATCH 1/3] gemini: Add v5.4 kernel patches
X-BeenThere: openwrt-devel@lists.openwrt.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <openwrt-devel.lists.openwrt.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/openwrt-devel>, 
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/openwrt-devel/>
List-Post: <mailto:openwrt-devel@lists.openwrt.org>
List-Help: <mailto:openwrt-devel-request@lists.openwrt.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/openwrt-devel>,
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=subscribe>
Cc: Linus Walleij <linus.walleij@linaro.org>,
 Florian Fainelli <f.fainelli@gmail.com>, openwrt-devel@lists.openwrt.org
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "openwrt-devel" <openwrt-devel-bounces@lists.openwrt.org>
Errors-To: openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org

VGhpcyBhZGRzIHRoZSBrZXJuZWwgcGF0Y2hlcyBuZWVkZWQgZm9yIHRoZSBHZW1pbmkuCkp1c3Qg
NyBwYXRjaGVzLCA1IG9mIHRoZW0gYXJlIGFscmVhZHkgdXBzdHJlYW0uCgpOb3RhYmx5IHdlIGJh
Y2twb3J0IHRoZSBwYXRjaGVzIHRvIHVzZSB0aGUgdGVtcGVyYXR1cmUKc2Vuc29yIG9uIHRoZSBo
YXJkIGRyaXZlIHRvIGRyaXZlIHRlbXBlcmF0dXJlIGNvbnRyb2wKb2YgdGhlIE5BUyBjaGFzc2lz
LiBUaGlzIGlzIHJlcXVpcmVkIGZvciB0aGUgRElSLTY4NQp3aGljaCBoYXMgbm8gZXh0ZXJuYWwg
dGVtcGVyYXR1cmUgc2Vuc29yLgoKU2lnbmVkLW9mZi1ieTogTGludXMgV2FsbGVpaiA8bGludXMu
d2FsbGVpakBsaW5hcm8ub3JnPgotLS0KIC4uLnQtZm90ZzItYWRkLUdlbWluaS1zcGVjaWZpYy1o
YW5kbGluZy5wYXRjaCB8IDEzMSArKysrCiAuLi4tRElSLTY4NS1wYXJ0aXRpb24tdGFibGUtZm9y
LU9wZW5XcnQucGF0Y2ggfCAgMzcgKwogLi4uMDAwMy1BUk0tZHRzLWdlbWluaS1SZW5hbWUtSURF
LW5vZGVzLnBhdGNoIHwgMTE3ICsrKwogLi4ucy1nZW1pbmktQWRkLXRoZXJtYWwtem9uZS10by1E
SVItNjg1LnBhdGNoIHwgMTAxICsrKwogLi4udGEtQXNzaWduLU9GLW5vZGUtdG8tdGhlLVNDU0kt
ZGV2aWNlLnBhdGNoIHwgIDg2ICsrCiAuLi5zZnMtYXR0cmlidXRlcy1mb3ItVlBELXBhZ2VzLTBo
LWFuZC0ucGF0Y2ggfCAxMjIgKysrCiAuLi4tZGlzay1hbmQtc29saWQtc3RhdGUtZHJpdmVzLXdp
dGgtdGUucGF0Y2ggfCA3MzcgKysrKysrKysrKysrKysrKysrCiA3IGZpbGVzIGNoYW5nZWQsIDEz
MzEgaW5zZXJ0aW9ucygrKQogY3JlYXRlIG1vZGUgMTAwNjQ0IHRhcmdldC9saW51eC9nZW1pbmkv
cGF0Y2hlcy01LjQvMDAwMS11c2ItaG9zdC1mb3RnMi1hZGQtR2VtaW5pLXNwZWNpZmljLWhhbmRs
aW5nLnBhdGNoCiBjcmVhdGUgbW9kZSAxMDA2NDQgdGFyZ2V0L2xpbnV4L2dlbWluaS9wYXRjaGVz
LTUuNC8wMDAyLUFSTS1kdHMtQXVnbWVudC1ESVItNjg1LXBhcnRpdGlvbi10YWJsZS1mb3ItT3Bl
bldydC5wYXRjaAogY3JlYXRlIG1vZGUgMTAwNjQ0IHRhcmdldC9saW51eC9nZW1pbmkvcGF0Y2hl
cy01LjQvMDAwMy1BUk0tZHRzLWdlbWluaS1SZW5hbWUtSURFLW5vZGVzLnBhdGNoCiBjcmVhdGUg
bW9kZSAxMDA2NDQgdGFyZ2V0L2xpbnV4L2dlbWluaS9wYXRjaGVzLTUuNC8wMDA0LUFSTS1kdHMt
Z2VtaW5pLUFkZC10aGVybWFsLXpvbmUtdG8tRElSLTY4NS5wYXRjaAogY3JlYXRlIG1vZGUgMTAw
NjQ0IHRhcmdldC9saW51eC9nZW1pbmkvcGF0Y2hlcy01LjQvMDAwNS1saWJhdGEtQXNzaWduLU9G
LW5vZGUtdG8tdGhlLVNDU0ktZGV2aWNlLnBhdGNoCiBjcmVhdGUgbW9kZSAxMDA2NDQgdGFyZ2V0
L2xpbnV4L2dlbWluaS9wYXRjaGVzLTUuNC8wMDA2LXNjc2ktY29yZS1BZGQtc3lzZnMtYXR0cmli
dXRlcy1mb3ItVlBELXBhZ2VzLTBoLWFuZC0ucGF0Y2gKIGNyZWF0ZSBtb2RlIDEwMDY0NCB0YXJn
ZXQvbGludXgvZ2VtaW5pL3BhdGNoZXMtNS40LzAwMDctaHdtb24tRHJpdmVyLWZvci1kaXNrLWFu
ZC1zb2xpZC1zdGF0ZS1kcml2ZXMtd2l0aC10ZS5wYXRjaAoKZGlmZiAtLWdpdCBhL3RhcmdldC9s
aW51eC9nZW1pbmkvcGF0Y2hlcy01LjQvMDAwMS11c2ItaG9zdC1mb3RnMi1hZGQtR2VtaW5pLXNw
ZWNpZmljLWhhbmRsaW5nLnBhdGNoIGIvdGFyZ2V0L2xpbnV4L2dlbWluaS9wYXRjaGVzLTUuNC8w
MDAxLXVzYi1ob3N0LWZvdGcyLWFkZC1HZW1pbmktc3BlY2lmaWMtaGFuZGxpbmcucGF0Y2gKbmV3
IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi40YTZhODA0Y2E0ZmEKLS0tIC9k
ZXYvbnVsbAorKysgYi90YXJnZXQvbGludXgvZ2VtaW5pL3BhdGNoZXMtNS40LzAwMDEtdXNiLWhv
c3QtZm90ZzItYWRkLUdlbWluaS1zcGVjaWZpYy1oYW5kbGluZy5wYXRjaApAQCAtMCwwICsxLDEz
MSBAQAorRnJvbSAzYWFmZjg4YTBmNWUxNTRhYTVhNDg5ZDU5ZmQ0MDE1YTJhOTM3YzIzIE1vbiBT
ZXAgMTcgMDA6MDA6MDAgMjAwMQorRnJvbTogTGludXMgV2FsbGVpaiA8bGludXMud2FsbGVpakBs
aW5hcm8ub3JnPgorRGF0ZTogRnJpLCAyMSBBcHIgMjAxNyAyMjoxOTowMCArMDIwMAorU3ViamVj
dDogW1BBVENIIDEvN10gdXNiOiBob3N0OiBmb3RnMjogYWRkIEdlbWluaS1zcGVjaWZpYyBoYW5k
bGluZworCitUaGUgQ29ydGluYSBTeXN0ZW1zIEdlbWluaSBoYXMgYm9sdGVkIG9uIGEgUEhZIGlu
c2lkZSB0aGUKK3NpbGljb24gdGhhdCBjYW4gYmUgaGFuZGxlZCBieSBzaXggYml0cyBpbiBhIE1J
U0MgcmVnaXN0ZXIgaW4KK3RoZSBzeXN0ZW0gY29udHJvbGxlci4KKworSWYgd2UgYXJlIHJ1bm5p
bmcgb24gR2VtaW5pLCBsb29rIHVwIGEgc3lzY29uIHJlZ21hcCB0aHJvdWdoCithIHBoYW5kbGUg
YW5kIGVuYWJsZSBWQlVTIGFuZCBvcHRpb25hbGx5IHRoZSBNaW5pLUIgY29ubmVjdG9yLgorCitJ
ZiB0aGUgZGV2aWNlIGlzIGZsYWdnZWQgYXMgIndha2V1cC1zb3VyY2UiIHVzaW5nIHRoZSBzdGFu
ZGFyZAorRFQgYmluZGluZ3MsIHdlIGFsc28gZW5hYmxlIHRoaXMgaW4gdGhlIGdsb2JhbCBjb250
cm9sbGVyIGZvcgorcmVzcGVjdGl2ZSBwb3J0LgorCitTaWduZWQtb2ZmLWJ5OiBMaW51cyBXYWxs
ZWlqIDxsaW51cy53YWxsZWlqQGxpbmFyby5vcmc+CistLS0KKyBkcml2ZXJzL3VzYi9ob3N0L0tj
b25maWcgICAgICAgfCAgMSArCisgZHJpdmVycy91c2IvaG9zdC9mb3RnMjEwLWhjZC5jIHwgNzYg
KysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKworIDIgZmlsZXMgY2hhbmdlZCwgNzcg
aW5zZXJ0aW9ucygrKQorCistLS0gYS9kcml2ZXJzL3VzYi9ob3N0L0tjb25maWcKKysrKyBiL2Ry
aXZlcnMvdXNiL2hvc3QvS2NvbmZpZworQEAgLTM2Myw2ICszNjMsNyBAQCBjb25maWcgVVNCX0lT
UDEzNjJfSENECisgY29uZmlnIFVTQl9GT1RHMjEwX0hDRAorIAl0cmlzdGF0ZSAiRk9URzIxMCBI
Q0Qgc3VwcG9ydCIKKyAJZGVwZW5kcyBvbiBVU0IgJiYgSEFTX0RNQSAmJiBIQVNfSU9NRU0KKysJ
c2VsZWN0IE1GRF9TWVNDT04KKyAJLS0taGVscC0tLQorIAkgIEZhcmFkYXkgRk9URzIxMCBpcyBh
biBPVEcgY29udHJvbGxlciB3aGljaCBjYW4gYmUgY29uZmlndXJlZCBhcworIAkgIGFuIFVTQjIu
MCBob3N0LiBJdCBpcyBkZXNpZ25lZCB0byBtZWV0IFVTQjIuMCBFSENJIHNwZWNpZmljYXRpb24K
Ky0tLSBhL2RyaXZlcnMvdXNiL2hvc3QvZm90ZzIxMC1oY2QuYworKysrIGIvZHJpdmVycy91c2Iv
aG9zdC9mb3RnMjEwLWhjZC5jCitAQCAtMzMsNiArMzMsMTAgQEAKKyAjaW5jbHVkZSA8bGludXgv
cGxhdGZvcm1fZGV2aWNlLmg+CisgI2luY2x1ZGUgPGxpbnV4L2lvLmg+CisgI2luY2x1ZGUgPGxp
bnV4L2Nsay5oPgorKyNpbmNsdWRlIDxsaW51eC9iaXRvcHMuaD4KKysvKiBGb3IgQ29ydGluYSBH
ZW1pbmkgKi8KKysjaW5jbHVkZSA8bGludXgvbWZkL3N5c2Nvbi5oPgorKyNpbmNsdWRlIDxsaW51
eC9yZWdtYXAuaD4KKyAKKyAjaW5jbHVkZSA8YXNtL2J5dGVvcmRlci5oPgorICNpbmNsdWRlIDxh
c20vaXJxLmg+CitAQCAtNTU1OCw2ICs1NTYyLDcyIEBAIHN0YXRpYyB2b2lkIGZvdGcyMTBfaW5p
dChzdHJ1Y3QgZm90ZzIxMF8KKyAJaW93cml0ZTMyKHZhbHVlLCAmZm90ZzIxMC0+cmVncy0+b3Rn
Y3NyKTsKKyB9CisgCisrLyoKKysgKiBHZW1pbmktc3BlY2lmaWMgaW5pdGlhbGl6YXRpb24gZnVu
Y3Rpb24sIG9ubHkgZXhlY3V0ZWQgb24gdGhlCisrICogR2VtaW5pIFNvQyB1c2luZyB0aGUgZ2xv
YmFsIG1pc2MgY29udHJvbCByZWdpc3Rlci4KKysgKi8KKysjZGVmaW5lIEdFTUlOSV9HTE9CQUxf
TUlTQ19DVFJMCQkweDMwCisrI2RlZmluZSBHRU1JTklfTUlTQ19VU0IwX1dBS0VVUAkJQklUKDE0
KQorKyNkZWZpbmUgR0VNSU5JX01JU0NfVVNCMV9XQUtFVVAJCUJJVCgxNSkKKysjZGVmaW5lIEdF
TUlOSV9NSVNDX1VTQjBfVkJVU19PTglCSVQoMjIpCisrI2RlZmluZSBHRU1JTklfTUlTQ19VU0Ix
X1ZCVVNfT04JQklUKDIzKQorKyNkZWZpbmUgR0VNSU5JX01JU0NfVVNCMF9NSU5JX0IJCUJJVCgy
OSkKKysjZGVmaW5lIEdFTUlOSV9NSVNDX1VTQjFfTUlOSV9CCQlCSVQoMzApCisrCisrc3RhdGlj
IGludCBmb3RnMjEwX2dlbWluaV9pbml0KHN0cnVjdCBkZXZpY2UgKmRldiwgc3RydWN0IHVzYl9o
Y2QgKmhjZCkKKyt7CisrCXN0cnVjdCBkZXZpY2Vfbm9kZSAqbnAgPSBkZXYtPm9mX25vZGU7Cisr
CXN0cnVjdCByZWdtYXAgKm1hcDsKKysJYm9vbCBtaW5pX2I7CisrCWJvb2wgd2FrZXVwOworKwl1
MzIgbWFzaywgdmFsOworKwlpbnQgcmV0OworKworKwltYXAgPSBzeXNjb25fcmVnbWFwX2xvb2t1
cF9ieV9waGFuZGxlKG5wLCAic3lzY29uIik7CisrCWlmIChJU19FUlIobWFwKSkgeworKwkJZGV2
X2VycihkZXYsICJubyBzeXNjb25cbiIpOworKwkJcmV0dXJuIFBUUl9FUlIobWFwKTsKKysJfQor
KwltaW5pX2IgPSBvZl9wcm9wZXJ0eV9yZWFkX2Jvb2wobnAsICJjb3J0aW5hLGdlbWluaS1taW5p
LWIiKTsKKysJd2FrZXVwID0gb2ZfcHJvcGVydHlfcmVhZF9ib29sKG5wLCAid2FrZXVwLXNvdXJj
ZSIpOworKworKwkvKgorKwkgKiBGaWd1cmUgb3V0IGlmIHRoaXMgaXMgVVNCMCBvciBVU0IxIGJ5
IHNpbXBseSBjaGVja2luZyB0aGUKKysJICogcGh5c2ljYWwgYmFzZSBhZGRyZXNzLgorKwkgKi8K
KysJbWFzayA9IDA7CisrCWlmIChoY2QtPnJzcmNfc3RhcnQgPT0gMHg2OTAwMDAwMCkgeworKwkJ
dmFsID0gR0VNSU5JX01JU0NfVVNCMV9WQlVTX09OOworKwkJaWYgKG1pbmlfYikKKysJCQl2YWwg
fD0gR0VNSU5JX01JU0NfVVNCMV9NSU5JX0I7CisrCQllbHNlCisrCQkJbWFzayB8PSBHRU1JTklf
TUlTQ19VU0IxX01JTklfQjsKKysJCWlmICh3YWtldXApCisrCQkJdmFsIHw9IEdFTUlOSV9NSVND
X1VTQjFfV0FLRVVQOworKwkJZWxzZQorKwkJCW1hc2sgfD0gR0VNSU5JX01JU0NfVVNCMV9XQUtF
VVA7CisrCX0gZWxzZSB7CisrCQl2YWwgPSBHRU1JTklfTUlTQ19VU0IwX1ZCVVNfT047CisrCQlp
ZiAobWluaV9iKQorKwkJCXZhbCB8PSBHRU1JTklfTUlTQ19VU0IwX01JTklfQjsKKysJCWVsc2UK
KysJCQltYXNrIHw9IEdFTUlOSV9NSVNDX1VTQjBfTUlOSV9COworKwkJaWYgKHdha2V1cCkKKysJ
CQl2YWwgfD0gR0VNSU5JX01JU0NfVVNCMF9XQUtFVVA7CisrCQllbHNlCisrCQkJbWFzayB8PSBH
RU1JTklfTUlTQ19VU0IwX1dBS0VVUDsKKysJfQorKworKwlyZXQgPSByZWdtYXBfdXBkYXRlX2Jp
dHMobWFwLCBHRU1JTklfR0xPQkFMX01JU0NfQ1RSTCwgbWFzaywgdmFsKTsKKysJaWYgKHJldCkg
eworKwkJZGV2X2VycihkZXYsICJmYWlsZWQgdG8gaW5pdGlhbGl6ZSBHZW1pbmkgUEhZXG4iKTsK
KysJCXJldHVybiByZXQ7CisrCX0KKysKKysJZGV2X2luZm8oZGV2LCAiaW5pdGlhbGl6ZWQgR2Vt
aW5pIFBIWVxuIik7CisrCXJldHVybiAwOworK30KKysKKyAvKioKKyAgKiBmb3RnMjEwX2hjZF9w
cm9iZSAtIGluaXRpYWxpemUgZmFyYWRheSBGT1RHMjEwIEhDRHMKKyAgKgorQEAgLTU2MzUsNiAr
NTcwNSwxMiBAQCBzdGF0aWMgaW50IGZvdGcyMTBfaGNkX3Byb2JlKHN0cnVjdCBwbGF0CisgCisg
CWZvdGcyMTBfaW5pdChmb3RnMjEwKTsKKyAKKysJaWYgKG9mX2RldmljZV9pc19jb21wYXRpYmxl
KGRldi0+b2Zfbm9kZSwgImNvcnRpbmEsZ2VtaW5pLXVzYiIpKSB7CisrCQlyZXR2YWwgPSBmb3Rn
MjEwX2dlbWluaV9pbml0KGRldiwgaGNkKTsKKysJCWlmIChyZXR2YWwpCisrCQkJZ290byBmYWls
ZWRfZGlzX2NsazsKKysJfQorKworIAlyZXR2YWwgPSB1c2JfYWRkX2hjZChoY2QsIGlycSwgSVJR
Rl9TSEFSRUQpOworIAlpZiAocmV0dmFsKSB7CisgCQlkZXZfZXJyKGRldiwgImZhaWxlZCB0byBh
ZGQgaGNkIHdpdGggZXJyICVkXG4iLCByZXR2YWwpOwpkaWZmIC0tZ2l0IGEvdGFyZ2V0L2xpbnV4
L2dlbWluaS9wYXRjaGVzLTUuNC8wMDAyLUFSTS1kdHMtQXVnbWVudC1ESVItNjg1LXBhcnRpdGlv
bi10YWJsZS1mb3ItT3BlbldydC5wYXRjaCBiL3RhcmdldC9saW51eC9nZW1pbmkvcGF0Y2hlcy01
LjQvMDAwMi1BUk0tZHRzLUF1Z21lbnQtRElSLTY4NS1wYXJ0aXRpb24tdGFibGUtZm9yLU9wZW5X
cnQucGF0Y2gKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi4zOWRmZDNk
NTM1NzMKLS0tIC9kZXYvbnVsbAorKysgYi90YXJnZXQvbGludXgvZ2VtaW5pL3BhdGNoZXMtNS40
LzAwMDItQVJNLWR0cy1BdWdtZW50LURJUi02ODUtcGFydGl0aW9uLXRhYmxlLWZvci1PcGVuV3J0
LnBhdGNoCkBAIC0wLDAgKzEsMzcgQEAKK0Zyb20gYTJkZTg1NjA4ODU0NjlmM2Q3NmM4MDIwN2E2
NjkwMjllNGZjOGE0NSBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKK0Zyb206IExpbnVzIFdhbGxl
aWogPGxpbnVzLndhbGxlaWpAbGluYXJvLm9yZz4KK0RhdGU6IE1vbiwgMTEgTWFyIDIwMTkgMTU6
NDQ6MjkgKzAxMDAKK1N1YmplY3Q6IFtQQVRDSCAyLzddIEFSTTogZHRzOiBBdWdtZW50IERJUi02
ODUgcGFydGl0aW9uIHRhYmxlIGZvciBPcGVuV3J0CisKK1JlbmFtZSB0aGUgZmlybXdhcmUgcGFy
dGl0aW9uIHNvIHRoYXQgdGhlIGZpcm13YXJlIE1URAorc3BsaXR0ZXIgd2lsbCBkbyBpdHMgam9i
LCBkcm9wIHRoZSByb290ZnMgYXJndW1lbnRzIGFzCit0aGUgTVREIHNwbGl0dGVyIHdpbGwgc2V0
IHRoaXMgdXAgYXV0b21hdGljYWxseS4KKworU2lnbmVkLW9mZi1ieTogTGludXMgV2FsbGVpaiA8
bGludXMud2FsbGVpakBsaW5hcm8ub3JnPgorLS0tCisgYXJjaC9hcm0vYm9vdC9kdHMvZ2VtaW5p
LWRsaW5rLWRpci02ODUuZHRzIHwgNiArKystLS0KKyAxIGZpbGUgY2hhbmdlZCwgMyBpbnNlcnRp
b25zKCspLCAzIGRlbGV0aW9ucygtKQorCistLS0gYS9hcmNoL2FybS9ib290L2R0cy9nZW1pbmkt
ZGxpbmstZGlyLTY4NS5kdHMKKysrKyBiL2FyY2gvYXJtL2Jvb3QvZHRzL2dlbWluaS1kbGluay1k
aXItNjg1LmR0cworQEAgLTIwLDcgKzIwLDcgQEAKKyAJfTsKKyAKKyAJY2hvc2VuIHsKKy0JCWJv
b3RhcmdzID0gImNvbnNvbGU9dHR5UzAsMTkyMDBuOCByb290PS9kZXYvc2RhMSBydyByb290d2Fp
dCBjb25zb2xlYmxhbms9MzAwIjsKKysJCWJvb3RhcmdzID0gImNvbnNvbGU9dHR5UzAsMTkyMDBu
OCBjb25zb2xlYmxhbms9MzAwIjsKKyAJCXN0ZG91dC1wYXRoID0gInVhcnQwOjE5MjAwbjgiOwor
IAl9OworIAorQEAgLTI4NSw5ICsyODUsOSBAQAorIAkJCQkgKiB0aGlzIGlzIGNhbGxlZCAidXBn
cmFkZSIgb24gdGhlIHZlbmRvciBzeXN0ZW0uCisgCQkJCSAqLworIAkJCQlwYXJ0aXRpb25ANDAw
MDAgeworLQkJCQkJbGFiZWwgPSAidXBncmFkZSI7CisrCQkJCQljb21wYXRpYmxlID0gIndyZyI7
CisrCQkJCQlsYWJlbCA9ICJmaXJtd2FyZSI7CisgCQkJCQlyZWcgPSA8MHgwMDA0MDAwMCAweDAx
ZjQwMDAwPjsKKy0JCQkJCXJlYWQtb25seTsKKyAJCQkJfTsKKyAJCQkJLyogUkdEQiwgUmVzaWRl
bnRhbCBHYXRld2F5IERhdGFiYXNlPyAqLworIAkJCQlwYXJ0aXRpb25AMWY4MDAwMCB7CmRpZmYg
LS1naXQgYS90YXJnZXQvbGludXgvZ2VtaW5pL3BhdGNoZXMtNS40LzAwMDMtQVJNLWR0cy1nZW1p
bmktUmVuYW1lLUlERS1ub2Rlcy5wYXRjaCBiL3RhcmdldC9saW51eC9nZW1pbmkvcGF0Y2hlcy01
LjQvMDAwMy1BUk0tZHRzLWdlbWluaS1SZW5hbWUtSURFLW5vZGVzLnBhdGNoCm5ldyBmaWxlIG1v
ZGUgMTAwNjQ0CmluZGV4IDAwMDAwMDAwMDAwMC4uNjQ3N2IyZDJhNDY4Ci0tLSAvZGV2L251bGwK
KysrIGIvdGFyZ2V0L2xpbnV4L2dlbWluaS9wYXRjaGVzLTUuNC8wMDAzLUFSTS1kdHMtZ2VtaW5p
LVJlbmFtZS1JREUtbm9kZXMucGF0Y2gKQEAgLTAsMCArMSwxMTcgQEAKK0Zyb20gOWI5NWIzMDFi
MjE5ZGYxOWMyMGY0YTU2M2YxZGE2MzM4YjA5YjBkMCBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEK
K0Zyb206IExpbnVzIFdhbGxlaWogPGxpbnVzLndhbGxlaWpAbGluYXJvLm9yZz4KK0RhdGU6IFR1
ZSwgMzEgRGVjIDIwMTkgMTg6MTQ6MjggKzAxMDAKK1N1YmplY3Q6IFtQQVRDSCAzLzddIEFSTTog
ZHRzOiBnZW1pbmk6IFJlbmFtZSBJREUgbm9kZXMKKworQnkgcmVuYW1pbmcgdGhlIEFUQSBkcml2
ZSBub2RlcyB0byAiaWRlQCIgd2UgYWN0aXZhdGUgdGhlCitzZW1hbnRpYyBjaGVja3MgdG8gdGhl
IERUIHNjaGVtYSBmb3IgdGhlIGNvbnRyb2xsZXIgYW5kIHVzZQordGhlIGNvcnJlY3Qgbm90YXRp
b24gZm9yIFBBVEEgZHJpdmVzLgorCitTaWduZWQtb2ZmLWJ5OiBMaW51cyBXYWxsZWlqIDxsaW51
cy53YWxsZWlqQGxpbmFyby5vcmc+CistLS0KKyBhcmNoL2FybS9ib290L2R0cy9nZW1pbmktZGxp
bmstZGlyLTY4NS5kdHMgfCAyICstCisgYXJjaC9hcm0vYm9vdC9kdHMvZ2VtaW5pLWRsaW5rLWRu
cy0zMTMuZHRzIHwgMiArLQorIGFyY2gvYXJtL2Jvb3QvZHRzL2dlbWluaS1uYXM0MjIwYi5kdHMg
ICAgICB8IDQgKystLQorIGFyY2gvYXJtL2Jvb3QvZHRzL2dlbWluaS1zbDkzNTEyci5kdHMgICAg
ICB8IDQgKystLQorIGFyY2gvYXJtL2Jvb3QvZHRzL2dlbWluaS1zcTIwMS5kdHMgICAgICAgICB8
IDIgKy0KKyBhcmNoL2FybS9ib290L2R0cy9nZW1pbmkuZHRzaSAgICAgICAgICAgICAgfCA4ICsr
KysrKy0tCisgNiBmaWxlcyBjaGFuZ2VkLCAxMyBpbnNlcnRpb25zKCspLCA5IGRlbGV0aW9ucygt
KQorCistLS0gYS9hcmNoL2FybS9ib290L2R0cy9nZW1pbmktZGxpbmstZGlyLTY4NS5kdHMKKysr
KyBiL2FyY2gvYXJtL2Jvb3QvZHRzL2dlbWluaS1kbGluay1kaXItNjg1LmR0cworQEAgLTQ0Myw3
ICs0NDMsNyBAQAorIAkJCX07CisgCQl9OworIAorLQkJYXRhQDYzMDAwMDAwIHsKKysJCWlkZUA2
MzAwMDAwMCB7CisgCQkJc3RhdHVzID0gIm9rYXkiOworIAkJfTsKKyAKKy0tLSBhL2FyY2gvYXJt
L2Jvb3QvZHRzL2dlbWluaS1kbGluay1kbnMtMzEzLmR0cworKysrIGIvYXJjaC9hcm0vYm9vdC9k
dHMvZ2VtaW5pLWRsaW5rLWRucy0zMTMuZHRzCitAQCAtMjk3LDcgKzI5Nyw3IEBACisgCQkJfTsK
KyAJCX07CisgCistCQlhdGFANjMwMDAwMDAgeworKwkJaWRlQDYzMDAwMDAwIHsKKyAJCQlzdGF0
dXMgPSAib2theSI7CisgCQl9OworIAl9OworLS0tIGEvYXJjaC9hcm0vYm9vdC9kdHMvZ2VtaW5p
LW5hczQyMjBiLmR0cworKysrIGIvYXJjaC9hcm0vYm9vdC9kdHMvZ2VtaW5pLW5hczQyMjBiLmR0
cworQEAgLTE3MCwxMSArMTcwLDExIEBACisgCQkJfTsKKyAJCX07CisgCistCQlhdGFANjMwMDAw
MDAgeworKwkJaWRlQDYzMDAwMDAwIHsKKyAJCQlzdGF0dXMgPSAib2theSI7CisgCQl9OworIAor
LQkJYXRhQDYzNDAwMDAwIHsKKysJCWlkZUA2MzQwMDAwMCB7CisgCQkJc3RhdHVzID0gIm9rYXki
OworIAkJfTsKKyAKKy0tLSBhL2FyY2gvYXJtL2Jvb3QvZHRzL2dlbWluaS1zbDkzNTEyci5kdHMK
KysrKyBiL2FyY2gvYXJtL2Jvb3QvZHRzL2dlbWluaS1zbDkzNTEyci5kdHMKK0BAIC0yOTMsMTEg
KzI5MywxMSBAQAorIAkJCX07CisgCQl9OworIAorLQkJYXRhQDYzMDAwMDAwIHsKKysJCWlkZUA2
MzAwMDAwMCB7CisgCQkJc3RhdHVzID0gIm9rYXkiOworIAkJfTsKKyAKKy0JCWF0YUA2MzQwMDAw
MCB7CisrCQlpZGVANjM0MDAwMDAgeworIAkJCXN0YXR1cyA9ICJva2F5IjsKKyAJCX07CisgCist
LS0gYS9hcmNoL2FybS9ib290L2R0cy9nZW1pbmktc3EyMDEuZHRzCisrKysgYi9hcmNoL2FybS9i
b290L2R0cy9nZW1pbmktc3EyMDEuZHRzCitAQCAtMjg5LDcgKzI4OSw3IEBACisgCQkJfTsKKyAJ
CX07CisgCistCQlhdGFANjMwMDAwMDAgeworKwkJaWRlQDYzMDAwMDAwIHsKKyAJCQlzdGF0dXMg
PSAib2theSI7CisgCQl9OworIAorLS0tIGEvYXJjaC9hcm0vYm9vdC9kdHMvZ2VtaW5pLmR0c2kK
KysrKyBiL2FyY2gvYXJtL2Jvb3QvZHRzL2dlbWluaS5kdHNpCitAQCAtMzU2LDcgKzM1Niw3IEBA
CisgCQkJfTsKKyAJCX07CisgCistCQlhdGFANjMwMDAwMDAgeworKwkJaWRlQDYzMDAwMDAwIHsK
KyAJCQljb21wYXRpYmxlID0gImNvcnRpbmEsZ2VtaW5pLXBhdGEiLCAiZmFyYWRheSxmdGlkZTAx
MCI7CisgCQkJcmVnID0gPDB4NjMwMDAwMDAgMHgxMDAwPjsKKyAJCQlpbnRlcnJ1cHRzID0gPDQg
SVJRX1RZUEVfRURHRV9SSVNJTkc+OworQEAgLTM2NSw5ICszNjUsMTEgQEAKKyAJCQljbG9jay1u
YW1lcyA9ICJQQ0xLIjsKKyAJCQlzYXRhID0gPCZzYXRhPjsKKyAJCQlzdGF0dXMgPSAiZGlzYWJs
ZWQiOworKwkJCSNhZGRyZXNzLWNlbGxzID0gPDE+OworKwkJCSNzaXplLWNlbGxzID0gPDA+Owor
IAkJfTsKKyAKKy0JCWF0YUA2MzQwMDAwMCB7CisrCQlpZGVANjM0MDAwMDAgeworIAkJCWNvbXBh
dGlibGUgPSAiY29ydGluYSxnZW1pbmktcGF0YSIsICJmYXJhZGF5LGZ0aWRlMDEwIjsKKyAJCQly
ZWcgPSA8MHg2MzQwMDAwMCAweDEwMDA+OworIAkJCWludGVycnVwdHMgPSA8NSBJUlFfVFlQRV9F
REdFX1JJU0lORz47CitAQCAtMzc2LDYgKzM3OCw4IEBACisgCQkJY2xvY2stbmFtZXMgPSAiUENM
SyI7CisgCQkJc2F0YSA9IDwmc2F0YT47CisgCQkJc3RhdHVzID0gImRpc2FibGVkIjsKKysJCQkj
YWRkcmVzcy1jZWxscyA9IDwxPjsKKysJCQkjc2l6ZS1jZWxscyA9IDwwPjsKKyAJCX07CisgCisg
CQlkbWEtY29udHJvbGxlckA2NzAwMDAwMCB7CmRpZmYgLS1naXQgYS90YXJnZXQvbGludXgvZ2Vt
aW5pL3BhdGNoZXMtNS40LzAwMDQtQVJNLWR0cy1nZW1pbmktQWRkLXRoZXJtYWwtem9uZS10by1E
SVItNjg1LnBhdGNoIGIvdGFyZ2V0L2xpbnV4L2dlbWluaS9wYXRjaGVzLTUuNC8wMDA0LUFSTS1k
dHMtZ2VtaW5pLUFkZC10aGVybWFsLXpvbmUtdG8tRElSLTY4NS5wYXRjaApuZXcgZmlsZSBtb2Rl
IDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLjU5NDliOTJiZTE5NAotLS0gL2Rldi9udWxsCisr
KyBiL3RhcmdldC9saW51eC9nZW1pbmkvcGF0Y2hlcy01LjQvMDAwNC1BUk0tZHRzLWdlbWluaS1B
ZGQtdGhlcm1hbC16b25lLXRvLURJUi02ODUucGF0Y2gKQEAgLTAsMCArMSwxMDEgQEAKK0Zyb20g
MmIyZTlkMGUxZWU0NzY1YjIxYzY0ODIzNTQ4OTAyOGM2ZGM3ZTMzNiBNb24gU2VwIDE3IDAwOjAw
OjAwIDIwMDEKK0Zyb206IExpbnVzIFdhbGxlaWogPGxpbnVzLndhbGxlaWpAbGluYXJvLm9yZz4K
K0RhdGU6IFR1ZSwgMzEgRGVjIDIwMTkgMTg6MTg6MDggKzAxMDAKK1N1YmplY3Q6IFtQQVRDSCA0
LzddIEFSTTogZHRzOiBnZW1pbmk6IEFkZCB0aGVybWFsIHpvbmUgdG8gRElSLTY4NQorCitUaGUg
RElSLTY4NSBjYW4gbm93IGV4cGxvaXQgdGhlIHRoZXJtYWwgem9uZSBhZGRlZCBieSB0aGUKK2Ry
aXZlIHRlbXBlcmF0dXJlIHNlbnNvciBpbnNpZGUgdGhlIGhhcmQgZHJpdmUuIFdlIGhhdmUKK3Bh
dGNoZWQgdGhlIGxpYmF0YSBzdWJzeXN0ZW0gdG8gYXNzaWduIHRoZSBkZXZpY2Ugbm9kZXMKK3By
b3Blcmx5IHRvIHRoZSBTQ1NJIGRldmljZXMgYW5kIHRoaXMgaXMgd2hhdCB0aGUgZHJpdmV0ZW1w
Citkcml2ZXIgd2lsbCB1c2UgdG8gcG9wdWxhdGUgdGhlIHNlbnNvciBhbmQgdGhlIHRoZXJtYWwK
K3pvbmUsIHNvIHBpY2sgdGhhdCB1cCBpbnRvIHRoZSB0aGVybWFsIHpvbmUgYW5kIGxldCB0aGlz
Citjb250cm9sIHRoZSBmYW4uCisKK1RoZSBoYXJkd2FyZSBsYWNrcyBhbiBlbWJlZGRlZCB0ZW1w
ZXJhdHVyZSBzZW5zb3Igc28gdGhlCitELUxpbmsgdmVuZG9yIGZpcm13YXJlIHVzZXMgdGhpcyBt
ZXRob2QgdG8gY29udHJvbCB0aGUKK3RlbXBlcmF0dXJlIG9mIHRoZSBOQVMgZW5jbG9zdXJlIHVz
aW5nIHRoZSB0aGVybWFsIHNlbnNvcgoraW5zaWRlIHRoZSBoYXJkIGRyaXZlLgorCitUaGUgZHJp
dmUgdGVtcGVyYXR1cmUgdHJpZ2dlciBwb2ludHMgdG8gYmUgdXNlZCBjb21lcyBmcm9tCit0aGUg
dmVuZG9yIGZpcm13YXJlLgorCitTaWduZWQtb2ZmLWJ5OiBMaW51cyBXYWxsZWlqIDxsaW51cy53
YWxsZWlqQGxpbmFyby5vcmc+CistLS0KKyBhcmNoL2FybS9ib290L2R0cy9nZW1pbmktZGxpbmst
ZGlyLTY4NS5kdHMgfCA0OCArKysrKysrKysrKysrKysrKysrKy0tCisgMSBmaWxlIGNoYW5nZWQs
IDQ1IGluc2VydGlvbnMoKyksIDMgZGVsZXRpb25zKC0pCisKKy0tLSBhL2FyY2gvYXJtL2Jvb3Qv
ZHRzL2dlbWluaS1kbGluay1kaXItNjg1LmR0cworKysrIGIvYXJjaC9hcm0vYm9vdC9kdHMvZ2Vt
aW5pLWRsaW5rLWRpci02ODUuZHRzCitAQCAtMTE5LDEzICsxMTksMTEgQEAKKyAKKyAJLyoKKyAJ
ICogVGhpcyBpcyBhIFN1bm9uIE1hZ2xldiBHTTA1MDJQRlYyLTggY29vbGluZyBmYW4gQDEwMDAw
IFJQTS4KKy0JICogU2luY2UgdGhlIHBsYXRmb3JtIGhhcyBubyB0ZW1wZXJhdHVyZSBzZW5zb3Is
IHRoaXMgaXMgY29udHJvbGxlZAorLQkgKiBmcm9tIHVzZXJzcGFjZSBieSB1c2luZyB0aGUgaGFy
ZCBkaXNrcyBTLk0uQS5SLlQuIHRlbXBlcmF0dXJlCisgCSAqIHNlbnNvci4gSXQgaXMgdHVybmVk
IG9uIHdoZW4gdGhlIHRlbXBlcmF0dXJlIGV4Y2VlZHMgNDYgZGVncmVlcworIAkgKiBhbmQgdHVy
bmVkIG9mZiB3aGVuIHRoZSB0ZW1wZXJhdHVyZXMgZ29lcyBiZWxvdyA0MSBkZWdyZWVzCisgCSAq
IChjZWxzaXVzKS4KKyAJICovCistCWdwaW8tZmFuIHsKKysJZmFuMDogZ3Bpby1mYW4geworIAkJ
Y29tcGF0aWJsZSA9ICJncGlvLWZhbiI7CisgCQkvKiBDb2xsaWRlcyB3aXRoIElERSAqLworIAkJ
Z3Bpb3MgPSA8JmdwaW8xIDYgR1BJT19BQ1RJVkVfSElHSD47CitAQCAtMTMzLDYgKzEzMSw0MCBA
QAorIAkJI2Nvb2xpbmctY2VsbHMgPSA8Mj47CisgCX07CisgCisrCXRoZXJtYWwtem9uZXMgewor
KwkJY2hhc3Npcy10aGVybWFsIHsKKysJCQkvKiBQb2xsIGV2ZXJ5IDIwIHNlY29uZHMgKi8KKysJ
CQlwb2xsaW5nLWRlbGF5ID0gPDIwMDAwPjsKKysJCQkvKiBQb2xsIGV2ZXJ5IDJuZCBzZWNvbmQg
d2hlbiBjb29saW5nICovCisrCQkJcG9sbGluZy1kZWxheS1wYXNzaXZlID0gPDIwMDA+OworKwkJ
CS8qICBVc2UgdGhlIHRoZXJtYWwgc2Vuc29yIGluIHRoZSBoYXJkIGRyaXZlICovCisrCQkJdGhl
cm1hbC1zZW5zb3JzID0gPCZkcml2ZTA+OworKworKwkJCS8qIFRyaXBwaW5nIHBvaW50cyBmcm9t
IHRoZSBmYW4uc2NyaXB0IGluIHRoZSByb290ZnMgKi8KKysJCQl0cmlwcyB7CisrCQkJCWFsZXJ0
OiBjaGFzc2lzLWFsZXJ0IHsKKysJCQkJCS8qIEF0IDQzIGRlZ3JlZXMgdHVybiBvbiB0aGUgZmFu
ICovCisrCQkJCQl0ZW1wZXJhdHVyZSA9IDw0MzAwMD47CisrCQkJCQloeXN0ZXJlc2lzID0gPDMw
MDA+OworKwkJCQkJdHlwZSA9ICJhY3RpdmUiOworKwkJCQl9OworKwkJCQljcml0OiBjaGFzc2lz
LWNyaXQgeworKwkJCQkJLyogSnVzdCBzaHV0IGRvd24gYXQgNjAgZGVncmVlcyAqLworKwkJCQkJ
dGVtcGVyYXR1cmUgPSA8NjAwMDA+OworKwkJCQkJaHlzdGVyZXNpcyA9IDwyMDAwPjsKKysJCQkJ
CXR5cGUgPSAiY3JpdGljYWwiOworKwkJCQl9OworKwkJCX07CisrCisrCQkJY29vbGluZy1tYXBz
IHsKKysJCQkJbWFwMCB7CisrCQkJCQl0cmlwID0gPCZhbGVydD47CisrCQkJCQljb29saW5nLWRl
dmljZSA9IDwmZmFuMCAxIDE+OworKwkJCQl9OworKwkJCX07CisrCQl9OworKwl9OworKworIAkv
KgorIAkgKiBUaGUgdG91Y2hwYWQgaW5wdXQgaXMgY29ubmVjdGVkIHRvIGEgR1BJTyBiaXQtYmFu
Z2VkCisgCSAqIEkyQyBidXMuCitAQCAtNDQ1LDYgKzQ3NywxNiBAQAorIAorIAkJaWRlQDYzMDAw
MDAwIHsKKyAJCQlzdGF0dXMgPSAib2theSI7CisrCisrCQkJLyoKKysJCQkgKiBUaGlzIGRyaXZl
IG1heSBoYXZlIGEgdGVtcGVyYXR1cmUgc2Vuc29yIHdpdGggYQorKwkJCSAqIHRoZXJtYWwgem9u
ZSB3ZSBjYW4gdXNlIGZvciB0aGVybWFsIGNvbnRyb2wgb2YgdGhlCisrCQkJICogY2hhc3NpcyB0
ZW1wZXJhdHVyZSB1c2luZyB0aGUgZmFuLgorKwkJCSAqLworKwkJCWRyaXZlMDogaWRlLXBvcnRA
MCB7CisrCQkJCXJlZyA9IDwwPjsKKysJCQkJI3RoZXJtYWwtc2Vuc29yLWNlbGxzID0gPDA+Owor
KwkJCX07CisgCQl9OworIAorIAkJZGlzcGxheS1jb250cm9sbGVyQDZhMDAwMDAwIHsKZGlmZiAt
LWdpdCBhL3RhcmdldC9saW51eC9nZW1pbmkvcGF0Y2hlcy01LjQvMDAwNS1saWJhdGEtQXNzaWdu
LU9GLW5vZGUtdG8tdGhlLVNDU0ktZGV2aWNlLnBhdGNoIGIvdGFyZ2V0L2xpbnV4L2dlbWluaS9w
YXRjaGVzLTUuNC8wMDA1LWxpYmF0YS1Bc3NpZ24tT0Ytbm9kZS10by10aGUtU0NTSS1kZXZpY2Uu
cGF0Y2gKbmV3IGZpbGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi45ZTcyMzEzZWM5
ZWMKLS0tIC9kZXYvbnVsbAorKysgYi90YXJnZXQvbGludXgvZ2VtaW5pL3BhdGNoZXMtNS40LzAw
MDUtbGliYXRhLUFzc2lnbi1PRi1ub2RlLXRvLXRoZS1TQ1NJLWRldmljZS5wYXRjaApAQCAtMCww
ICsxLDg2IEBACitGcm9tIDQzYTkzODkzZWIzM2U5OTY4MzZiOTlmYjNlMWY3MzAwYzAxMzJhNTEg
TW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCitGcm9tOiBMaW51cyBXYWxsZWlqIDxsaW51cy53YWxs
ZWlqQGxpbmFyby5vcmc+CitEYXRlOiBUdWUsIDMxIERlYyAyMDE5IDE4OjE1OjMzICswMTAwCitT
dWJqZWN0OiBbUEFUQ0ggNS83XSBsaWJhdGE6IEFzc2lnbiBPRiBub2RlIHRvIHRoZSBTQ1NJIGRl
dmljZQorCitXaGVuIHdlIHNwYXduIGEgU0NTSSBkZXZpY2UgZnJvbSBhbiBBVEEgZGV2aWNlIGlu
IGxpYmF0YS1zY3NpCit0aGUgU0NTSSBkZXZpY2UgaGFkIG5vIHJlbGF0aW9uIHRvIHRoZSBkZXZp
Y2UgdHJlZS4KKworVGhlIERUIGJpbmRpbmcgYWxsb3dzIHVzIHRvIGRlZmluZSBwb3J0IG5vZGVz
IHVuZGVyIGEKK1BBVEEgKElERSkgb3IgU0FUQSBob3N0IGNvbnRyb2xsZXIsIHNvIHdlIGNhbiBo
YXZlIHByb3BlciBkZXZpY2UKK25vZGVzIGZvciB0aGVzZSBkZXZpY2VzLgorCitJZiBPRiBpcyBl
bmFibGVkLCB3YWxrIHRoZSBjaGlsZHJlbiBvZiB0aGUgaG9zdCBjb250cm9sbGVyIG5vZGUKK3Rv
IHNlZSBpZiB0aGVyZSBpcyBhIHZhbGlkIGRldmljZSB0cmVlIG5vZGUgdG8gYXNzaWduLiBUaGUg
cmVnCitpcyB1c2VkIHRvIG1hdGNoIHRvIElEIDAgZm9yIHRoZSBtYXN0ZXIgZGV2aWNlIGFuZCBJ
RCAxIGZvciB0aGUKK3NsYXZlIGRldmljZS4KKworVGhlIGNvcnJlc3BvbmRpbmcgZGV2aWNlIHRy
ZWUgYmluZGluZ3MgaGF2ZSBiZWVuIGFjY2VwdGVkIGJ5Cit0aGUgZGV2aWNlIHRyZWUgbWFpbnRh
aW5lcnMuCisKK0NjOiBDaHJpcyBIZWFseSA8Y3BoZWFseUBnbWFpbC5jb20+CitDYzogTWFydGlu
IEsuIFBldGVyc2VuIDxtYXJ0aW4ucGV0ZXJzZW5Ab3JhY2xlLmNvbT4KK0NjOiBCYXJ0IFZhbiBB
c3NjaGUgPGJ2YW5hc3NjaGVAYWNtLm9yZz4KK0NjOiBHdWVudGVyIFJvZWNrIDxsaW51eEByb2Vj
ay11cy5uZXQ+CitTaWduZWQtb2ZmLWJ5OiBMaW51cyBXYWxsZWlqIDxsaW51cy53YWxsZWlqQGxp
bmFyby5vcmc+CistLS0KK0NoYW5nZUxvZyB2MS0+djI6CistIFVzZSBkZXZfZGJnKCkgZm9yIHRo
ZSBkZWJ1ZyBwcmludAorLSByZXR1cm4gaW1tZWRpYXRlbHkgYWZ0ZXIgZmluZGluZyBhIG1hdGNo
aW5nIE9GIG5vZGUKKy0tLQorIGRyaXZlcnMvYXRhL2xpYmF0YS1zY3NpLmMgfCAzMCArKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysKKyAxIGZpbGUgY2hhbmdlZCwgMzAgaW5zZXJ0aW9ucygr
KQorCistLS0gYS9kcml2ZXJzL2F0YS9saWJhdGEtc2NzaS5jCisrKysgYi9kcml2ZXJzL2F0YS9s
aWJhdGEtc2NzaS5jCitAQCAtMzUsNiArMzUsNyBAQAorICNpbmNsdWRlIDxsaW51eC9zdXNwZW5k
Lmg+CisgI2luY2x1ZGUgPGFzbS91bmFsaWduZWQuaD4KKyAjaW5jbHVkZSA8bGludXgvaW9wcmlv
Lmg+CisrI2luY2x1ZGUgPGxpbnV4L29mLmg+CisgCisgI2luY2x1ZGUgImxpYmF0YS5oIgorICNp
bmNsdWRlICJsaWJhdGEtdHJhbnNwb3J0LmgiCitAQCAtNDU3Myw2ICs0NTc0LDM0IEBAIGludCBh
dGFfc2NzaV9hZGRfaG9zdHMoc3RydWN0IGF0YV9ob3N0ICoKKyAJcmV0dXJuIHJjOworIH0KKyAK
KysjaWZkZWYgQ09ORklHX09GCisrc3RhdGljIHZvaWQgYXRhX3Njc2lfYXNzaWduX29mbm9kZShz
dHJ1Y3QgYXRhX2RldmljZSAqZGV2LCBzdHJ1Y3QgYXRhX3BvcnQgKmFwKQorK3sKKysJc3RydWN0
IHNjc2lfZGV2aWNlICpzZGV2ID0gZGV2LT5zZGV2OworKwlzdHJ1Y3QgZGV2aWNlICpkID0gYXAt
Pmhvc3QtPmRldjsKKysJc3RydWN0IGRldmljZV9ub2RlICpucCA9IGQtPm9mX25vZGU7CisrCXN0
cnVjdCBkZXZpY2Vfbm9kZSAqY2hpbGQ7CisrCisrCWZvcl9lYWNoX2F2YWlsYWJsZV9jaGlsZF9v
Zl9ub2RlKG5wLCBjaGlsZCkgeworKwkJaW50IHJldDsKKysJCXUzMiB2YWw7CisrCisrCQlyZXQg
PSBvZl9wcm9wZXJ0eV9yZWFkX3UzMihjaGlsZCwgInJlZyIsICZ2YWwpOworKwkJaWYgKHJldCkK
KysJCQljb250aW51ZTsKKysJCWlmICh2YWwgPT0gZGV2LT5kZXZubykgeworKwkJCWRldl9kYmco
ZCwgImZvdW5kIG1hdGNoaW5nIGRldmljZSBub2RlXG4iKTsKKysJCQlzZGV2LT5zZGV2X2dlbmRl
di5vZl9ub2RlID0gY2hpbGQ7CisrCQkJcmV0dXJuOworKwkJfQorKwl9CisrfQorKyNlbHNlCisr
c3RhdGljIHZvaWQgYXRhX3Njc2lfYXNzaWduX29mbm9kZShzdHJ1Y3QgYXRhX2RldmljZSAqZGV2
LCBzdHJ1Y3QgYXRhX3BvcnQgKmFwKQorK3sKKyt9CisrI2VuZGlmCisrCisgdm9pZCBhdGFfc2Nz
aV9zY2FuX2hvc3Qoc3RydWN0IGF0YV9wb3J0ICphcCwgaW50IHN5bmMpCisgeworIAlpbnQgdHJp
ZXMgPSA1OworQEAgLTQ1OTgsNiArNDYyNyw3IEBAIHZvaWQgYXRhX3Njc2lfc2Nhbl9ob3N0KHN0
cnVjdCBhdGFfcG9ydAorIAkJCQkJCSBOVUxMKTsKKyAJCQlpZiAoIUlTX0VSUihzZGV2KSkgewor
IAkJCQlkZXYtPnNkZXYgPSBzZGV2OworKwkJCQlhdGFfc2NzaV9hc3NpZ25fb2Zub2RlKGRldiwg
YXApOworIAkJCQlzY3NpX2RldmljZV9wdXQoc2Rldik7CisgCQkJfSBlbHNlIHsKKyAJCQkJZGV2
LT5zZGV2ID0gTlVMTDsKZGlmZiAtLWdpdCBhL3RhcmdldC9saW51eC9nZW1pbmkvcGF0Y2hlcy01
LjQvMDAwNi1zY3NpLWNvcmUtQWRkLXN5c2ZzLWF0dHJpYnV0ZXMtZm9yLVZQRC1wYWdlcy0waC1h
bmQtLnBhdGNoIGIvdGFyZ2V0L2xpbnV4L2dlbWluaS9wYXRjaGVzLTUuNC8wMDA2LXNjc2ktY29y
ZS1BZGQtc3lzZnMtYXR0cmlidXRlcy1mb3ItVlBELXBhZ2VzLTBoLWFuZC0ucGF0Y2gKbmV3IGZp
bGUgbW9kZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMDAwLi4yNTE2MTllOWIxYjMKLS0tIC9kZXYv
bnVsbAorKysgYi90YXJnZXQvbGludXgvZ2VtaW5pL3BhdGNoZXMtNS40LzAwMDYtc2NzaS1jb3Jl
LUFkZC1zeXNmcy1hdHRyaWJ1dGVzLWZvci1WUEQtcGFnZXMtMGgtYW5kLS5wYXRjaApAQCAtMCww
ICsxLDEyMiBAQAorRnJvbSA1OWVkOGRiMmFlZWUzNDM4OTQ5MTE1Yjk4ZmY0Mzk4OTZlY2QzZDg3
IE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQorRnJvbTogUnlhbiBBdHRhcmQgPHJ5YW5hdHRhcmRA
cnlhbmF0dGFyZC5pbmZvPgorRGF0ZTogVGh1LCAyNiBTZXAgMjAxOSAxMToyMjoxNyAtMDUwMAor
U3ViamVjdDogW1BBVENIIDYvN10gc2NzaTogY29yZTogQWRkIHN5c2ZzIGF0dHJpYnV0ZXMgZm9y
IFZQRCBwYWdlcyAwaCBhbmQgODloCisKK0FkZCBzeXNmcyBhdHRyaWJ1dGVzIGZvciB0aGUgQVRB
IGluZm9ybWF0aW9uIHBhZ2UgYW5kIFN1cHBvcnRlZCBWUEQgUGFnZXMKK3BhZ2UuCisKK0xpbms6
IGh0dHBzOi8vbG9yZS5rZXJuZWwub3JnL3IvMjAxOTA5MjYxNjIyMTYuNTY1OTEtMS1yeWFuYXR0
YXJkQHJ5YW5hdHRhcmQuaW5mbworU2lnbmVkLW9mZi1ieTogUnlhbiBBdHRhcmQgPHJ5YW5hdHRh
cmRAcnlhbmF0dGFyZC5pbmZvPgorUmV2aWV3ZWQtYnk6IEJhcnQgVmFuIEFzc2NoZSA8YnZhbmFz
c2NoZUBhY20ub3JnPgorU2lnbmVkLW9mZi1ieTogTWFydGluIEsuIFBldGVyc2VuIDxtYXJ0aW4u
cGV0ZXJzZW5Ab3JhY2xlLmNvbT4KKy0tLQorIGRyaXZlcnMvc2NzaS9zY3NpLmMgICAgICAgIHwg
IDQgKysrKworIGRyaXZlcnMvc2NzaS9zY3NpX3N5c2ZzLmMgIHwgMTkgKysrKysrKysrKysrKysr
KysrKworIGluY2x1ZGUvc2NzaS9zY3NpX2RldmljZS5oIHwgIDIgKysKKyAzIGZpbGVzIGNoYW5n
ZWQsIDI1IGluc2VydGlvbnMoKykKKworLS0tIGEvZHJpdmVycy9zY3NpL3Njc2kuYworKysrIGIv
ZHJpdmVycy9zY3NpL3Njc2kuYworQEAgLTQ2NSwxMCArNDY1LDE0IEBAIHZvaWQgc2NzaV9hdHRh
Y2hfdnBkKHN0cnVjdCBzY3NpX2RldmljZQorIAkJcmV0dXJuOworIAorIAlmb3IgKGkgPSA0OyBp
IDwgdnBkX2J1Zi0+bGVuOyBpKyspIHsKKysJCWlmICh2cGRfYnVmLT5kYXRhW2ldID09IDB4MCkK
KysJCQlzY3NpX3VwZGF0ZV92cGRfcGFnZShzZGV2LCAweDAsICZzZGV2LT52cGRfcGcwKTsKKyAJ
CWlmICh2cGRfYnVmLT5kYXRhW2ldID09IDB4ODApCisgCQkJc2NzaV91cGRhdGVfdnBkX3BhZ2Uo
c2RldiwgMHg4MCwgJnNkZXYtPnZwZF9wZzgwKTsKKyAJCWlmICh2cGRfYnVmLT5kYXRhW2ldID09
IDB4ODMpCisgCQkJc2NzaV91cGRhdGVfdnBkX3BhZ2Uoc2RldiwgMHg4MywgJnNkZXYtPnZwZF9w
ZzgzKTsKKysJCWlmICh2cGRfYnVmLT5kYXRhW2ldID09IDB4ODkpCisrCQkJc2NzaV91cGRhdGVf
dnBkX3BhZ2Uoc2RldiwgMHg4OSwgJnNkZXYtPnZwZF9wZzg5KTsKKyAJfQorIAlrZnJlZSh2cGRf
YnVmKTsKKyB9CistLS0gYS9kcml2ZXJzL3Njc2kvc2NzaV9zeXNmcy5jCisrKysgYi9kcml2ZXJz
L3Njc2kvc2NzaV9zeXNmcy5jCitAQCAtNDM3LDYgKzQzNyw3IEBAIHN0YXRpYyB2b2lkIHNjc2lf
ZGV2aWNlX2Rldl9yZWxlYXNlX3VzZXIKKyAJc3RydWN0IGRldmljZSAqcGFyZW50OworIAlzdHJ1
Y3QgbGlzdF9oZWFkICp0aGlzLCAqdG1wOworIAlzdHJ1Y3Qgc2NzaV92cGQgKnZwZF9wZzgwID0g
TlVMTCwgKnZwZF9wZzgzID0gTlVMTDsKKysJc3RydWN0IHNjc2lfdnBkICp2cGRfcGcwID0gTlVM
TCwgKnZwZF9wZzg5ID0gTlVMTDsKKyAJdW5zaWduZWQgbG9uZyBmbGFnczsKKyAKKyAJc2RldiA9
IGNvbnRhaW5lcl9vZih3b3JrLCBzdHJ1Y3Qgc2NzaV9kZXZpY2UsIGV3LndvcmspOworQEAgLTQ2
NiwxNiArNDY3LDI0IEBAIHN0YXRpYyB2b2lkIHNjc2lfZGV2aWNlX2Rldl9yZWxlYXNlX3VzZXIK
KyAJc2Rldi0+cmVxdWVzdF9xdWV1ZSA9IE5VTEw7CisgCisgCW11dGV4X2xvY2soJnNkZXYtPmlu
cXVpcnlfbXV0ZXgpOworKwlyY3Vfc3dhcF9wcm90ZWN0ZWQoc2Rldi0+dnBkX3BnMCwgdnBkX3Bn
MCwKKysJCQkgICBsb2NrZGVwX2lzX2hlbGQoJnNkZXYtPmlucXVpcnlfbXV0ZXgpKTsKKyAJcmN1
X3N3YXBfcHJvdGVjdGVkKHNkZXYtPnZwZF9wZzgwLCB2cGRfcGc4MCwKKyAJCQkgICBsb2NrZGVw
X2lzX2hlbGQoJnNkZXYtPmlucXVpcnlfbXV0ZXgpKTsKKyAJcmN1X3N3YXBfcHJvdGVjdGVkKHNk
ZXYtPnZwZF9wZzgzLCB2cGRfcGc4MywKKyAJCQkgICBsb2NrZGVwX2lzX2hlbGQoJnNkZXYtPmlu
cXVpcnlfbXV0ZXgpKTsKKysJcmN1X3N3YXBfcHJvdGVjdGVkKHNkZXYtPnZwZF9wZzg5LCB2cGRf
cGc4OSwKKysJCQkgICBsb2NrZGVwX2lzX2hlbGQoJnNkZXYtPmlucXVpcnlfbXV0ZXgpKTsKKyAJ
bXV0ZXhfdW5sb2NrKCZzZGV2LT5pbnF1aXJ5X211dGV4KTsKKyAKKysJaWYgKHZwZF9wZzApCisr
CQlrZnJlZV9yY3UodnBkX3BnMCwgcmN1KTsKKyAJaWYgKHZwZF9wZzgzKQorIAkJa2ZyZWVfcmN1
KHZwZF9wZzgzLCByY3UpOworIAlpZiAodnBkX3BnODApCisgCQlrZnJlZV9yY3UodnBkX3BnODAs
IHJjdSk7CisrCWlmICh2cGRfcGc4OSkKKysJCWtmcmVlX3JjdSh2cGRfcGc4OSwgcmN1KTsKKyAJ
a2ZyZWUoc2Rldi0+aW5xdWlyeSk7CisgCWtmcmVlKHNkZXYpOworIAorQEAgLTg2OCw2ICs4Nzcs
OCBAQCBzdGF0aWMgc3RydWN0IGJpbl9hdHRyaWJ1dGUgZGV2X2F0dHJfdnBkCisgCisgc2Rldl92
cGRfcGdfYXR0cihwZzgzKTsKKyBzZGV2X3ZwZF9wZ19hdHRyKHBnODApOworK3NkZXZfdnBkX3Bn
X2F0dHIocGc4OSk7Cisrc2Rldl92cGRfcGdfYXR0cihwZzApOworIAorIHN0YXRpYyBzc2l6ZV90
IHNob3dfaW5xdWlyeShzdHJ1Y3QgZmlsZSAqZmlsZXAsIHN0cnVjdCBrb2JqZWN0ICprb2JqLAor
IAkJCSAgICBzdHJ1Y3QgYmluX2F0dHJpYnV0ZSAqYmluX2F0dHIsCitAQCAtMTIwMCwxMiArMTIx
MSwxOCBAQCBzdGF0aWMgdW1vZGVfdCBzY3NpX3NkZXZfYmluX2F0dHJfaXNfdmlzCisgCXN0cnVj
dCBzY3NpX2RldmljZSAqc2RldiA9IHRvX3Njc2lfZGV2aWNlKGRldik7CisgCisgCisrCWlmIChh
dHRyID09ICZkZXZfYXR0cl92cGRfcGcwICYmICFzZGV2LT52cGRfcGcwKQorKwkJcmV0dXJuIDA7
CisrCisgCWlmIChhdHRyID09ICZkZXZfYXR0cl92cGRfcGc4MCAmJiAhc2Rldi0+dnBkX3BnODAp
CisgCQlyZXR1cm4gMDsKKyAKKyAJaWYgKGF0dHIgPT0gJmRldl9hdHRyX3ZwZF9wZzgzICYmICFz
ZGV2LT52cGRfcGc4MykKKyAJCXJldHVybiAwOworIAorKwlpZiAoYXR0ciA9PSAmZGV2X2F0dHJf
dnBkX3BnODkgJiYgIXNkZXYtPnZwZF9wZzg5KQorKwkJcmV0dXJuIDA7CisrCisgCXJldHVybiBT
X0lSVUdPOworIH0KKyAKK0BAIC0xMjQ4LDggKzEyNjUsMTAgQEAgc3RhdGljIHN0cnVjdCBhdHRy
aWJ1dGUgKnNjc2lfc2Rldl9hdHRycworIH07CisgCisgc3RhdGljIHN0cnVjdCBiaW5fYXR0cmli
dXRlICpzY3NpX3NkZXZfYmluX2F0dHJzW10gPSB7CisrCSZkZXZfYXR0cl92cGRfcGcwLAorIAkm
ZGV2X2F0dHJfdnBkX3BnODMsCisgCSZkZXZfYXR0cl92cGRfcGc4MCwKKysJJmRldl9hdHRyX3Zw
ZF9wZzg5LAorIAkmZGV2X2F0dHJfaW5xdWlyeSwKKyAJTlVMTAorIH07CistLS0gYS9pbmNsdWRl
L3Njc2kvc2NzaV9kZXZpY2UuaAorKysrIGIvaW5jbHVkZS9zY3NpL3Njc2lfZGV2aWNlLmgKK0BA
IC0xNDAsOCArMTQwLDEwIEBAIHN0cnVjdCBzY3NpX2RldmljZSB7CisgCWNvbnN0IGNoYXIgKiBy
ZXY7CQkvKiAuLi4gIm51bGxudWxsbnVsbG51bGwiIGJlZm9yZSBzY2FuICovCisgCisgI2RlZmlu
ZSBTQ1NJX1ZQRF9QR19MRU4gICAgICAgICAgICAgICAgMjU1CisrCXN0cnVjdCBzY3NpX3ZwZCBf
X3JjdSAqdnBkX3BnMDsKKyAJc3RydWN0IHNjc2lfdnBkIF9fcmN1ICp2cGRfcGc4MzsKKyAJc3Ry
dWN0IHNjc2lfdnBkIF9fcmN1ICp2cGRfcGc4MDsKKysJc3RydWN0IHNjc2lfdnBkIF9fcmN1ICp2
cGRfcGc4OTsKKyAJdW5zaWduZWQgY2hhciBjdXJyZW50X3RhZzsJLyogY3VycmVudCB0YWcgKi8K
KyAJc3RydWN0IHNjc2lfdGFyZ2V0ICAgICAgKnNkZXZfdGFyZ2V0OyAgIC8qIHVzZWQgb25seSBm
b3Igc2luZ2xlX2x1biAqLworIApkaWZmIC0tZ2l0IGEvdGFyZ2V0L2xpbnV4L2dlbWluaS9wYXRj
aGVzLTUuNC8wMDA3LWh3bW9uLURyaXZlci1mb3ItZGlzay1hbmQtc29saWQtc3RhdGUtZHJpdmVz
LXdpdGgtdGUucGF0Y2ggYi90YXJnZXQvbGludXgvZ2VtaW5pL3BhdGNoZXMtNS40LzAwMDctaHdt
b24tRHJpdmVyLWZvci1kaXNrLWFuZC1zb2xpZC1zdGF0ZS1kcml2ZXMtd2l0aC10ZS5wYXRjaApu
ZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwMDAuLmU0NWI4N2Y5NGUwYwotLS0g
L2Rldi9udWxsCisrKyBiL3RhcmdldC9saW51eC9nZW1pbmkvcGF0Y2hlcy01LjQvMDAwNy1od21v
bi1Ecml2ZXItZm9yLWRpc2stYW5kLXNvbGlkLXN0YXRlLWRyaXZlcy13aXRoLXRlLnBhdGNoCkBA
IC0wLDAgKzEsNzM3IEBACitGcm9tIDA1ODUwNjg4ZjlkMzRkNTc4Zjg1NzgxOTAwNjEwZjg1NmEz
NThhYTQgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCitGcm9tOiBHdWVudGVyIFJvZWNrIDxsaW51
eEByb2Vjay11cy5uZXQ+CitEYXRlOiBUaHUsIDI4IE5vdiAyMDE5IDIxOjM0OjQwIC0wODAwCitT
dWJqZWN0OiBbUEFUQ0ggNy83XSBod21vbjogRHJpdmVyIGZvciBkaXNrIGFuZCBzb2xpZCBzdGF0
ZSBkcml2ZXMgd2l0aAorIHRlbXBlcmF0dXJlIHNlbnNvcnMKK01JTUUtVmVyc2lvbjogMS4wCitD
b250ZW50LVR5cGU6IHRleHQvcGxhaW47IGNoYXJzZXQ9VVRGLTgKK0NvbnRlbnQtVHJhbnNmZXIt
RW5jb2Rpbmc6IDhiaXQKKworUmVhZGluZyB0aGUgdGVtcGVyYXR1cmUgb2YgQVRBIGRyaXZlcyBo
YXMgYmVlbiBzdXBwb3J0ZWQgZm9yIHllYXJzCitieSB1c2Vyc3BhY2UgdG9vbHMgc3VjaCBhcyBz
bWFydHRvb2xzIG9yIGhkZHRlbXAuIFRoZSBkb3duc2lkZSBvZgorc3VjaCB0b29scyBpcyB0aGF0
IHRoZXkgbmVlZCB0byBydW4gd2l0aCBzdXBlci11c2VyIHByaXZpbGVnZSwgdGhhdAordGhlIHRl
bXBlcmF0dXJlcyBhcmUgbm90IHJlcG9ydGVkIGJ5IHN0YW5kYXJkIHRvb2xzIHN1Y2ggYXMgJ3Nl
bnNvcnMnCitvciAnbGlic2Vuc29ycycsIGFuZCB0aGF0IGRyaXZlIHRlbXBlcmF0dXJlcyBhcmUg
bm90IGF2YWlsYWJsZSBmb3IgdXNlCitpbiB0aGUga2VybmVsJ3MgdGhlcm1hbCBzdWJzeXN0ZW0u
CisKK1RoaXMgZHJpdmVyIHNvbHZlcyB0aGlzIHByb2JsZW0gYnkgYWRkaW5nIHN1cHBvcnQgZm9y
IHJlYWRpbmcgdGhlCit0ZW1wZXJhdHVyZSBvZiBBVEEgZHJpdmVzIGZyb20gdGhlIGtlcm5lbCB1
c2luZyB0aGUgaHdtb24gQVBJIGFuZAorYnkgYWRkaW5nIGEgdGVtcGVyYXR1cmUgem9uZSBmb3Ig
ZWFjaCBkcml2ZS4KKworV2l0aCB0aGlzIGRyaXZlciwgdGhlIGhhcmQgZGlzayB0ZW1wZXJhdHVy
ZSBjYW4gYmUgcmVhZCB1c2luZyB0aGUKK3VucHJpdmlsZWdlZCAnc2Vuc29ycycgYXBwbGljYXRp
b246CisKKyQgc2Vuc29ycyBkcml2ZXRlbXAtc2NzaS0xLTAKK2RyaXZldGVtcC1zY3NpLTEtMAor
QWRhcHRlcjogU0NTSSBhZGFwdGVyCit0ZW1wMTogICAgICAgICsyMy4wwrBDCisKK29yIGRpcmVj
dGx5IGZyb20gc3lzZnM6CisKKyQgZ3JlcCAuIC9zeXMvY2xhc3MvaHdtb24vaHdtb245L3tuYW1l
LHRlbXAxX2lucHV0fQorL3N5cy9jbGFzcy9od21vbi9od21vbjkvbmFtZTpkcml2ZXRlbXAKKy9z
eXMvY2xhc3MvaHdtb24vaHdtb245L3RlbXAxX2lucHV0OjIzMDAwCisKK0lmIHRoZSBkcml2ZSBz
dXBwb3J0cyBTQ1QgdHJhbnNwb3J0IGFuZCByZXBvcnRzIHRlbXBlcmF0dXJlIGxpbWl0cywKK3Ro
b3NlIGFyZSByZXBvcnRlZCBhcyB3ZWxsLgorCitkcml2ZXRlbXAtc2NzaS0wLTAKK0FkYXB0ZXI6
IFNDU0kgYWRhcHRlcgordGVtcDE6ICAgICAgICArMjcuMMKwQyAgKGxvdyAgPSAgKzAuMMKwQywg
aGlnaCA9ICs2MC4wwrBDKQorICAgICAgICAgICAgICAgICAgICAgICAoY3JpdCBsb3cgPSAtNDEu
MMKwQywgY3JpdCA9ICs4NS4wwrBDKQorICAgICAgICAgICAgICAgICAgICAgICAobG93ZXN0ID0g
KzIzLjDCsEMsIGhpZ2hlc3QgPSArMzQuMMKwQykKKworVGhlIGRyaXZlciBhdHRlbXB0cyB0byB1
c2UgU0NUIENvbW1hbmQgVHJhbnNwb3J0IHRvIHJlYWQgdGhlIGRyaXZlCit0ZW1wZXJhdHVyZS4g
SWYgdGhlIFNDVCBDb21tYW5kIFRyYW5zcG9ydCBmZWF0dXJlIHNldCBpcyBub3QgYXZhaWxhYmxl
LAorb3IgaWYgaXQgZG9lcyBub3QgcmVwb3J0IHRoZSBkcml2ZSB0ZW1wZXJhdHVyZSwgZHJpdmUg
dGVtcGVyYXR1cmVzIG1heQorYmUgcmVhZGFibGUgdGhyb3VnaCBTTUFSVCBhdHRyaWJ1dGVzLiBT
aW5jZSBTTUFSVCBhdHRyaWJ1dGVzIGFyZSBub3Qgd2VsbAorZGVmaW5lZCwgdGhpcyBtZXRob2Qg
aXMgb25seSB1c2VkIGFzIGZhbGxiYWNrIG1lY2hhbmlzbS4KKworQ2M6IENocmlzIEhlYWx5IDxj
cGhlYWx5QGdtYWlsLmNvbT4KK0NjOiBMaW51cyBXYWxsZWlqIDxsaW51cy53YWxsZWlqQGxpbmFy
by5vcmc+CitDYzogTWFydGluIEsuIFBldGVyc2VuIDxtYXJ0aW4ucGV0ZXJzZW5Ab3JhY2xlLmNv
bT4KK0NjOiBCYXJ0IFZhbiBBc3NjaGUgPGJ2YW5hc3NjaGVAYWNtLm9yZz4KK1Jldmlld2VkLWJ5
OiBMaW51cyBXYWxsZWlqIDxsaW51cy53YWxsZWlqQGxpbmFyby5vcmc+CitUZXN0ZWQtYnk6IExp
bnVzIFdhbGxlaWogPGxpbnVzLndhbGxlaWpAbGluYXJvLm9yZz4KK1NpZ25lZC1vZmYtYnk6IEd1
ZW50ZXIgUm9lY2sgPGxpbnV4QHJvZWNrLXVzLm5ldD4KKy0tLQorIERvY3VtZW50YXRpb24vaHdt
b24vZHJpdmV0ZW1wLnJzdCB8ICA1MiArKysKKyBEb2N1bWVudGF0aW9uL2h3bW9uL2luZGV4LnJz
dCAgICAgfCAgIDEgKworIGRyaXZlcnMvaHdtb24vS2NvbmZpZyAgICAgICAgICAgICB8ICAxMCAr
CisgZHJpdmVycy9od21vbi9NYWtlZmlsZSAgICAgICAgICAgIHwgICAxICsKKyBkcml2ZXJzL2h3
bW9uL2RyaXZldGVtcC5jICAgICAgICAgfCA1NzQgKysrKysrKysrKysrKysrKysrKysrKysrKysr
KysrCisgNSBmaWxlcyBjaGFuZ2VkLCA2MzggaW5zZXJ0aW9ucygrKQorIGNyZWF0ZSBtb2RlIDEw
MDY0NCBEb2N1bWVudGF0aW9uL2h3bW9uL2RyaXZldGVtcC5yc3QKKyBjcmVhdGUgbW9kZSAxMDA2
NDQgZHJpdmVycy9od21vbi9kcml2ZXRlbXAuYworCistLS0gL2Rldi9udWxsCisrKysgYi9Eb2N1
bWVudGF0aW9uL2h3bW9uL2RyaXZldGVtcC5yc3QKK0BAIC0wLDAgKzEsNTIgQEAKKysuLiBTUERY
LUxpY2Vuc2UtSWRlbnRpZmllcjogR1BMLTIuMAorKworK0tlcm5lbCBkcml2ZXIgZHJpdmV0ZW1w
CisrPT09PT09PT09PT09PT09PT09PT09PT0KKysKKysKKytSZWZlcmVuY2VzCisrLS0tLS0tLS0t
LQorKworK0FOUyBUMTMvMTY5OS1ECisrSW5mb3JtYXRpb24gdGVjaG5vbG9neSAtIEFUIEF0dGFj
aG1lbnQgOCAtIEFUQS9BVEFQSSBDb21tYW5kIFNldCAoQVRBOC1BQ1MpCisrCisrQU5TIFByb2pl
Y3QgVDEwL0JTUiBJTkNJVFMgNTEzCisrSW5mb3JtYXRpb24gdGVjaG5vbG9neSAtIFNDU0kgUHJp
bWFyeSBDb21tYW5kcyAtIDQgKFNQQy00KQorKworK0FOUyBQcm9qZWN0IElOQ0lUUyA1NTcKKytJ
bmZvcm1hdGlvbiB0ZWNobm9sb2d5IC0gU0NTSSAvIEFUQSBUcmFuc2xhdGlvbiAtIDUgKFNBVC01
KQorKworKworK0Rlc2NyaXB0aW9uCisrLS0tLS0tLS0tLS0KKysKKytUaGlzIGRyaXZlciBzdXBw
b3J0cyByZXBvcnRpbmcgdGhlIHRlbXBlcmF0dXJlIG9mIGRpc2sgYW5kIHNvbGlkIHN0YXRlCisr
ZHJpdmVzIHdpdGggdGVtcGVyYXR1cmUgc2Vuc29ycy4KKysKKytJZiBzdXBwb3J0ZWQsIGl0IHVz
ZXMgdGhlIEFUQSBTQ1QgQ29tbWFuZCBUcmFuc3BvcnQgZmVhdHVyZSB0byByZWFkCisrdGhlIGN1
cnJlbnQgZHJpdmUgdGVtcGVyYXR1cmUgYW5kLCBpZiBhdmFpbGFibGUsIHRlbXBlcmF0dXJlIGxp
bWl0cworK2FzIHdlbGwgYXMgaGlzdG9yaWMgbWluaW11bSBhbmQgbWF4aW11bSB0ZW1wZXJhdHVy
ZXMuIElmIFNDVCBDb21tYW5kCisrVHJhbnNwb3J0IGlzIG5vdCBzdXBwb3J0ZWQsIHRoZSBkcml2
ZXIgdXNlcyBTTUFSVCBhdHRyaWJ1dGVzIHRvIHJlYWQKKyt0aGUgZHJpdmUgdGVtcGVyYXR1cmUu
CisrCisrCisrU3lzZnMgZW50cmllcworKy0tLS0tLS0tLS0tLS0KKysKKytPbmx5IHRoZSB0ZW1w
MV9pbnB1dCBhdHRyaWJ1dGUgaXMgYWx3YXlzIGF2YWlsYWJsZS4gT3RoZXIgYXR0cmlidXRlcyBh
cmUKKythdmFpbGFibGUgb25seSBpZiByZXBvcnRlZCBieSB0aGUgZHJpdmUuIEFsbCB0ZW1wZXJh
dHVyZXMgYXJlIHJlcG9ydGVkIGluCisrbWlsbGktZGVncmVlcyBDZWxzaXVzLgorKworKz09PT09
PT09PT09PT09PT09PT09PT09CT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09CisrdGVtcDFfaW5wdXQJCUN1cnJlbnQgZHJpdmUgdGVtcGVyYXR1cmUK
Kyt0ZW1wMV9sY3JpdAkJTWluaW11bSB0ZW1wZXJhdHVyZSBsaW1pdC4gT3BlcmF0aW5nIHRoZSBk
ZXZpY2UgYmVsb3cKKysJCQl0aGlzIHRlbXBlcmF0dXJlIG1heSBjYXVzZSBwaHlzaWNhbCBkYW1h
Z2UgdG8gdGhlCisrCQkJZGV2aWNlLgorK3RlbXAxX21pbgkJTWluaW11bSByZWNvbW1lbmRlZCBj
b250aW51b3VzIG9wZXJhdGluZyBsaW1pdAorK3RlbXAxX21heAkJTWF4aW11bSByZWNvbW1lbmRl
ZCBjb250aW51b3VzIG9wZXJhdGluZyB0ZW1wZXJhdHVyZQorK3RlbXAxX2NyaXQJCU1heGltdW0g
dGVtcGVyYXR1cmUgbGltaXQuIE9wZXJhdGluZyB0aGUgZGV2aWNlIGFib3ZlCisrCQkJdGhpcyB0
ZW1wZXJhdHVyZSBtYXkgY2F1c2UgcGh5c2ljYWwgZGFtYWdlIHRvIHRoZQorKwkJCWRldmljZS4K
Kyt0ZW1wMV9sb3dlc3QJCU1pbmltdW0gdGVtcGVyYXR1cmUgc2VlbiB0aGlzIHBvd2VyIGN5Y2xl
CisrdGVtcDFfaGlnaGVzdAkJTWF4aW11bSB0ZW1wZXJhdHVyZSBzZWVuIHRoaXMgcG93ZXIgY3lj
bGUKKys9PT09PT09PT09PT09PT09PT09PT09PQk9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PQorLS0tIGEvRG9jdW1lbnRhdGlvbi9od21vbi9pbmRl
eC5yc3QKKysrKyBiL0RvY3VtZW50YXRpb24vaHdtb24vaW5kZXgucnN0CitAQCAtNDUsNiArNDUs
NyBAQCBIYXJkd2FyZSBNb25pdG9yaW5nIEtlcm5lbCBEcml2ZXJzCisgICAgZGE5MDUyCisgICAg
ZGE5MDU1CisgICAgZG1lMTczNworKyAgIGRyaXZldGVtcAorICAgIGRzMTYyMQorICAgIGRzNjIw
CisgICAgZW1jMTQwMworLS0tIGEvZHJpdmVycy9od21vbi9LY29uZmlnCisrKysgYi9kcml2ZXJz
L2h3bW9uL0tjb25maWcKK0BAIC0zODUsNiArMzg1LDE2IEBAIGNvbmZpZyBTRU5TT1JTX0FUWFAx
CisgCSAgVGhpcyBkcml2ZXIgY2FuIGFsc28gYmUgYnVpbHQgYXMgYSBtb2R1bGUuIElmIHNvLCB0
aGUgbW9kdWxlCisgCSAgd2lsbCBiZSBjYWxsZWQgYXR4cDEuCisgCisrY29uZmlnIFNFTlNPUlNf
RFJJVkVURU1QCisrCXRyaXN0YXRlICJIYXJkIGRpc2sgZHJpdmVzIHdpdGggdGVtcGVyYXR1cmUg
c2Vuc29ycyIKKysJZGVwZW5kcyBvbiBTQ1NJICYmIEFUQQorKwloZWxwCisrCSAgSWYgeW91IHNh
eSB5ZXMgeW91IGdldCBzdXBwb3J0IGZvciB0aGUgdGVtcGVyYXR1cmUgc2Vuc29yIG9uCisrCSAg
aGFyZCBkaXNrIGRyaXZlcy4KKysKKysJICBUaGlzIGRyaXZlciBjYW4gYWxzbyBiZSBidWlsdCBh
cyBhIG1vZHVsZS4gSWYgc28sIHRoZSBtb2R1bGUKKysJICB3aWxsIGJlIGNhbGxlZCBzYXRhdGVt
cC4KKysKKyBjb25maWcgU0VOU09SU19EUzYyMAorIAl0cmlzdGF0ZSAiRGFsbGFzIFNlbWljb25k
dWN0b3IgRFM2MjAiCisgCWRlcGVuZHMgb24gSTJDCistLS0gYS9kcml2ZXJzL2h3bW9uL01ha2Vm
aWxlCisrKysgYi9kcml2ZXJzL2h3bW9uL01ha2VmaWxlCitAQCAtNTYsNiArNTYsNyBAQCBvYmot
JChDT05GSUdfU0VOU09SU19EQTkwNTJfQURDKSs9IGRhOTA1Cisgb2JqLSQoQ09ORklHX1NFTlNP
UlNfREE5MDU1KSs9IGRhOTA1NS1od21vbi5vCisgb2JqLSQoQ09ORklHX1NFTlNPUlNfREVMTF9T
TU0pCSs9IGRlbGwtc21tLWh3bW9uLm8KKyBvYmotJChDT05GSUdfU0VOU09SU19ETUUxNzM3KQkr
PSBkbWUxNzM3Lm8KKytvYmotJChDT05GSUdfU0VOU09SU19EUklWRVRFTVApCSs9IGRyaXZldGVt
cC5vCisgb2JqLSQoQ09ORklHX1NFTlNPUlNfRFM2MjApCSs9IGRzNjIwLm8KKyBvYmotJChDT05G
SUdfU0VOU09SU19EUzE2MjEpCSs9IGRzMTYyMS5vCisgb2JqLSQoQ09ORklHX1NFTlNPUlNfRU1D
MTQwMykJKz0gZW1jMTQwMy5vCistLS0gL2Rldi9udWxsCisrKysgYi9kcml2ZXJzL2h3bW9uL2Ry
aXZldGVtcC5jCitAQCAtMCwwICsxLDU3NCBAQAorKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVy
OiBHUEwtMi4wCisrLyoKKysgKiBId21vbiBjbGllbnQgZm9yIGRpc2sgYW5kIHNvbGlkIHN0YXRl
IGRyaXZlcyB3aXRoIHRlbXBlcmF0dXJlIHNlbnNvcnMKKysgKiBDb3B5cmlnaHQgKEMpIDIwMTkg
Wm9kaWFjIEluZmxpZ2h0IElubm92YXRpb25zCisrICoKKysgKiBXaXRoIGlucHV0IGZyb206Cisr
ICogICAgSHdtb24gY2xpZW50IGZvciBTLk0uQS5SLlQuIGhhcmQgZGlzayBkcml2ZXMgd2l0aCB0
ZW1wZXJhdHVyZSBzZW5zb3JzLgorKyAqICAgIChDKSAyMDE4IExpbnVzIFdhbGxlaWoKKysgKgor
KyAqICAgIGh3bW9uOiBEcml2ZXIgZm9yIFNDU0kvQVRBIHRlbXBlcmF0dXJlIHNlbnNvcnMKKysg
KiAgICBieSBDb25zdGFudGluIEJhcmFub3YgPGNvbnN0QG1pbWFzLnJ1Piwgc3VibWl0dGVkIFNl
cHRlbWJlciAyMDA5CisrICoKKysgKiBUaGlzIGRyaXZlIHN1cHBvcnRzIHJlcG9ydGluZyB0aGUg
dGVtcGVyYXRpcmUgb2YgU0FUQSBkcml2ZXMuIEl0IGNhbiBiZQorKyAqIGVhc2lseSBleHRlbmRl
ZCB0byByZXBvcnQgdGhlIHRlbXBlcmF0dXJlIG9mIFNDU0kgZHJpdmVzLgorKyAqCisrICogVGhl
IHByaW1hcnkgbWVhbnMgdG8gcmVhZCBkcml2ZSB0ZW1wZXJhdHVyZXMgYW5kIHRlbXBlcmF0dXJl
IGxpbWl0cworKyAqIGZvciBBVEEgZHJpdmVzIGlzIHRoZSBTQ1QgQ29tbWFuZCBUcmFuc3BvcnQg
ZmVhdHVyZSBzZXQgYXMgc3BlY2lmaWVkIGluCisrICogQVRBOC1BQ1MuCisrICogSXQgY2FuIGJl
IHVzZWQgdG8gcmVhZCB0aGUgY3VycmVudCBkcml2ZSB0ZW1wZXJhdHVyZSwgdGVtcGVyYXR1cmUg
bGltaXRzLAorKyAqIGFuZCBoaXN0b3JpYyBtaW5pbXVtIGFuZCBtYXhpbXVtIHRlbXBlcmF0dXJl
cy4gVGhlIFNDVCBDb21tYW5kIFRyYW5zcG9ydAorKyAqIGZlYXR1cmUgc2V0IGlzIGRvY3VtZW50
ZWQgaW4gIkFUIEF0dGFjaG1lbnQgOCAtIEFUQS9BVEFQSSBDb21tYW5kIFNldAorKyAqIChBVEE4
LUFDUykiLgorKyAqCisrICogSWYgdGhlIFNDVCBDb21tYW5kIFRyYW5zcG9ydCBmZWF0dXJlIHNl
dCBpcyBub3QgYXZhaWxhYmxlLCBkcml2ZSB0ZW1wZXJhdHVyZXMKKysgKiBtYXkgYmUgcmVhZGFi
bGUgdGhyb3VnaCBTTUFSVCBhdHRyaWJ1dGVzLiBTaW5jZSBTTUFSVCBhdHRyaWJ1dGVzIGFyZSBu
b3Qgd2VsbAorKyAqIGRlZmluZWQsIHRoaXMgbWV0aG9kIGlzIG9ubHkgdXNlZCBhcyBmYWxsYmFj
ayBtZWNoYW5pc20uCisrICoKKysgKiBUaGVyZSBhcmUgdGhyZWUgU01BUlQgYXR0cmlidXRlcyB3
aGljaCBtYXkgcmVwb3J0IGRyaXZlIHRlbXBlcmF0dXJlcy4KKysgKiBUaG9zZSBhcmUgZGVmaW5l
ZCBhcyBmb2xsb3dzIChmcm9tCisrICogaHR0cDovL3d3dy5jcm9wZWwuY29tL2xpYnJhcnkvc21h
cnQtYXR0cmlidXRlLWxpc3QuYXNweCkuCisrICoKKysgKiAxOTAJVGVtcGVyYXR1cmUJVGVtcGVy
YXR1cmUsIG1vbml0b3JlZCBieSBhIHNlbnNvciBzb21ld2hlcmUgaW5zaWRlCisrICoJCQl0aGUg
ZHJpdmUuIFJhdyB2YWx1ZSB0eXBpY2FseSBob2xkcyB0aGUgYWN0dWFsCisrICoJCQl0ZW1wZXJh
dHVyZSAoaGV4YWRlY2ltYWwpIGluIGl0cyByaWdodG1vc3QgdHdvIGRpZ2l0cy4KKysgKgorKyAq
IDE5NAlUZW1wZXJhdHVyZQlUZW1wZXJhdHVyZSwgbW9uaXRvcmVkIGJ5IGEgc2Vuc29yIHNvbWV3
aGVyZSBpbnNpZGUKKysgKgkJCXRoZSBkcml2ZS4gUmF3IHZhbHVlIHR5cGljYWx5IGhvbGRzIHRo
ZSBhY3R1YWwKKysgKgkJCXRlbXBlcmF0dXJlIChoZXhhZGVjaW1hbCkgaW4gaXRzIHJpZ2h0bW9z
dCB0d28gZGlnaXRzLgorKyAqCisrICogMjMxCVRlbXBlcmF0dXJlCVRlbXBlcmF0dXJlLCBtb25p
dG9yZWQgYnkgYSBzZW5zb3Igc29tZXdoZXJlIGluc2lkZQorKyAqCQkJdGhlIGRyaXZlLiBSYXcg
dmFsdWUgdHlwaWNhbHkgaG9sZHMgdGhlIGFjdHVhbAorKyAqCQkJdGVtcGVyYXR1cmUgKGhleGFk
ZWNpbWFsKSBpbiBpdHMgcmlnaHRtb3N0IHR3byBkaWdpdHMuCisrICoKKysgKiBXaWtpcGVkaWEg
ZGVmaW5lcyBhdHRyaWJ1dGVzIGEgYml0IGRpZmZlcmVudGx5LgorKyAqCisrICogMTkwCVRlbXBl
cmF0dXJlCVZhbHVlIGlzIGVxdWFsIHRvICgxMDAtdGVtcC4gwrBDKSwgYWxsb3dpbmcgbWFudWZh
Y3R1cmVyCisrICoJRGlmZmVyZW5jZSBvcgl0byBzZXQgYSBtaW5pbXVtIHRocmVzaG9sZCB3aGlj
aCBjb3JyZXNwb25kcyB0byBhCisrICoJQWlyZmxvdwkJbWF4aW11bSB0ZW1wZXJhdHVyZS4gVGhp
cyBhbHNvIGZvbGxvd3MgdGhlIGNvbnZlbnRpb24gb2YKKysgKglUZW1wZXJhdHVyZQkxMDAgYmVp
bmcgYSBiZXN0LWNhc2UgdmFsdWUgYW5kIGxvd2VyIHZhbHVlcyBiZWluZworKyAqCQkJdW5kZXNp
cmFibGUuIEhvd2V2ZXIsIHNvbWUgb2xkZXIgZHJpdmVzIG1heSBpbnN0ZWFkCisrICoJCQlyZXBv
cnQgcmF3IFRlbXBlcmF0dXJlIChpZGVudGljYWwgdG8gMHhDMikgb3IKKysgKgkJCVRlbXBlcmF0
dXJlIG1pbnVzIDUwIGhlcmUuCisrICogMTk0CVRlbXBlcmF0dXJlIG9yCUluZGljYXRlcyB0aGUg
ZGV2aWNlIHRlbXBlcmF0dXJlLCBpZiB0aGUgYXBwcm9wcmlhdGUKKysgKglUZW1wZXJhdHVyZQlz
ZW5zb3IgaXMgZml0dGVkLiBMb3dlc3QgYnl0ZSBvZiB0aGUgcmF3IHZhbHVlIGNvbnRhaW5zCisr
ICoJQ2Vsc2l1cwkJdGhlIGV4YWN0IHRlbXBlcmF0dXJlIHZhbHVlIChDZWxzaXVzIGRlZ3JlZXMp
LgorKyAqIDIzMQlMaWZlIExlZnQJSW5kaWNhdGVzIHRoZSBhcHByb3hpbWF0ZSBTU0QgbGlmZSBs
ZWZ0LCBpbiB0ZXJtcyBvZgorKyAqCShTU0RzKSBvcglwcm9ncmFtL2VyYXNlIGN5Y2xlcyBvciBh
dmFpbGFibGUgcmVzZXJ2ZWQgYmxvY2tzLgorKyAqCVRlbXBlcmF0dXJlCUEgbm9ybWFsaXplZCB2
YWx1ZSBvZiAxMDAgcmVwcmVzZW50cyBhIG5ldyBkcml2ZSwgd2l0aAorKyAqCQkJYSB0aHJlc2hv
bGQgdmFsdWUgYXQgMTAgaW5kaWNhdGluZyBhIG5lZWQgZm9yCisrICoJCQlyZXBsYWNlbWVudC4g
QSB2YWx1ZSBvZiAwIG1heSBtZWFuIHRoYXQgdGhlIGRyaXZlIGlzCisrICoJCQlvcGVyYXRpbmcg
aW4gcmVhZC1vbmx5IG1vZGUgdG8gYWxsb3cgZGF0YSByZWNvdmVyeS4KKysgKgkJCVByZXZpb3Vz
bHkgKHByZS0yMDEwKSBvY2Nhc2lvbmFsbHkgdXNlZCBmb3IgRHJpdmUKKysgKgkJCVRlbXBlcmF0
dXJlIChtb3JlIHR5cGljYWxseSByZXBvcnRlZCBhdCAweEMyKS4KKysgKgorKyAqIENvbW1vbiBk
ZW5vbWluYXRvciBpcyB0aGF0IHRoZSBmaXJzdCByYXcgYnl0ZSByZXBvcnRzIHRoZSB0ZW1wZXJh
dHVyZQorKyAqIGluIGRlZ3JlZXMgQyBvbiBhbG1vc3QgYWxsIGRyaXZlcy4gU29tZSBkcml2ZXMg
bWF5IHJlcG9ydCBhIGZyYWN0aW9uYWwKKysgKiB0ZW1wZXJhdHVyZSBpbiB0aGUgc2Vjb25kIHJh
dyBieXRlLgorKyAqCisrICogS25vd24gZXhjZXB0aW9ucyAoZnJvbSBsaWJhdGFzbWFydCk6Cisr
ICogLSBTQU1TVU5HIFNWMDQxMkggYW5kIFNBTVNVTkcgU1YxMjA0SCkgcmVwb3J0IHRoZSB0ZW1w
ZXJhdHVyZSBpbiAxMHRoCisrICogICBkZWdyZWVzIEMgaW4gdGhlIGZpcnN0IHR3byByYXcgYnl0
ZXMuCisrICogLSBBIGZldyBNYXh0b3IgZHJpdmVzIHJlcG9ydCBhbiB1bmtub3duIG9yIGJhZCB2
YWx1ZSBpbiBhdHRyaWJ1dGUgMTk0LgorKyAqIC0gQ2VydGFpbiBBcHBsZSBTU0QgZHJpdmVzIHJl
cG9ydCBhbiB1bmtub3duIHZhbHVlIGluIGF0dHJpYnV0ZSAxOTAuCisrICogICBPbmx5IGNlcnRh
aW4gZmlybXdhcmUgdmVyc2lvbnMgYXJlIGFmZmVjdGVkLgorKyAqCisrICogVGhvc2UgZXhjZXB0
aW9ucyBhZmZlY3Qgb2xkZXIgQVRBIGRyaXZlcyBhbmQgYXJlIGN1cnJlbnRseSBpZ25vcmVkLgor
KyAqIEFsc28sIHRoZSBzZWNvbmQgcmF3IGJ5dGUgKHBvc3NpYmx5IHJlcG9ydGluZyB0aGUgZnJh
Y3Rpb25hbCB0ZW1wZXJhdHVyZSkKKysgKiBpcyBjdXJyZW50bHkgaWdub3JlZC4KKysgKgorKyAq
IE1hbnkgZHJpdmVzIGFsc28gcmVwb3J0IHRlbXBlcmF0dXJlIGxpbWl0cyBpbiBhZGRpdGlvbmFs
IFNNQVJUIGRhdGEgcmF3CisrICogYnl0ZXMuIFRoZSBmb3JtYXQgb2YgdGhvc2UgaXMgbm90IHdl
bGwgZGVmaW5lZCBhbmQgdmFyaWVzIHdpZGVseS4KKysgKiBUaGUgZHJpdmVyIGRvZXMgbm90IGN1
cnJlbnRseSBhdHRlbXB0IHRvIHJlcG9ydCB0aG9zZSBsaW1pdHMuCisrICoKKysgKiBBY2NvcmRp
bmcgdG8gZGF0YSBpbiBzbWFydG1vbnRvb2xzLCBhdHRyaWJ1dGUgMjMxIGlzIHJhcmVseSB1c2Vk
IHRvIHJlcG9ydAorKyAqIGRyaXZlIHRlbXBlcmF0dXJlcy4gQXQgdGhlIHNhbWUgdGltZSwgc2V2
ZXJhbCBkcml2ZXMgcmVwb3J0IFNTRCBsaWZlIGxlZnQKKysgKiBpbiBhdHRyaWJ1dGUgMjMxLCBi
dXQgZG8gbm90IHN1cHBvcnQgdGVtcGVyYXR1cmUgc2Vuc29ycy4gRm9yIHRoaXMgcmVhc29uLAor
KyAqIGF0dHJpYnV0ZSAyMzEgaXMgY3VycmVudGx5IGlnbm9yZWQuCisrICoKKysgKiBGb2xsb3dp
bmcgYWJvdmUgZGVmaW5pdGlvbnMsIHRlbXBlcmF0dXJlcyBhcmUgcmVwb3J0ZWQgYXMgZm9sbG93
cy4KKysgKiAgIElmIFNDVCBDb21tYW5kIFRyYW5zcG9ydCBpcyBzdXBwb3J0ZWQsIGl0IGlzIHVz
ZWQgdG8gcmVhZCB0aGUKKysgKiAgIHRlbXBlcmF0dXJlIGFuZCwgaWYgYXZhaWxhYmxlLCB0ZW1w
ZXJhdHVyZSBsaW1pdHMuCisrICogLSBPdGhlcndpc2UsIGlmIFNNQVJUIGF0dHJpYnV0ZSAxOTQg
aXMgc3VwcG9ydGVkLCBpdCBpcyB1c2VkIHRvIHJlYWQKKysgKiAgIHRoZSB0ZW1wZXJhdHVyZS4K
KysgKiAtIE90aGVyd2lzZSwgaWYgU01BUlQgYXR0cmlidXRlIDE5MCBpcyBzdXBwb3J0ZWQsIGl0
IGlzIHVzZWQgdG8gcmVhZAorKyAqICAgdGhlIHRlbXBlcmF0dXJlLgorKyAqLworKworKyNpbmNs
dWRlIDxsaW51eC9hdGEuaD4KKysjaW5jbHVkZSA8bGludXgvYml0cy5oPgorKyNpbmNsdWRlIDxs
aW51eC9kZXZpY2UuaD4KKysjaW5jbHVkZSA8bGludXgvaHdtb24uaD4KKysjaW5jbHVkZSA8bGlu
dXgva2VybmVsLmg+CisrI2luY2x1ZGUgPGxpbnV4L2xpc3QuaD4KKysjaW5jbHVkZSA8bGludXgv
bW9kdWxlLmg+CisrI2luY2x1ZGUgPGxpbnV4L211dGV4Lmg+CisrI2luY2x1ZGUgPHNjc2kvc2Nz
aV9jbW5kLmg+CisrI2luY2x1ZGUgPHNjc2kvc2NzaV9kZXZpY2UuaD4KKysjaW5jbHVkZSA8c2Nz
aS9zY3NpX2RyaXZlci5oPgorKyNpbmNsdWRlIDxzY3NpL3Njc2lfcHJvdG8uaD4KKysKKytzdHJ1
Y3QgZHJpdmV0ZW1wX2RhdGEgeworKwlzdHJ1Y3QgbGlzdF9oZWFkIGxpc3Q7CQkvKiBsaXN0IG9m
IGluc3RhbnRpYXRlZCBkZXZpY2VzICovCisrCXN0cnVjdCBtdXRleCBsb2NrOwkJLyogcHJvdGVj
dCBkYXRhIGJ1ZmZlciBhY2Nlc3NlcyAqLworKwlzdHJ1Y3Qgc2NzaV9kZXZpY2UgKnNkZXY7CS8q
IFNDU0kgZGV2aWNlICovCisrCXN0cnVjdCBkZXZpY2UgKmRldjsJCS8qIGluc3RhbnRpYXRpbmcg
ZGV2aWNlICovCisrCXN0cnVjdCBkZXZpY2UgKmh3ZGV2OwkJLyogaGFyZHdhcmUgbW9uaXRvcmlu
ZyBkZXZpY2UgKi8KKysJdTggc21hcnRkYXRhW0FUQV9TRUNUX1NJWkVdOwkvKiBsb2NhbCBidWZm
ZXIgKi8KKysJaW50ICgqZ2V0X3RlbXApKHN0cnVjdCBkcml2ZXRlbXBfZGF0YSAqc3QsIHUzMiBh
dHRyLCBsb25nICp2YWwpOworKwlib29sIGhhdmVfdGVtcF9sb3dlc3Q7CQkvKiBsb3dlc3QgdGVt
cCBpbiBTQ1Qgc3RhdHVzICovCisrCWJvb2wgaGF2ZV90ZW1wX2hpZ2hlc3Q7CQkvKiBoaWdoZXN0
IHRlbXAgaW4gU0NUIHN0YXR1cyAqLworKwlib29sIGhhdmVfdGVtcF9taW47CQkvKiBoYXZlIG1p
biB0ZW1wICovCisrCWJvb2wgaGF2ZV90ZW1wX21heDsJCS8qIGhhdmUgbWF4IHRlbXAgKi8KKysJ
Ym9vbCBoYXZlX3RlbXBfbGNyaXQ7CQkvKiBoYXZlIGxvd2VyIGNyaXRpY2FsIGxpbWl0ICovCisr
CWJvb2wgaGF2ZV90ZW1wX2NyaXQ7CQkvKiBoYXZlIGNyaXRpY2FsIGxpbWl0ICovCisrCWludCB0
ZW1wX21pbjsJCQkvKiBtaW4gdGVtcCAqLworKwlpbnQgdGVtcF9tYXg7CQkJLyogbWF4IHRlbXAg
Ki8KKysJaW50IHRlbXBfbGNyaXQ7CQkJLyogbG93ZXIgY3JpdGljYWwgbGltaXQgKi8KKysJaW50
IHRlbXBfY3JpdDsJCQkvKiBjcml0aWNhbCBsaW1pdCAqLworK307CisrCisrc3RhdGljIExJU1Rf
SEVBRChkcml2ZXRlbXBfZGV2bGlzdCk7CisrCisrI2RlZmluZSBBVEFfTUFYX1NNQVJUX0FUVFJT
CTMwCisrI2RlZmluZSBTTUFSVF9URU1QX1BST1BfMTkwCTE5MAorKyNkZWZpbmUgU01BUlRfVEVN
UF9QUk9QXzE5NAkxOTQKKysKKysjZGVmaW5lIFNDVF9TVEFUVVNfUkVRX0FERFIJMHhlMAorKyNk
ZWZpbmUgIFNDVF9TVEFUVVNfVkVSU0lPTl9MT1cJCTAJLyogbG9nIGJ5dGUgb2Zmc2V0cyAqLwor
KyNkZWZpbmUgIFNDVF9TVEFUVVNfVkVSU0lPTl9ISUdICTEKKysjZGVmaW5lICBTQ1RfU1RBVFVT
X1RFTVAJCTIwMAorKyNkZWZpbmUgIFNDVF9TVEFUVVNfVEVNUF9MT1dFU1QJCTIwMQorKyNkZWZp
bmUgIFNDVF9TVEFUVVNfVEVNUF9ISUdIRVNUCTIwMgorKyNkZWZpbmUgU0NUX1JFQURfTE9HX0FE
RFIJMHhlMQorKyNkZWZpbmUgIFNNQVJUX1JFQURfTE9HCQkJMHhkNQorKyNkZWZpbmUgIFNNQVJU
X1dSSVRFX0xPRwkJMHhkNgorKworKyNkZWZpbmUgSU5WQUxJRF9URU1QCQkweDgwCisrCisrI2Rl
ZmluZSB0ZW1wX2lzX3ZhbGlkKHRlbXApCSgodGVtcCkgIT0gSU5WQUxJRF9URU1QKQorKyNkZWZp
bmUgdGVtcF9mcm9tX3NjdCh0ZW1wKQkoKChzOCkodGVtcCkpICogMTAwMCkKKysKKytzdGF0aWMg
aW5saW5lIGJvb2wgYXRhX2lkX3NtYXJ0X3N1cHBvcnRlZCh1MTYgKmlkKQorK3sKKysJcmV0dXJu
IGlkW0FUQV9JRF9DT01NQU5EX1NFVF8xXSAmIEJJVCgwKTsKKyt9CisrCisrc3RhdGljIGlubGlu
ZSBib29sIGF0YV9pZF9zbWFydF9lbmFibGVkKHUxNiAqaWQpCisreworKwlyZXR1cm4gaWRbQVRB
X0lEX0NGU19FTkFCTEVfMV0gJiBCSVQoMCk7CisrfQorKworK3N0YXRpYyBpbnQgZHJpdmV0ZW1w
X3Njc2lfY29tbWFuZChzdHJ1Y3QgZHJpdmV0ZW1wX2RhdGEgKnN0LAorKwkJCQkgdTggYXRhX2Nv
bW1hbmQsIHU4IGZlYXR1cmUsCisrCQkJCSB1OCBsYmFfbG93LCB1OCBsYmFfbWlkLCB1OCBsYmFf
aGlnaCkKKyt7CisrCXU4IHNjc2lfY21kW01BWF9DT01NQU5EX1NJWkVdOworKwlpbnQgZGF0YV9k
aXI7CisrCisrCW1lbXNldChzY3NpX2NtZCwgMCwgc2l6ZW9mKHNjc2lfY21kKSk7CisrCXNjc2lf
Y21kWzBdID0gQVRBXzE2OworKwlpZiAoYXRhX2NvbW1hbmQgPT0gQVRBX0NNRF9TTUFSVCAmJiBm
ZWF0dXJlID09IFNNQVJUX1dSSVRFX0xPRykgeworKwkJc2NzaV9jbWRbMV0gPSAoNSA8PCAxKTsJ
LyogUElPIERhdGEtb3V0ICovCisrCQkvKgorKwkJICogTm8gb2ZmLmxpbmUgb3IgY2MsIHdyaXRl
IHRvIGRldiwgYmxvY2sgY291bnQgaW4gc2VjdG9yIGNvdW50CisrCQkgKiBmaWVsZC4KKysJCSAq
LworKwkJc2NzaV9jbWRbMl0gPSAweDA2OworKwkJZGF0YV9kaXIgPSBETUFfVE9fREVWSUNFOwor
Kwl9IGVsc2UgeworKwkJc2NzaV9jbWRbMV0gPSAoNCA8PCAxKTsJLyogUElPIERhdGEtaW4gKi8K
KysJCS8qCisrCQkgKiBObyBvZmYubGluZSBvciBjYywgcmVhZCBmcm9tIGRldiwgYmxvY2sgY291
bnQgaW4gc2VjdG9yIGNvdW50CisrCQkgKiBmaWVsZC4KKysJCSAqLworKwkJc2NzaV9jbWRbMl0g
PSAweDBlOworKwkJZGF0YV9kaXIgPSBETUFfRlJPTV9ERVZJQ0U7CisrCX0KKysJc2NzaV9jbWRb
NF0gPSBmZWF0dXJlOworKwlzY3NpX2NtZFs2XSA9IDE7CS8qIDEgc2VjdG9yICovCisrCXNjc2lf
Y21kWzhdID0gbGJhX2xvdzsKKysJc2NzaV9jbWRbMTBdID0gbGJhX21pZDsKKysJc2NzaV9jbWRb
MTJdID0gbGJhX2hpZ2g7CisrCXNjc2lfY21kWzE0XSA9IGF0YV9jb21tYW5kOworKworKwlyZXR1
cm4gc2NzaV9leGVjdXRlX3JlcShzdC0+c2Rldiwgc2NzaV9jbWQsIGRhdGFfZGlyLAorKwkJCQlz
dC0+c21hcnRkYXRhLCBBVEFfU0VDVF9TSVpFLCBOVUxMLCBIWiwgNSwKKysJCQkJTlVMTCk7Cisr
fQorKworK3N0YXRpYyBpbnQgZHJpdmV0ZW1wX2F0YV9jb21tYW5kKHN0cnVjdCBkcml2ZXRlbXBf
ZGF0YSAqc3QsIHU4IGZlYXR1cmUsCisrCQkJCSB1OCBzZWxlY3QpCisreworKwlyZXR1cm4gZHJp
dmV0ZW1wX3Njc2lfY29tbWFuZChzdCwgQVRBX0NNRF9TTUFSVCwgZmVhdHVyZSwgc2VsZWN0LAor
KwkJCQkgICAgIEFUQV9TTUFSVF9MQkFNX1BBU1MsIEFUQV9TTUFSVF9MQkFIX1BBU1MpOworK30K
KysKKytzdGF0aWMgaW50IGRyaXZldGVtcF9nZXRfc21hcnR0ZW1wKHN0cnVjdCBkcml2ZXRlbXBf
ZGF0YSAqc3QsIHUzMiBhdHRyLAorKwkJCQkgIGxvbmcgKnRlbXApCisreworKwl1OCAqYnVmID0g
c3QtPnNtYXJ0ZGF0YTsKKysJYm9vbCBoYXZlX3RlbXAgPSBmYWxzZTsKKysJdTggdGVtcF9yYXc7
CisrCXU4IGNzdW07CisrCWludCBlcnI7CisrCWludCBpOworKworKwllcnIgPSBkcml2ZXRlbXBf
YXRhX2NvbW1hbmQoc3QsIEFUQV9TTUFSVF9SRUFEX1ZBTFVFUywgMCk7CisrCWlmIChlcnIpCisr
CQlyZXR1cm4gZXJyOworKworKwkvKiBDaGVja3N1bSB0aGUgcmVhZCB2YWx1ZSB0YWJsZSAqLwor
Kwljc3VtID0gMDsKKysJZm9yIChpID0gMDsgaSA8IEFUQV9TRUNUX1NJWkU7IGkrKykKKysJCWNz
dW0gKz0gYnVmW2ldOworKwlpZiAoY3N1bSkgeworKwkJZGV2X2RiZygmc3QtPnNkZXYtPnNkZXZf
Z2VuZGV2LAorKwkJCSJjaGVja3N1bSBlcnJvciByZWFkaW5nIFNNQVJUIHZhbHVlc1xuIik7Cisr
CQlyZXR1cm4gLUVJTzsKKysJfQorKworKwlmb3IgKGkgPSAwOyBpIDwgQVRBX01BWF9TTUFSVF9B
VFRSUzsgaSsrKSB7CisrCQl1OCAqYXR0ciA9IGJ1ZiArIGkgKiAxMjsKKysJCWludCBpZCA9IGF0
dHJbMl07CisrCisrCQlpZiAoIWlkKQorKwkJCWNvbnRpbnVlOworKworKwkJaWYgKGlkID09IFNN
QVJUX1RFTVBfUFJPUF8xOTApIHsKKysJCQl0ZW1wX3JhdyA9IGF0dHJbN107CisrCQkJaGF2ZV90
ZW1wID0gdHJ1ZTsKKysJCX0KKysJCWlmIChpZCA9PSBTTUFSVF9URU1QX1BST1BfMTk0KSB7Cisr
CQkJdGVtcF9yYXcgPSBhdHRyWzddOworKwkJCWhhdmVfdGVtcCA9IHRydWU7CisrCQkJYnJlYWs7
CisrCQl9CisrCX0KKysKKysJaWYgKGhhdmVfdGVtcCkgeworKwkJKnRlbXAgPSB0ZW1wX3JhdyAq
IDEwMDA7CisrCQlyZXR1cm4gMDsKKysJfQorKworKwlyZXR1cm4gLUVOWElPOworK30KKysKKytz
dGF0aWMgaW50IGRyaXZldGVtcF9nZXRfc2N0dGVtcChzdHJ1Y3QgZHJpdmV0ZW1wX2RhdGEgKnN0
LCB1MzIgYXR0ciwgbG9uZyAqdmFsKQorK3sKKysJdTggKmJ1ZiA9IHN0LT5zbWFydGRhdGE7Cisr
CWludCBlcnI7CisrCisrCWVyciA9IGRyaXZldGVtcF9hdGFfY29tbWFuZChzdCwgU01BUlRfUkVB
RF9MT0csIFNDVF9TVEFUVVNfUkVRX0FERFIpOworKwlpZiAoZXJyKQorKwkJcmV0dXJuIGVycjsK
KysJc3dpdGNoIChhdHRyKSB7CisrCWNhc2UgaHdtb25fdGVtcF9pbnB1dDoKKysJCSp2YWwgPSB0
ZW1wX2Zyb21fc2N0KGJ1ZltTQ1RfU1RBVFVTX1RFTVBdKTsKKysJCWJyZWFrOworKwljYXNlIGh3
bW9uX3RlbXBfbG93ZXN0OgorKwkJKnZhbCA9IHRlbXBfZnJvbV9zY3QoYnVmW1NDVF9TVEFUVVNf
VEVNUF9MT1dFU1RdKTsKKysJCWJyZWFrOworKwljYXNlIGh3bW9uX3RlbXBfaGlnaGVzdDoKKysJ
CSp2YWwgPSB0ZW1wX2Zyb21fc2N0KGJ1ZltTQ1RfU1RBVFVTX1RFTVBfSElHSEVTVF0pOworKwkJ
YnJlYWs7CisrCWRlZmF1bHQ6CisrCQllcnIgPSAtRUlOVkFMOworKwkJYnJlYWs7CisrCX0KKysJ
cmV0dXJuIGVycjsKKyt9CisrCisrc3RhdGljIGludCBkcml2ZXRlbXBfaWRlbnRpZnlfc2F0YShz
dHJ1Y3QgZHJpdmV0ZW1wX2RhdGEgKnN0KQorK3sKKysJc3RydWN0IHNjc2lfZGV2aWNlICpzZGV2
ID0gc3QtPnNkZXY7CisrCXU4ICpidWYgPSBzdC0+c21hcnRkYXRhOworKwlzdHJ1Y3Qgc2NzaV92
cGQgKnZwZDsKKysJYm9vbCBpc19hdGEsIGlzX3NhdGE7CisrCWJvb2wgaGF2ZV9zY3RfZGF0YV90
YWJsZTsKKysJYm9vbCBoYXZlX3NjdF90ZW1wOworKwlib29sIGhhdmVfc21hcnQ7CisrCWJvb2wg
aGF2ZV9zY3Q7CisrCXUxNiAqYXRhX2lkOworKwl1MTYgdmVyc2lvbjsKKysJbG9uZyB0ZW1wOwor
KwlpbnQgZXJyOworKworKwkvKiBTQ1NJLUFUQSBUcmFuc2xhdGlvbiBwcmVzZW50PyAqLworKwly
Y3VfcmVhZF9sb2NrKCk7CisrCXZwZCA9IHJjdV9kZXJlZmVyZW5jZShzZGV2LT52cGRfcGc4OSk7
CisrCisrCS8qCisrCSAqIFZlcmlmeSB0aGF0IEFUQSBJREVOVElGWSBERVZJQ0UgZGF0YSBpcyBp
bmNsdWRlZCBpbiBBVEEgSW5mb3JtYXRpb24KKysJICogVlBEIGFuZCB0aGF0IHRoZSBkcml2ZSBp
bXBsZW1lbnRzIHRoZSBTQVRBIHByb3RvY29sLgorKwkgKi8KKysJaWYgKCF2cGQgfHwgdnBkLT5s
ZW4gPCA1NzIgfHwgdnBkLT5kYXRhWzU2XSAhPSBBVEFfQ01EX0lEX0FUQSB8fAorKwkgICAgdnBk
LT5kYXRhWzM2XSAhPSAweDM0KSB7CisrCQlyY3VfcmVhZF91bmxvY2soKTsKKysJCXJldHVybiAt
RU5PREVWOworKwl9CisrCWF0YV9pZCA9ICh1MTYgKikmdnBkLT5kYXRhWzYwXTsKKysJaXNfYXRh
ID0gYXRhX2lkX2lzX2F0YShhdGFfaWQpOworKwlpc19zYXRhID0gYXRhX2lkX2lzX3NhdGEoYXRh
X2lkKTsKKysJaGF2ZV9zY3QgPSBhdGFfaWRfc2N0X3N1cHBvcnRlZChhdGFfaWQpOworKwloYXZl
X3NjdF9kYXRhX3RhYmxlID0gYXRhX2lkX3NjdF9kYXRhX3RhYmxlcyhhdGFfaWQpOworKwloYXZl
X3NtYXJ0ID0gYXRhX2lkX3NtYXJ0X3N1cHBvcnRlZChhdGFfaWQpICYmCisrCQkJCWF0YV9pZF9z
bWFydF9lbmFibGVkKGF0YV9pZCk7CisrCisrCXJjdV9yZWFkX3VubG9jaygpOworKworKwkvKiBi
YWlsIG91dCBpZiB0aGlzIGlzIG5vdCBhIFNBVEEgZGV2aWNlICovCisrCWlmICghaXNfYXRhIHx8
ICFpc19zYXRhKQorKwkJcmV0dXJuIC1FTk9ERVY7CisrCWlmICghaGF2ZV9zY3QpCisrCQlnb3Rv
IHNraXBfc2N0OworKworKwllcnIgPSBkcml2ZXRlbXBfYXRhX2NvbW1hbmQoc3QsIFNNQVJUX1JF
QURfTE9HLCBTQ1RfU1RBVFVTX1JFUV9BRERSKTsKKysJaWYgKGVycikKKysJCWdvdG8gc2tpcF9z
Y3Q7CisrCisrCXZlcnNpb24gPSAoYnVmW1NDVF9TVEFUVVNfVkVSU0lPTl9ISUdIXSA8PCA4KSB8
CisrCQkgIGJ1ZltTQ1RfU1RBVFVTX1ZFUlNJT05fTE9XXTsKKysJaWYgKHZlcnNpb24gIT0gMiAm
JiB2ZXJzaW9uICE9IDMpCisrCQlnb3RvIHNraXBfc2N0OworKworKwloYXZlX3NjdF90ZW1wID0g
dGVtcF9pc192YWxpZChidWZbU0NUX1NUQVRVU19URU1QXSk7CisrCWlmICghaGF2ZV9zY3RfdGVt
cCkKKysJCWdvdG8gc2tpcF9zY3Q7CisrCisrCXN0LT5oYXZlX3RlbXBfbG93ZXN0ID0gdGVtcF9p
c192YWxpZChidWZbU0NUX1NUQVRVU19URU1QX0xPV0VTVF0pOworKwlzdC0+aGF2ZV90ZW1wX2hp
Z2hlc3QgPSB0ZW1wX2lzX3ZhbGlkKGJ1ZltTQ1RfU1RBVFVTX1RFTVBfSElHSEVTVF0pOworKwor
KwlpZiAoIWhhdmVfc2N0X2RhdGFfdGFibGUpCisrCQlnb3RvIHNraXBfc2N0OworKworKwkvKiBS
ZXF1ZXN0IGFuZCByZWFkIHRlbXBlcmF0dXJlIGhpc3RvcnkgdGFibGUgKi8KKysJbWVtc2V0KGJ1
ZiwgJ1wwJywgc2l6ZW9mKHN0LT5zbWFydGRhdGEpKTsKKysJYnVmWzBdID0gNTsJLyogZGF0YSB0
YWJsZSBjb21tYW5kICovCisrCWJ1ZlsyXSA9IDE7CS8qIHJlYWQgdGFibGUgKi8KKysJYnVmWzRd
ID0gMjsJLyogdGVtcGVyYXR1cmUgaGlzdG9yeSB0YWJsZSAqLworKworKwllcnIgPSBkcml2ZXRl
bXBfYXRhX2NvbW1hbmQoc3QsIFNNQVJUX1dSSVRFX0xPRywgU0NUX1NUQVRVU19SRVFfQUREUik7
CisrCWlmIChlcnIpCisrCQlnb3RvIHNraXBfc2N0X2RhdGE7CisrCisrCWVyciA9IGRyaXZldGVt
cF9hdGFfY29tbWFuZChzdCwgU01BUlRfUkVBRF9MT0csIFNDVF9SRUFEX0xPR19BRERSKTsKKysJ
aWYgKGVycikKKysJCWdvdG8gc2tpcF9zY3RfZGF0YTsKKysKKysJLyoKKysJICogVGVtcGVyYXR1
cmUgbGltaXRzIHBlciBBVCBBdHRhY2htZW50IDggLQorKwkgKiBBVEEvQVRBUEkgQ29tbWFuZCBT
ZXQgKEFUQTgtQUNTKQorKwkgKi8KKysJc3QtPmhhdmVfdGVtcF9tYXggPSB0ZW1wX2lzX3ZhbGlk
KGJ1Zls2XSk7CisrCXN0LT5oYXZlX3RlbXBfY3JpdCA9IHRlbXBfaXNfdmFsaWQoYnVmWzddKTsK
KysJc3QtPmhhdmVfdGVtcF9taW4gPSB0ZW1wX2lzX3ZhbGlkKGJ1Zls4XSk7CisrCXN0LT5oYXZl
X3RlbXBfbGNyaXQgPSB0ZW1wX2lzX3ZhbGlkKGJ1Zls5XSk7CisrCisrCXN0LT50ZW1wX21heCA9
IHRlbXBfZnJvbV9zY3QoYnVmWzZdKTsKKysJc3QtPnRlbXBfY3JpdCA9IHRlbXBfZnJvbV9zY3Qo
YnVmWzddKTsKKysJc3QtPnRlbXBfbWluID0gdGVtcF9mcm9tX3NjdChidWZbOF0pOworKwlzdC0+
dGVtcF9sY3JpdCA9IHRlbXBfZnJvbV9zY3QoYnVmWzldKTsKKysKKytza2lwX3NjdF9kYXRhOgor
KwlpZiAoaGF2ZV9zY3RfdGVtcCkgeworKwkJc3QtPmdldF90ZW1wID0gZHJpdmV0ZW1wX2dldF9z
Y3R0ZW1wOworKwkJcmV0dXJuIDA7CisrCX0KKytza2lwX3NjdDoKKysJaWYgKCFoYXZlX3NtYXJ0
KQorKwkJcmV0dXJuIC1FTk9ERVY7CisrCXN0LT5nZXRfdGVtcCA9IGRyaXZldGVtcF9nZXRfc21h
cnR0ZW1wOworKwlyZXR1cm4gZHJpdmV0ZW1wX2dldF9zbWFydHRlbXAoc3QsIGh3bW9uX3RlbXBf
aW5wdXQsICZ0ZW1wKTsKKyt9CisrCisrc3RhdGljIGludCBkcml2ZXRlbXBfaWRlbnRpZnkoc3Ry
dWN0IGRyaXZldGVtcF9kYXRhICpzdCkKKyt7CisrCXN0cnVjdCBzY3NpX2RldmljZSAqc2RldiA9
IHN0LT5zZGV2OworKworKwkvKiBCYWlsIG91dCBpbW1lZGlhdGVseSBpZiB0aGVyZSBpcyBubyBp
bnF1aXJ5IGRhdGEgKi8KKysJaWYgKCFzZGV2LT5pbnF1aXJ5IHx8IHNkZXYtPmlucXVpcnlfbGVu
IDwgMTYpCisrCQlyZXR1cm4gLUVOT0RFVjsKKysKKysJLyogRGlzayBkZXZpY2U/ICovCisrCWlm
IChzZGV2LT50eXBlICE9IFRZUEVfRElTSyAmJiBzZGV2LT50eXBlICE9IFRZUEVfWkJDKQorKwkJ
cmV0dXJuIC1FTk9ERVY7CisrCisrCXJldHVybiBkcml2ZXRlbXBfaWRlbnRpZnlfc2F0YShzdCk7
CisrfQorKworK3N0YXRpYyBpbnQgZHJpdmV0ZW1wX3JlYWQoc3RydWN0IGRldmljZSAqZGV2LCBl
bnVtIGh3bW9uX3NlbnNvcl90eXBlcyB0eXBlLAorKwkJCSB1MzIgYXR0ciwgaW50IGNoYW5uZWws
IGxvbmcgKnZhbCkKKyt7CisrCXN0cnVjdCBkcml2ZXRlbXBfZGF0YSAqc3QgPSBkZXZfZ2V0X2Ry
dmRhdGEoZGV2KTsKKysJaW50IGVyciA9IDA7CisrCisrCWlmICh0eXBlICE9IGh3bW9uX3RlbXAp
CisrCQlyZXR1cm4gLUVJTlZBTDsKKysKKysJc3dpdGNoIChhdHRyKSB7CisrCWNhc2UgaHdtb25f
dGVtcF9pbnB1dDoKKysJY2FzZSBod21vbl90ZW1wX2xvd2VzdDoKKysJY2FzZSBod21vbl90ZW1w
X2hpZ2hlc3Q6CisrCQltdXRleF9sb2NrKCZzdC0+bG9jayk7CisrCQllcnIgPSBzdC0+Z2V0X3Rl
bXAoc3QsIGF0dHIsIHZhbCk7CisrCQltdXRleF91bmxvY2soJnN0LT5sb2NrKTsKKysJCWJyZWFr
OworKwljYXNlIGh3bW9uX3RlbXBfbGNyaXQ6CisrCQkqdmFsID0gc3QtPnRlbXBfbGNyaXQ7Cisr
CQlicmVhazsKKysJY2FzZSBod21vbl90ZW1wX21pbjoKKysJCSp2YWwgPSBzdC0+dGVtcF9taW47
CisrCQlicmVhazsKKysJY2FzZSBod21vbl90ZW1wX21heDoKKysJCSp2YWwgPSBzdC0+dGVtcF9t
YXg7CisrCQlicmVhazsKKysJY2FzZSBod21vbl90ZW1wX2NyaXQ6CisrCQkqdmFsID0gc3QtPnRl
bXBfY3JpdDsKKysJCWJyZWFrOworKwlkZWZhdWx0OgorKwkJZXJyID0gLUVJTlZBTDsKKysJCWJy
ZWFrOworKwl9CisrCXJldHVybiBlcnI7CisrfQorKworK3N0YXRpYyB1bW9kZV90IGRyaXZldGVt
cF9pc192aXNpYmxlKGNvbnN0IHZvaWQgKmRhdGEsCisrCQkJCSAgIGVudW0gaHdtb25fc2Vuc29y
X3R5cGVzIHR5cGUsCisrCQkJCSAgIHUzMiBhdHRyLCBpbnQgY2hhbm5lbCkKKyt7CisrCWNvbnN0
IHN0cnVjdCBkcml2ZXRlbXBfZGF0YSAqc3QgPSBkYXRhOworKworKwlzd2l0Y2ggKHR5cGUpIHsK
KysJY2FzZSBod21vbl90ZW1wOgorKwkJc3dpdGNoIChhdHRyKSB7CisrCQljYXNlIGh3bW9uX3Rl
bXBfaW5wdXQ6CisrCQkJcmV0dXJuIDA0NDQ7CisrCQljYXNlIGh3bW9uX3RlbXBfbG93ZXN0Ogor
KwkJCWlmIChzdC0+aGF2ZV90ZW1wX2xvd2VzdCkKKysJCQkJcmV0dXJuIDA0NDQ7CisrCQkJYnJl
YWs7CisrCQljYXNlIGh3bW9uX3RlbXBfaGlnaGVzdDoKKysJCQlpZiAoc3QtPmhhdmVfdGVtcF9o
aWdoZXN0KQorKwkJCQlyZXR1cm4gMDQ0NDsKKysJCQlicmVhazsKKysJCWNhc2UgaHdtb25fdGVt
cF9taW46CisrCQkJaWYgKHN0LT5oYXZlX3RlbXBfbWluKQorKwkJCQlyZXR1cm4gMDQ0NDsKKysJ
CQlicmVhazsKKysJCWNhc2UgaHdtb25fdGVtcF9tYXg6CisrCQkJaWYgKHN0LT5oYXZlX3RlbXBf
bWF4KQorKwkJCQlyZXR1cm4gMDQ0NDsKKysJCQlicmVhazsKKysJCWNhc2UgaHdtb25fdGVtcF9s
Y3JpdDoKKysJCQlpZiAoc3QtPmhhdmVfdGVtcF9sY3JpdCkKKysJCQkJcmV0dXJuIDA0NDQ7Cisr
CQkJYnJlYWs7CisrCQljYXNlIGh3bW9uX3RlbXBfY3JpdDoKKysJCQlpZiAoc3QtPmhhdmVfdGVt
cF9jcml0KQorKwkJCQlyZXR1cm4gMDQ0NDsKKysJCQlicmVhazsKKysJCWRlZmF1bHQ6CisrCQkJ
YnJlYWs7CisrCQl9CisrCQlicmVhazsKKysJZGVmYXVsdDoKKysJCWJyZWFrOworKwl9CisrCXJl
dHVybiAwOworK30KKysKKytzdGF0aWMgY29uc3Qgc3RydWN0IGh3bW9uX2NoYW5uZWxfaW5mbyAq
ZHJpdmV0ZW1wX2luZm9bXSA9IHsKKysJSFdNT05fQ0hBTk5FTF9JTkZPKGNoaXAsCisrCQkJICAg
SFdNT05fQ19SRUdJU1RFUl9UWiksCisrCUhXTU9OX0NIQU5ORUxfSU5GTyh0ZW1wLCBIV01PTl9U
X0lOUFVUIHwKKysJCQkgICBIV01PTl9UX0xPV0VTVCB8IEhXTU9OX1RfSElHSEVTVCB8CisrCQkJ
ICAgSFdNT05fVF9NSU4gfCBIV01PTl9UX01BWCB8CisrCQkJICAgSFdNT05fVF9MQ1JJVCB8IEhX
TU9OX1RfQ1JJVCksCisrCU5VTEwKKyt9OworKworK3N0YXRpYyBjb25zdCBzdHJ1Y3QgaHdtb25f
b3BzIGRyaXZldGVtcF9vcHMgPSB7CisrCS5pc192aXNpYmxlID0gZHJpdmV0ZW1wX2lzX3Zpc2li
bGUsCisrCS5yZWFkID0gZHJpdmV0ZW1wX3JlYWQsCisrfTsKKysKKytzdGF0aWMgY29uc3Qgc3Ry
dWN0IGh3bW9uX2NoaXBfaW5mbyBkcml2ZXRlbXBfY2hpcF9pbmZvID0geworKwkub3BzID0gJmRy
aXZldGVtcF9vcHMsCisrCS5pbmZvID0gZHJpdmV0ZW1wX2luZm8sCisrfTsKKysKKysvKgorKyAq
IFRoZSBkZXZpY2UgYXJndW1lbnQgcG9pbnRzIHRvIHNkZXYtPnNkZXZfZGV2LiBJdHMgcGFyZW50
IGlzCisrICogc2Rldi0+c2Rldl9nZW5kZXYsIHdoaWNoIHdlIGNhbiB1c2UgdG8gZ2V0IHRoZSBz
Y3NpX2RldmljZSBwb2ludGVyLgorKyAqLworK3N0YXRpYyBpbnQgZHJpdmV0ZW1wX2FkZChzdHJ1
Y3QgZGV2aWNlICpkZXYsIHN0cnVjdCBjbGFzc19pbnRlcmZhY2UgKmludGYpCisreworKwlzdHJ1
Y3Qgc2NzaV9kZXZpY2UgKnNkZXYgPSB0b19zY3NpX2RldmljZShkZXYtPnBhcmVudCk7CisrCXN0
cnVjdCBkcml2ZXRlbXBfZGF0YSAqc3Q7CisrCWludCBlcnI7CisrCisrCXN0ID0ga3phbGxvYyhz
aXplb2YoKnN0KSwgR0ZQX0tFUk5FTCk7CisrCWlmICghc3QpCisrCQlyZXR1cm4gLUVOT01FTTsK
KysKKysJc3QtPnNkZXYgPSBzZGV2OworKwlzdC0+ZGV2ID0gZGV2OworKwltdXRleF9pbml0KCZz
dC0+bG9jayk7CisrCisrCWlmIChkcml2ZXRlbXBfaWRlbnRpZnkoc3QpKSB7CisrCQllcnIgPSAt
RU5PREVWOworKwkJZ290byBhYm9ydDsKKysJfQorKworKwlzdC0+aHdkZXYgPSBod21vbl9kZXZp
Y2VfcmVnaXN0ZXJfd2l0aF9pbmZvKGRldi0+cGFyZW50LCAiZHJpdmV0ZW1wIiwKKysJCQkJCQkg
ICAgc3QsICZkcml2ZXRlbXBfY2hpcF9pbmZvLAorKwkJCQkJCSAgICBOVUxMKTsKKysJaWYgKElT
X0VSUihzdC0+aHdkZXYpKSB7CisrCQllcnIgPSBQVFJfRVJSKHN0LT5od2Rldik7CisrCQlnb3Rv
IGFib3J0OworKwl9CisrCisrCWxpc3RfYWRkKCZzdC0+bGlzdCwgJmRyaXZldGVtcF9kZXZsaXN0
KTsKKysJcmV0dXJuIDA7CisrCisrYWJvcnQ6CisrCWtmcmVlKHN0KTsKKysJcmV0dXJuIGVycjsK
Kyt9CisrCisrc3RhdGljIHZvaWQgZHJpdmV0ZW1wX3JlbW92ZShzdHJ1Y3QgZGV2aWNlICpkZXYs
IHN0cnVjdCBjbGFzc19pbnRlcmZhY2UgKmludGYpCisreworKwlzdHJ1Y3QgZHJpdmV0ZW1wX2Rh
dGEgKnN0LCAqdG1wOworKworKwlsaXN0X2Zvcl9lYWNoX2VudHJ5X3NhZmUoc3QsIHRtcCwgJmRy
aXZldGVtcF9kZXZsaXN0LCBsaXN0KSB7CisrCQlpZiAoc3QtPmRldiA9PSBkZXYpIHsKKysJCQls
aXN0X2RlbCgmc3QtPmxpc3QpOworKwkJCWh3bW9uX2RldmljZV91bnJlZ2lzdGVyKHN0LT5od2Rl
dik7CisrCQkJa2ZyZWUoc3QpOworKwkJCWJyZWFrOworKwkJfQorKwl9CisrfQorKworK3N0YXRp
YyBzdHJ1Y3QgY2xhc3NfaW50ZXJmYWNlIGRyaXZldGVtcF9pbnRlcmZhY2UgPSB7CisrCS5hZGRf
ZGV2ID0gZHJpdmV0ZW1wX2FkZCwKKysJLnJlbW92ZV9kZXYgPSBkcml2ZXRlbXBfcmVtb3ZlLAor
K307CisrCisrc3RhdGljIGludCBfX2luaXQgZHJpdmV0ZW1wX2luaXQodm9pZCkKKyt7CisrCXJl
dHVybiBzY3NpX3JlZ2lzdGVyX2ludGVyZmFjZSgmZHJpdmV0ZW1wX2ludGVyZmFjZSk7CisrfQor
KworK3N0YXRpYyB2b2lkIF9fZXhpdCBkcml2ZXRlbXBfZXhpdCh2b2lkKQorK3sKKysJc2NzaV91
bnJlZ2lzdGVyX2ludGVyZmFjZSgmZHJpdmV0ZW1wX2ludGVyZmFjZSk7CisrfQorKworK21vZHVs
ZV9pbml0KGRyaXZldGVtcF9pbml0KTsKKyttb2R1bGVfZXhpdChkcml2ZXRlbXBfZXhpdCk7Cisr
CisrTU9EVUxFX0FVVEhPUigiR3VlbnRlciBSb2VjayA8bGludXNAcm9lY2stdXMubmV0PiIpOwor
K01PRFVMRV9ERVNDUklQVElPTigiSGFyZCBkcml2ZSB0ZW1wZXJhdHVyZSBtb25pdG9yIik7Cisr
TU9EVUxFX0xJQ0VOU0UoIkdQTCIpOwotLSAKMi4yMS4xCgoKX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX18Kb3BlbndydC1kZXZlbCBtYWlsaW5nIGxpc3QKb3Bl
bndydC1kZXZlbEBsaXN0cy5vcGVud3J0Lm9yZwpodHRwczovL2xpc3RzLm9wZW53cnQub3JnL21h
aWxtYW4vbGlzdGluZm8vb3BlbndydC1kZXZlbAo=
