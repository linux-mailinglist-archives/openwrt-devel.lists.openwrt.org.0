Return-Path: <openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org>
X-Original-To: lists+openwrt-devel@lfdr.de
Delivered-To: lists+openwrt-devel@lfdr.de
Received: from bombadil.infradead.org (bombadil.infradead.org [IPv6:2607:7c80:54:e::133])
	by mail.lfdr.de (Postfix) with ESMTPS id ABCDB3D550
	for <lists+openwrt-devel@lfdr.de>; Tue, 11 Jun 2019 20:15:29 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed;
	d=lists.infradead.org; s=bombadil.20170209; h=Sender:
	Content-Transfer-Encoding:Content-Type:Cc:List-Subscribe:List-Help:List-Post:
	List-Archive:List-Unsubscribe:List-Id:Subject:MIME-Version:References:
	In-Reply-To:Message-Id:Date:To:From:Reply-To:Content-ID:Content-Description:
	Resent-Date:Resent-From:Resent-Sender:Resent-To:Resent-Cc:Resent-Message-ID:
	List-Owner; bh=ZqAteh3gG3h6j+H2R6jiOmvwQogdWqJSTLHACAx1EyY=; b=TVAFpY+kehLvv9
	Hd084MfhGR/QpiK7pb/6Xpfwxgbx3OawwFBmfxhNjK2LbyGV9R/6AVCQUtM7/Dq9qUoi885aa6VAK
	hPHG+1sz6UHWFIdKXYCv/NW9hw4xrEiz9B9yXao9D/sMxlEfZ3MWF+bvbbbySOoJdpMkhx924MhdR
	ZHJ9+5WdcHgxaSmIbTjaxvM1w1Rq+GE7Awv84/oB+hy2QevGMdG4221ocj/ZUGJqvOGKV1wLWbu5z
	+Eouv3GIswCyL2ANxq+iu6iKgrdBPVPiazRQ9enthIaKEL8zyQEHosUO2e1tL3VjCsmKk1awqnMvN
	nUxTmD1pCJLZT7PL2TbQ==;
Received: from localhost ([127.0.0.1] helo=bombadil.infradead.org)
	by bombadil.infradead.org with esmtp (Exim 4.92 #3 (Red Hat Linux))
	id 1halIq-0001y4-Do; Tue, 11 Jun 2019 18:15:24 +0000
Received: from mx.allycomm.com ([138.68.30.55])
 by bombadil.infradead.org with esmtps (Exim 4.92 #3 (Red Hat Linux))
 id 1halIg-0001So-5w
 for openwrt-devel@lists.openwrt.org; Tue, 11 Jun 2019 18:15:16 +0000
Received: from allycomm.com (unknown [IPv6:2601:647:5401:2210::49])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by mx.allycomm.com (Postfix) with ESMTPSA id 5C29A242FE;
 Tue, 11 Jun 2019 11:15:06 -0700 (PDT)
From: Jeff Kletsky <lede@allycomm.com>
To: openwrt-devel@lists.openwrt.org
Date: Tue, 11 Jun 2019 11:14:37 -0700
Message-Id: <20190611181438.8620-2-lede@allycomm.com>
X-Mailer: git-send-email 2.20.1
In-Reply-To: <20190611181438.8620-1-lede@allycomm.com>
References: <20190611181438.8620-1-lede@allycomm.com>
MIME-Version: 1.0
X-CRM114-Version: 20100106-BlameMichelson ( TRE 0.8.0 (BSD) ) MR-646709E3 
X-CRM114-CacheID: sfid-20190611_111514_235414_1133C94B 
X-CRM114-Status: GOOD (  21.16  )
X-Spam-Score: 0.0 (/)
X-Spam-Report: SpamAssassin version 3.4.2 on bombadil.infradead.org summary:
 Content analysis details:   (0.0 points)
 pts rule name              description
 ---- ---------------------- --------------------------------------------------
 -0.0 RCVD_IN_DNSWL_NONE     RBL: Sender listed at https://www.dnswl.org/,
 no trust [138.68.30.55 listed in list.dnswl.org]
 0.0 SPF_HELO_NONE          SPF: HELO does not publish an SPF Record
 0.0 SPF_NONE               SPF: sender does not publish an SPF Record
Subject: [OpenWrt-Devel] [PATCH 1/2] kernel: mtd: spinand: backport-4.19:
 Chip support through 5.1
X-BeenThere: openwrt-devel@lists.openwrt.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: <openwrt-devel.lists.openwrt.org>
List-Unsubscribe: <http://lists.infradead.org/mailman/options/openwrt-devel>, 
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=unsubscribe>
List-Archive: <http://lists.infradead.org/pipermail/openwrt-devel/>
List-Post: <mailto:openwrt-devel@lists.openwrt.org>
List-Help: <mailto:openwrt-devel-request@lists.openwrt.org?subject=help>
List-Subscribe: <http://lists.infradead.org/mailman/listinfo/openwrt-devel>,
 <mailto:openwrt-devel-request@lists.openwrt.org?subject=subscribe>
Cc: Jeff Kletsky <git-commits@allycomm.com>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: "openwrt-devel" <openwrt-devel-bounces@lists.openwrt.org>
Errors-To: openwrt-devel-bounces+lists+openwrt-devel=lfdr.de@lists.openwrt.org

RnJvbTogSmVmZiBLbGV0c2t5IDxnaXQtY29tbWl0c0BhbGx5Y29tbS5jb20+CgpnZW5lcmljOiBB
ZGQvcmVuYW1lIHBhdGNoZXMgZm9yIGNvbnNpc3RlbmN5CgppcHE0MHh4OiBHZW5lcmljLWxldmVs
IHBhdGNoIHJlcGxhY2VzIHNhbWUtc291cmNlIHBhdGNoZXMtNC4xOS8KICAgICAgICAgMDgyLXY0
LjIwLW10ZC1zcGluYW5kLXdpbmJvbmQtQWRkLXN1cHBvcnQtZm9yLVcyNU4wMUdWLnBhdGNoCgpT
ZXZlcmFsIFNQSSBOQU5EIGNoaXBzIHdlcmUgYWRkZWQgYmV0d2VlbiA0LjE5IGFuZCA1LjEKaW5j
bHVkaW5nIEdpZ2FEZXZpY2UsIFRvc2hpYmEsIGFuZCBXaW5ib25kLgpBIGZpeCB0byBNYWNyb25p
eCBjaGlwcycgRUNDIHdhcyBhbHNvIGluY2x1ZGVkLgoKICogQWRkIHN1cHBvcnQgZm9yIEdpZ2FE
ZXZpY2UgR0Q1RjFHUTRVRXh4RwogKiBBZGQgc3VwcG9ydCBmb3IgYWxsIFRvc2hpYmEgTWVtb3J5
IHByb2R1Y3RzCiAqIG1hY3Jvbml4OiBGaXggRUNDIFN0YXR1cyBSZWFkCiAqIGFkZCBzdXBwb3J0
IGZvciBHaWdhRGV2aWNlIEdENUZ4R1E0eEEKICogQWRkIGluaXRpYWwgc3VwcG9ydCBmb3IgVG9z
aGliYSBUQzU4Q1ZHMlMwSAogKiB3aW5ib25kOiBBZGQgc3VwcG9ydCBmb3IgVzI1TjAxR1YKClRo
ZSBmb2xsb3dpbmcgdHdvIGNvbW1pdHMgZnJvbSA1LjAgYXBwZWFyIGFscmVhZHkgYmFja3BvcnRl
ZCB1cHN0cmVhbQpzbyBhcmUgbm90IGluY2x1ZGVkIGhlcmU6CgogKiBGaXggdGhlIGVycm9yL2Ns
ZWFudXAgcGF0aCBpbiBzcGluYW5kX2luaXQoKQogKiBIYW5kbGUgdGhlIGNhc2Ugd2hlcmUgUFJP
R1JBTSBMT0FEIGRvZXMgbm90IHJlc2V0IHRoZSBjYWNoZQoKRXhpc3RpbmcgR2lnYURldmljZSBw
YXRjaGVzIHJlb3JkZXJlZCB0byBtYWludGFpbiB1cHN0cmVhbSBjb250ZW50CgpVcHN0cmVhbSBw
YXRjaGVzIHJlZnJlc2hlZCBhZ2FpbnN0IDQuMTkuNDgKCkJ1aWxkLXRlc3RlZC1vbjogaXBxNDB4
eCB3aXRoIFRFU1RJTkdfS0VSTkVMIGVuYWJsZWQgKDQuMTkpClJ1bi10ZXN0ZWQtb246IGF0aDc5
L25hbmQgKDQuMTkuNDgsIFdJUCkKClNpZ25lZC1vZmYtYnk6IEplZmYgS2xldHNreSA8Z2l0LWNv
bW1pdHNAYWxseWNvbW0uY29tPgotLS0KIC4uLm5kLXdpbmJvbmQtQWRkLXN1cHBvcnQtZm9yLVcy
NU4wMUdWLnBhdGNofSB8ICAxOSArLQogLi4uaW5pdGlhbC1zdXBwb3J0LWZvci1Ub3NoaWJhLVRD
NThDVkcyLnBhdGNoIHwgMTg4ICsrKysrKysrKysrKysrKysrKwogLi4uZC1zdXBwb3J0LWZvci1H
aWdhRGV2aWNlLUdENUZ4R1E0eEEucGF0Y2h9IHwgIDEyICstCiAuLi5zcGluYW5kLW1hY3Jvbml4
LUZpeC1FQ0MtU3RhdHVzLVJlYWQucGF0Y2ggfCAgNDQgKysrKwogLi4uc3VwcG9ydC1mb3ItYWxs
LVRvc2hpYmEtTWVtb3J5LXByb2R1LnBhdGNoIHwgMTQxICsrKysrKysrKysrKysKIC4uLnVwcG9y
dC1mb3ItR2lnYURldmljZS1HRDVGMUdRNFVFeHhHLnBhdGNofSB8ICAxMyArLQogNiBmaWxlcyBj
aGFuZ2VkLCA0MDMgaW5zZXJ0aW9ucygrKSwgMTQgZGVsZXRpb25zKC0pCiByZW5hbWUgdGFyZ2V0
L2xpbnV4L3tpcHE0MHh4L3BhdGNoZXMtNC4xOS8wODItdjQuMjAtbXRkLXNwaW5hbmQtd2luYm9u
ZC1BZGQtc3VwcG9ydC1mb3ItVzI1TjAxR1YucGF0Y2ggPT4gZ2VuZXJpYy9iYWNrcG9ydC00LjE5
LzQyMS12NS4wLW10ZC1zcGluYW5kLXdpbmJvbmQtQWRkLXN1cHBvcnQtZm9yLVcyNU4wMUdWLnBh
dGNofSAoNTYlKQogY3JlYXRlIG1vZGUgMTAwNjQ0IHRhcmdldC9saW51eC9nZW5lcmljL2JhY2tw
b3J0LTQuMTkvNDIyLXY1LjAtbXRkLXNwaW5hbmQtQWRkLWluaXRpYWwtc3VwcG9ydC1mb3ItVG9z
aGliYS1UQzU4Q1ZHMi5wYXRjaAogcmVuYW1lIHRhcmdldC9saW51eC9nZW5lcmljL2JhY2twb3J0
LTQuMTkvezQ1MC12NS4wLW10ZC1zcGluYW5kLWFkZC1zdXBwb3J0LWZvci1HaWdhRGV2aWNlLUdE
NUZ4R1E0eEEucGF0Y2ggPT4gNDIzLXY1LjAtbXRkLXNwaW5hbmQtYWRkLXN1cHBvcnQtZm9yLUdp
Z2FEZXZpY2UtR0Q1RnhHUTR4QS5wYXRjaH0gKDk0JSkKIGNyZWF0ZSBtb2RlIDEwMDY0NCB0YXJn
ZXQvbGludXgvZ2VuZXJpYy9iYWNrcG9ydC00LjE5LzQyNi12NS4xLW10ZC1zcGluYW5kLW1hY3Jv
bml4LUZpeC1FQ0MtU3RhdHVzLVJlYWQucGF0Y2gKIGNyZWF0ZSBtb2RlIDEwMDY0NCB0YXJnZXQv
bGludXgvZ2VuZXJpYy9iYWNrcG9ydC00LjE5LzQyNy12NS4xLW10ZC1zcGluYW5kLUFkZC1zdXBw
b3J0LWZvci1hbGwtVG9zaGliYS1NZW1vcnktcHJvZHUucGF0Y2gKIHJlbmFtZSB0YXJnZXQvbGlu
dXgvZ2VuZXJpYy9iYWNrcG9ydC00LjE5L3s0NTEtdjUuMS1tdGQtc3BpbmFuZC1BZGQtc3VwcG9y
dC1mb3ItR2lnYURldmljZS1HRDVGMUdRNFVFeHhHLnBhdGNoID0+IDQyOC12NS4xLW10ZC1zcGlu
YW5kLUFkZC1zdXBwb3J0LWZvci1HaWdhRGV2aWNlLUdENUYxR1E0VUV4eEcucGF0Y2h9ICg4OSUp
CgpkaWZmIC0tZ2l0IGEvdGFyZ2V0L2xpbnV4L2lwcTQweHgvcGF0Y2hlcy00LjE5LzA4Mi12NC4y
MC1tdGQtc3BpbmFuZC13aW5ib25kLUFkZC1zdXBwb3J0LWZvci1XMjVOMDFHVi5wYXRjaCBiL3Rh
cmdldC9saW51eC9nZW5lcmljL2JhY2twb3J0LTQuMTkvNDIxLXY1LjAtbXRkLXNwaW5hbmQtd2lu
Ym9uZC1BZGQtc3VwcG9ydC1mb3ItVzI1TjAxR1YucGF0Y2gKc2ltaWxhcml0eSBpbmRleCA1NiUK
cmVuYW1lIGZyb20gdGFyZ2V0L2xpbnV4L2lwcTQweHgvcGF0Y2hlcy00LjE5LzA4Mi12NC4yMC1t
dGQtc3BpbmFuZC13aW5ib25kLUFkZC1zdXBwb3J0LWZvci1XMjVOMDFHVi5wYXRjaApyZW5hbWUg
dG8gdGFyZ2V0L2xpbnV4L2dlbmVyaWMvYmFja3BvcnQtNC4xOS80MjEtdjUuMC1tdGQtc3BpbmFu
ZC13aW5ib25kLUFkZC1zdXBwb3J0LWZvci1XMjVOMDFHVi5wYXRjaAppbmRleCAyMmJkOTg1MTI0
Li43ZmFlMWFkMmQ2IDEwMDY0NAotLS0gYS90YXJnZXQvbGludXgvaXBxNDB4eC9wYXRjaGVzLTQu
MTkvMDgyLXY0LjIwLW10ZC1zcGluYW5kLXdpbmJvbmQtQWRkLXN1cHBvcnQtZm9yLVcyNU4wMUdW
LnBhdGNoCisrKyBiL3RhcmdldC9saW51eC9nZW5lcmljL2JhY2twb3J0LTQuMTkvNDIxLXY1LjAt
bXRkLXNwaW5hbmQtd2luYm9uZC1BZGQtc3VwcG9ydC1mb3ItVzI1TjAxR1YucGF0Y2gKQEAgLTEs
MjAgKzEsMjggQEAKLUZyb20gMzQyZmMwMWJmZDZkNzE3NjAyYzcxZDk2ZDNlZjQwYTM2ZTQ1ZTA2
MCBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKK0Zyb20gOWE0ZDgzMDc0NzY5ZDZlY2YxZjVjM2Zl
ZjBmMTgzYjA5YWJmMzcyNiBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEKIEZyb206IFJvYmVydCBN
YXJrbyA8cm9iaW1hcmtvQGdtYWlsLmNvbT4KLURhdGU6IEZyaSwgNSBPY3QgMjAxOCAwOTowMjo1
MCArMDIwMAotU3ViamVjdDogW1BBVENIXSBtdGQ6IHNwaW5hbmQ6IHdpbmJvbmQ6IEFkZCBzdXBw
b3J0IGZvciBXMjVOMDFHVgorRGF0ZTogU2F0LCA2IE9jdCAyMDE4IDE3OjM2OjQyICswMjAwCitT
dWJqZWN0OiBbUEFUQ0ggMS84XSBtdGQ6IHNwaW5hbmQ6IHdpbmJvbmQ6IEFkZCBzdXBwb3J0IGZv
ciBXMjVOMDFHVgogCiBXMjVOMDFHViBpcyBhIHNpbmdsZSBkaWUgdmVyc2lvbiBvZiB0aGUgYWxy
ZWFkeSBzdXBwb3J0ZWQKIFcyNU0wMkdWIHdpdGggaGFsZiB0aGUgY2FwYWNpdHkuIEV2ZXJ5dGhp
bmcgZWxzZSBpcyB0aGUKIHNhbWUgc28gaW50cm9kdWNlIHN1cHBvcnQgZm9yIFcyNU4wMUdWLgog
CitEYXRhc2hlZXQ6aHR0cDovL3d3dy53aW5ib25kLmNvbS9yZXNvdXJjZS1maWxlcy93MjVuMDFn
diUyMHJldmwlMjAwNTA5MTglMjB1bnNlY3VyZWQucGRmCisKK1Rlc3RlZCBvbiA4ZGV2aWNlcyBK
YWxhcGVubyBkZXYgYm9hcmQgdW5kZXIgT3BlbldydCBydW5uaW5nIDQuMTktcmM1LgorCiBTaWdu
ZWQtb2ZmLWJ5OiBSb2JlcnQgTWFya28gPHJvYmltYXJrb0BnbWFpbC5jb20+CitSZXZpZXdlZC1i
eTogQm9yaXMgQnJlemlsbG9uIDxib3Jpcy5icmV6aWxsb25AYm9vdGxpbi5jb20+CitTaWduZWQt
b2ZmLWJ5OiBNaXF1ZWwgUmF5bmFsIDxtaXF1ZWwucmF5bmFsQGJvb3RsaW4uY29tPgogLS0tCiAg
ZHJpdmVycy9tdGQvbmFuZC9zcGkvd2luYm9uZC5jIHwgOCArKysrKysrKwogIDEgZmlsZSBjaGFu
Z2VkLCA4IGluc2VydGlvbnMoKykKIAorZGlmZiAtLWdpdCBhL2RyaXZlcnMvbXRkL25hbmQvc3Bp
L3dpbmJvbmQuYyBiL2RyaXZlcnMvbXRkL25hbmQvc3BpL3dpbmJvbmQuYworaW5kZXggNjdiYWEx
YjMyYzAwLi41ZDk0NDU4MGI4OTggMTAwNjQ0CiAtLS0gYS9kcml2ZXJzL210ZC9uYW5kL3NwaS93
aW5ib25kLmMKICsrKyBiL2RyaXZlcnMvbXRkL25hbmQvc3BpL3dpbmJvbmQuYwotQEAgLTg0LDYg
Kzg0LDE0IEBAIHN0YXRpYyBjb25zdCBzdHJ1Y3Qgc3BpbmFuZF9pbmZvIHdpbmJvbmQKK0BAIC04
NCw2ICs4NCwxNCBAQCBzdGF0aWMgY29uc3Qgc3RydWN0IHNwaW5hbmRfaW5mbyB3aW5ib25kX3Nw
aW5hbmRfdGFibGVbXSA9IHsKICAJCSAgICAgMCwKICAJCSAgICAgU1BJTkFORF9FQ0NJTkZPKCZ3
MjVtMDJndl9vb2JsYXlvdXQsIE5VTEwpLAogIAkJICAgICBTUElOQU5EX1NFTEVDVF9UQVJHRVQo
dzI1bTAyZ3Zfc2VsZWN0X3RhcmdldCkpLApAQCAtMjksMyArMzcsNiBAQCBTaWduZWQtb2ZmLWJ5
OiBSb2JlcnQgTWFya28gPHJvYmltYXJrb0BnbWFpbC5jb20+CiAgfTsKICAKICAvKioKKy0tIAor
Mi4yMC4xCisKZGlmZiAtLWdpdCBhL3RhcmdldC9saW51eC9nZW5lcmljL2JhY2twb3J0LTQuMTkv
NDIyLXY1LjAtbXRkLXNwaW5hbmQtQWRkLWluaXRpYWwtc3VwcG9ydC1mb3ItVG9zaGliYS1UQzU4
Q1ZHMi5wYXRjaCBiL3RhcmdldC9saW51eC9nZW5lcmljL2JhY2twb3J0LTQuMTkvNDIyLXY1LjAt
bXRkLXNwaW5hbmQtQWRkLWluaXRpYWwtc3VwcG9ydC1mb3ItVG9zaGliYS1UQzU4Q1ZHMi5wYXRj
aApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAwMDAwMDAwLi5lZDQyZjAwMjRiCi0tLSAv
ZGV2L251bGwKKysrIGIvdGFyZ2V0L2xpbnV4L2dlbmVyaWMvYmFja3BvcnQtNC4xOS80MjItdjUu
MC1tdGQtc3BpbmFuZC1BZGQtaW5pdGlhbC1zdXBwb3J0LWZvci1Ub3NoaWJhLVRDNThDVkcyLnBh
dGNoCkBAIC0wLDAgKzEsMTg4IEBACitGcm9tIDEwOTQ5YWYxNjgxZDViYjVjZGJjYzAxMjgxNWM2
ZTQwZWVjMTdkMDIgTW9uIFNlcCAxNyAwMDowMDowMCAyMDAxCitGcm9tOiBTY2hyZW1wZiBGcmll
ZGVyIDxmcmllZGVyLnNjaHJlbXBmQGtvbnRyb24uRGU+CitEYXRlOiBUaHUsIDggTm92IDIwMTgg
MDg6MzI6MTEgKzAwMDAKK1N1YmplY3Q6IFtQQVRDSCAyLzhdIG10ZDogc3BpbmFuZDogQWRkIGlu
aXRpYWwgc3VwcG9ydCBmb3IgVG9zaGliYSBUQzU4Q1ZHMlMwSAorTUlNRS1WZXJzaW9uOiAxLjAK
K0NvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD1VVEYtOAorQ29udGVudC1UcmFuc2Zl
ci1FbmNvZGluZzogOGJpdAorCitBZGQgbWluaW1hbCBzdXBwb3J0IGZvciB0aGUgVG9zaGliYSBU
QzU4Q1ZHMlMwSCBTUEkgTkFORCBjaGlwLgorCitTaWduZWQtb2ZmLWJ5OiBGcmllZGVyIFNjaHJl
bXBmIDxmcmllZGVyLnNjaHJlbXBmQGtvbnRyb24uZGU+CitBY2tlZC1ieTogQ2zDqW1lbnQgUMOp
cm9uIDxwZXJvbi5jbGVtQGdtYWlsLmNvbT4KK1NpZ25lZC1vZmYtYnk6IE1pcXVlbCBSYXluYWwg
PG1pcXVlbC5yYXluYWxAYm9vdGxpbi5jb20+CistLS0KKyBkcml2ZXJzL210ZC9uYW5kL3NwaS9N
YWtlZmlsZSAgfCAgIDIgKy0KKyBkcml2ZXJzL210ZC9uYW5kL3NwaS9jb3JlLmMgICAgfCAgIDEg
KworIGRyaXZlcnMvbXRkL25hbmQvc3BpL3Rvc2hpYmEuYyB8IDEzNyArKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysKKyBpbmNsdWRlL2xpbnV4L210ZC9zcGluYW5kLmggICAgfCAgIDEg
KworIDQgZmlsZXMgY2hhbmdlZCwgMTQwIGluc2VydGlvbnMoKyksIDEgZGVsZXRpb24oLSkKKyBj
cmVhdGUgbW9kZSAxMDA2NDQgZHJpdmVycy9tdGQvbmFuZC9zcGkvdG9zaGliYS5jCisKKy0tLSBh
L2RyaXZlcnMvbXRkL25hbmQvc3BpL01ha2VmaWxlCisrKysgYi9kcml2ZXJzL210ZC9uYW5kL3Nw
aS9NYWtlZmlsZQorQEAgLTEsMyArMSwzIEBACisgIyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjog
R1BMLTIuMAorLXNwaW5hbmQtb2JqcyA6PSBjb3JlLm8gbWFjcm9uaXgubyBtaWNyb24ubyB3aW5i
b25kLm8KKytzcGluYW5kLW9ianMgOj0gY29yZS5vIG1hY3Jvbml4Lm8gbWljcm9uLm8gdG9zaGli
YS5vIHdpbmJvbmQubworIG9iai0kKENPTkZJR19NVERfU1BJX05BTkQpICs9IHNwaW5hbmQubwor
LS0tIGEvZHJpdmVycy9tdGQvbmFuZC9zcGkvY29yZS5jCisrKysgYi9kcml2ZXJzL210ZC9uYW5k
L3NwaS9jb3JlLmMKK0BAIC03NjQsNiArNzY0LDcgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBuYW5k
X29wcyBzcGluYW5kX29wcworIHN0YXRpYyBjb25zdCBzdHJ1Y3Qgc3BpbmFuZF9tYW51ZmFjdHVy
ZXIgKnNwaW5hbmRfbWFudWZhY3R1cmVyc1tdID0geworIAkmbWFjcm9uaXhfc3BpbmFuZF9tYW51
ZmFjdHVyZXIsCisgCSZtaWNyb25fc3BpbmFuZF9tYW51ZmFjdHVyZXIsCisrCSZ0b3NoaWJhX3Nw
aW5hbmRfbWFudWZhY3R1cmVyLAorIAkmd2luYm9uZF9zcGluYW5kX21hbnVmYWN0dXJlciwKKyB9
OworIAorLS0tIC9kZXYvbnVsbAorKysrIGIvZHJpdmVycy9tdGQvbmFuZC9zcGkvdG9zaGliYS5j
CitAQCAtMCwwICsxLDEzNyBAQAorKy8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBHUEwtMi4w
CisrLyoKKysgKiBDb3B5cmlnaHQgKGMpIDIwMTggZXhjZWV0IGVsZWN0cm9uaWNzIEdtYkgKKysg
KiBDb3B5cmlnaHQgKGMpIDIwMTggS29udHJvbiBFbGVjdHJvbmljcyBHbWJICisrICoKKysgKiBB
dXRob3I6IEZyaWVkZXIgU2NocmVtcGYgPGZyaWVkZXIuc2NocmVtcGZAa29udHJvbi5kZT4KKysg
Ki8KKysKKysjaW5jbHVkZSA8bGludXgvZGV2aWNlLmg+CisrI2luY2x1ZGUgPGxpbnV4L2tlcm5l
bC5oPgorKyNpbmNsdWRlIDxsaW51eC9tdGQvc3BpbmFuZC5oPgorKworKyNkZWZpbmUgU1BJTkFO
RF9NRlJfVE9TSElCQQkJMHg5OAorKyNkZWZpbmUgVE9TSF9TVEFUVVNfRUNDX0hBU19CSVRGTElQ
U19UCSgzIDw8IDQpCisrCisrc3RhdGljIFNQSU5BTkRfT1BfVkFSSUFOVFMocmVhZF9jYWNoZV92
YXJpYW50cywKKysJCVNQSU5BTkRfUEFHRV9SRUFEX0ZST01fQ0FDSEVfWDRfT1AoMCwgMSwgTlVM
TCwgMCksCisrCQlTUElOQU5EX1BBR0VfUkVBRF9GUk9NX0NBQ0hFX1gyX09QKDAsIDEsIE5VTEws
IDApLAorKwkJU1BJTkFORF9QQUdFX1JFQURfRlJPTV9DQUNIRV9PUCh0cnVlLCAwLCAxLCBOVUxM
LCAwKSwKKysJCVNQSU5BTkRfUEFHRV9SRUFEX0ZST01fQ0FDSEVfT1AoZmFsc2UsIDAsIDEsIE5V
TEwsIDApKTsKKysKKytzdGF0aWMgU1BJTkFORF9PUF9WQVJJQU5UUyh3cml0ZV9jYWNoZV92YXJp
YW50cywKKysJCVNQSU5BTkRfUFJPR19MT0FEKHRydWUsIDAsIE5VTEwsIDApKTsKKysKKytzdGF0
aWMgU1BJTkFORF9PUF9WQVJJQU5UUyh1cGRhdGVfY2FjaGVfdmFyaWFudHMsCisrCQlTUElOQU5E
X1BST0dfTE9BRChmYWxzZSwgMCwgTlVMTCwgMCkpOworKworK3N0YXRpYyBpbnQgdGM1OGN2ZzJz
MGhfb29ibGF5b3V0X2VjYyhzdHJ1Y3QgbXRkX2luZm8gKm10ZCwgaW50IHNlY3Rpb24sCisrCQkJ
CSAgICAgc3RydWN0IG10ZF9vb2JfcmVnaW9uICpyZWdpb24pCisreworKwlpZiAoc2VjdGlvbiA+
IDcpCisrCQlyZXR1cm4gLUVSQU5HRTsKKysKKysJcmVnaW9uLT5vZmZzZXQgPSAxMjggKyAxNiAq
IHNlY3Rpb247CisrCXJlZ2lvbi0+bGVuZ3RoID0gMTY7CisrCisrCXJldHVybiAwOworK30KKysK
KytzdGF0aWMgaW50IHRjNThjdmcyczBoX29vYmxheW91dF9mcmVlKHN0cnVjdCBtdGRfaW5mbyAq
bXRkLCBpbnQgc2VjdGlvbiwKKysJCQkJICAgICAgc3RydWN0IG10ZF9vb2JfcmVnaW9uICpyZWdp
b24pCisreworKwlpZiAoc2VjdGlvbiA+IDApCisrCQlyZXR1cm4gLUVSQU5HRTsKKysKKysJLyog
MiBieXRlcyByZXNlcnZlZCBmb3IgQkJNICovCisrCXJlZ2lvbi0+b2Zmc2V0ID0gMjsKKysJcmVn
aW9uLT5sZW5ndGggPSAxMjY7CisrCisrCXJldHVybiAwOworK30KKysKKytzdGF0aWMgY29uc3Qg
c3RydWN0IG10ZF9vb2JsYXlvdXRfb3BzIHRjNThjdmcyczBoX29vYmxheW91dCA9IHsKKysJLmVj
YyA9IHRjNThjdmcyczBoX29vYmxheW91dF9lY2MsCisrCS5mcmVlID0gdGM1OGN2ZzJzMGhfb29i
bGF5b3V0X2ZyZWUsCisrfTsKKysKKytzdGF0aWMgaW50IHRjNThjdmcyczBoX2VjY19nZXRfc3Rh
dHVzKHN0cnVjdCBzcGluYW5kX2RldmljZSAqc3BpbmFuZCwKKysJCQkJICAgICAgdTggc3RhdHVz
KQorK3sKKysJc3RydWN0IG5hbmRfZGV2aWNlICpuYW5kID0gc3BpbmFuZF90b19uYW5kKHNwaW5h
bmQpOworKwl1OCBtYmYgPSAwOworKwlzdHJ1Y3Qgc3BpX21lbV9vcCBvcCA9IFNQSU5BTkRfR0VU
X0ZFQVRVUkVfT1AoMHgzMCwgJm1iZik7CisrCisrCXN3aXRjaCAoc3RhdHVzICYgU1RBVFVTX0VD
Q19NQVNLKSB7CisrCWNhc2UgU1RBVFVTX0VDQ19OT19CSVRGTElQUzoKKysJCXJldHVybiAwOwor
KworKwljYXNlIFNUQVRVU19FQ0NfVU5DT1JfRVJST1I6CisrCQlyZXR1cm4gLUVCQURNU0c7Cisr
CisrCWNhc2UgU1RBVFVTX0VDQ19IQVNfQklURkxJUFM6CisrCWNhc2UgVE9TSF9TVEFUVVNfRUND
X0hBU19CSVRGTElQU19UOgorKwkJLyoKKysJCSAqIExldCdzIHRyeSB0byByZXRyaWV2ZSB0aGUg
cmVhbCBtYXhpbXVtIG51bWJlciBvZiBiaXRmbGlwcworKwkJICogaW4gb3JkZXIgdG8gYXZvaWQg
Zm9yY2luZyB0aGUgd2Vhci1sZXZlbGluZyBsYXllciB0byBtb3ZlCisrCQkgKiBkYXRhIGFyb3Vu
ZCBpZiBpdCdzIG5vdCBuZWNlc3NhcnkuCisrCQkgKi8KKysJCWlmIChzcGlfbWVtX2V4ZWNfb3Ao
c3BpbmFuZC0+c3BpbWVtLCAmb3ApKQorKwkJCXJldHVybiBuYW5kLT5lY2NyZXEuc3RyZW5ndGg7
CisrCisrCQltYmYgPj49IDQ7CisrCisrCQlpZiAoV0FSTl9PTihtYmYgPiBuYW5kLT5lY2NyZXEu
c3RyZW5ndGggfHwgIW1iZikpCisrCQkJcmV0dXJuIG5hbmQtPmVjY3JlcS5zdHJlbmd0aDsKKysK
KysJCXJldHVybiBtYmY7CisrCisrCWRlZmF1bHQ6CisrCQlicmVhazsKKysJfQorKworKwlyZXR1
cm4gLUVJTlZBTDsKKyt9CisrCisrc3RhdGljIGNvbnN0IHN0cnVjdCBzcGluYW5kX2luZm8gdG9z
aGliYV9zcGluYW5kX3RhYmxlW10gPSB7CisrCVNQSU5BTkRfSU5GTygiVEM1OENWRzJTMEgiLCAw
eENELAorKwkJICAgICBOQU5EX01FTU9SRygxLCA0MDk2LCAyNTYsIDY0LCAyMDQ4LCAxLCAxLCAx
KSwKKysJCSAgICAgTkFORF9FQ0NSRVEoOCwgNTEyKSwKKysJCSAgICAgU1BJTkFORF9JTkZPX09Q
X1ZBUklBTlRTKCZyZWFkX2NhY2hlX3ZhcmlhbnRzLAorKwkJCQkJICAgICAgJndyaXRlX2NhY2hl
X3ZhcmlhbnRzLAorKwkJCQkJICAgICAgJnVwZGF0ZV9jYWNoZV92YXJpYW50cyksCisrCQkgICAg
IFNQSU5BTkRfSEFTX1FFX0JJVCwKKysJCSAgICAgU1BJTkFORF9FQ0NJTkZPKCZ0YzU4Y3ZnMnMw
aF9vb2JsYXlvdXQsCisrCQkJCSAgICAgdGM1OGN2ZzJzMGhfZWNjX2dldF9zdGF0dXMpKSwKKyt9
OworKworK3N0YXRpYyBpbnQgdG9zaGliYV9zcGluYW5kX2RldGVjdChzdHJ1Y3Qgc3BpbmFuZF9k
ZXZpY2UgKnNwaW5hbmQpCisreworKwl1OCAqaWQgPSBzcGluYW5kLT5pZC5kYXRhOworKwlpbnQg
cmV0OworKworKwkvKgorKwkgKiBUb3NoaWJhIFNQSSBOQU5EIHJlYWQgSUQgbmVlZHMgYSBkdW1t
eSBieXRlLAorKwkgKiBzbyB0aGUgZmlyc3QgYnl0ZSBpbiBpZCBpcyBnYXJiYWdlLgorKwkgKi8K
KysJaWYgKGlkWzFdICE9IFNQSU5BTkRfTUZSX1RPU0hJQkEpCisrCQlyZXR1cm4gMDsKKysKKysJ
cmV0ID0gc3BpbmFuZF9tYXRjaF9hbmRfaW5pdChzcGluYW5kLCB0b3NoaWJhX3NwaW5hbmRfdGFi
bGUsCisrCQkJCSAgICAgQVJSQVlfU0laRSh0b3NoaWJhX3NwaW5hbmRfdGFibGUpLAorKwkJCQkg
ICAgIGlkWzJdKTsKKysJaWYgKHJldCkKKysJCXJldHVybiByZXQ7CisrCisrCXJldHVybiAxOwor
K30KKysKKytzdGF0aWMgY29uc3Qgc3RydWN0IHNwaW5hbmRfbWFudWZhY3R1cmVyX29wcyB0b3No
aWJhX3NwaW5hbmRfbWFudWZfb3BzID0geworKwkuZGV0ZWN0ID0gdG9zaGliYV9zcGluYW5kX2Rl
dGVjdCwKKyt9OworKworK2NvbnN0IHN0cnVjdCBzcGluYW5kX21hbnVmYWN0dXJlciB0b3NoaWJh
X3NwaW5hbmRfbWFudWZhY3R1cmVyID0geworKwkuaWQgPSBTUElOQU5EX01GUl9UT1NISUJBLAor
KwkubmFtZSA9ICJUb3NoaWJhIiwKKysJLm9wcyA9ICZ0b3NoaWJhX3NwaW5hbmRfbWFudWZfb3Bz
LAorK307CistLS0gYS9pbmNsdWRlL2xpbnV4L210ZC9zcGluYW5kLmgKKysrKyBiL2luY2x1ZGUv
bGludXgvbXRkL3NwaW5hbmQuaAorQEAgLTE5Niw2ICsxOTYsNyBAQCBzdHJ1Y3Qgc3BpbmFuZF9t
YW51ZmFjdHVyZXIgeworIC8qIFNQSSBOQU5EIG1hbnVmYWN0dXJlcnMgKi8KKyBleHRlcm4gY29u
c3Qgc3RydWN0IHNwaW5hbmRfbWFudWZhY3R1cmVyIG1hY3Jvbml4X3NwaW5hbmRfbWFudWZhY3R1
cmVyOworIGV4dGVybiBjb25zdCBzdHJ1Y3Qgc3BpbmFuZF9tYW51ZmFjdHVyZXIgbWljcm9uX3Nw
aW5hbmRfbWFudWZhY3R1cmVyOworK2V4dGVybiBjb25zdCBzdHJ1Y3Qgc3BpbmFuZF9tYW51ZmFj
dHVyZXIgdG9zaGliYV9zcGluYW5kX21hbnVmYWN0dXJlcjsKKyBleHRlcm4gY29uc3Qgc3RydWN0
IHNwaW5hbmRfbWFudWZhY3R1cmVyIHdpbmJvbmRfc3BpbmFuZF9tYW51ZmFjdHVyZXI7CisgCisg
LyoqCmRpZmYgLS1naXQgYS90YXJnZXQvbGludXgvZ2VuZXJpYy9iYWNrcG9ydC00LjE5LzQ1MC12
NS4wLW10ZC1zcGluYW5kLWFkZC1zdXBwb3J0LWZvci1HaWdhRGV2aWNlLUdENUZ4R1E0eEEucGF0
Y2ggYi90YXJnZXQvbGludXgvZ2VuZXJpYy9iYWNrcG9ydC00LjE5LzQyMy12NS4wLW10ZC1zcGlu
YW5kLWFkZC1zdXBwb3J0LWZvci1HaWdhRGV2aWNlLUdENUZ4R1E0eEEucGF0Y2gKc2ltaWxhcml0
eSBpbmRleCA5NCUKcmVuYW1lIGZyb20gdGFyZ2V0L2xpbnV4L2dlbmVyaWMvYmFja3BvcnQtNC4x
OS80NTAtdjUuMC1tdGQtc3BpbmFuZC1hZGQtc3VwcG9ydC1mb3ItR2lnYURldmljZS1HRDVGeEdR
NHhBLnBhdGNoCnJlbmFtZSB0byB0YXJnZXQvbGludXgvZ2VuZXJpYy9iYWNrcG9ydC00LjE5LzQy
My12NS4wLW10ZC1zcGluYW5kLWFkZC1zdXBwb3J0LWZvci1HaWdhRGV2aWNlLUdENUZ4R1E0eEEu
cGF0Y2gKaW5kZXggMTVmNzYxYWI5ZC4uNGU2ZjE4YTRjYiAxMDA2NDQKLS0tIGEvdGFyZ2V0L2xp
bnV4L2dlbmVyaWMvYmFja3BvcnQtNC4xOS80NTAtdjUuMC1tdGQtc3BpbmFuZC1hZGQtc3VwcG9y
dC1mb3ItR2lnYURldmljZS1HRDVGeEdRNHhBLnBhdGNoCisrKyBiL3RhcmdldC9saW51eC9nZW5l
cmljL2JhY2twb3J0LTQuMTkvNDIzLXY1LjAtbXRkLXNwaW5hbmQtYWRkLXN1cHBvcnQtZm9yLUdp
Z2FEZXZpY2UtR0Q1RnhHUTR4QS5wYXRjaApAQCAtMSw3ICsxLDcgQEAKIEZyb20gYzkzYzYxMzIx
NGFjNzBjODdiZWFiNTQyMmE2MDA3N2JmMTI2Yjg1NSBNb24gU2VwIDE3IDAwOjAwOjAwIDIwMDEK
IEZyb206IENodWFuaG9uZyBHdW8gPGdjaDk4MTIxM0BnbWFpbC5jb20+CiBEYXRlOiBXZWQsIDI4
IE5vdiAyMDE4IDIxOjA3OjI1ICswODAwCi1TdWJqZWN0OiBbUEFUQ0hdIG10ZDogc3BpbmFuZDog
YWRkIHN1cHBvcnQgZm9yIEdpZ2FEZXZpY2UgR0Q1RnhHUTR4QQorU3ViamVjdDogW1BBVENIIDMv
OF0gbXRkOiBzcGluYW5kOiBhZGQgc3VwcG9ydCBmb3IgR2lnYURldmljZSBHRDVGeEdRNHhBCiAK
IEFkZCBzdXBwb3J0IGZvciBHaWdhRGV2aWNlIEdENUYxRy8yRy80R1E0eEEgU1BJIE5BTkQuCiAK
QEAgLTExLDcgKzExLDcgQEAgU2lnbmVkLW9mZi1ieTogTWlxdWVsIFJheW5hbCA8bWlxdWVsLnJh
eW5hbEBib290bGluLmNvbT4KIC0tLQogIGRyaXZlcnMvbXRkL25hbmQvc3BpL01ha2VmaWxlICAg
ICB8ICAgMiArLQogIGRyaXZlcnMvbXRkL25hbmQvc3BpL2NvcmUuYyAgICAgICB8ICAgMSArCi0g
ZHJpdmVycy9tdGQvbmFuZC9zcGkvZ2lnYWRldmljZS5jIHwgMTQ4ICsrKysrKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrCisgZHJpdmVycy9tdGQvbmFuZC9zcGkvZ2lnYWRldmljZS5j
IHwgMTQ4ICsrKysrKysrKysrKysrKysrKysrKysrKysrKysrKwogIGluY2x1ZGUvbGludXgvbXRk
L3NwaW5hbmQuaCAgICAgICB8ICAgMSArCiAgNCBmaWxlcyBjaGFuZ2VkLCAxNTEgaW5zZXJ0aW9u
cygrKSwgMSBkZWxldGlvbigtKQogIGNyZWF0ZSBtb2RlIDEwMDY0NCBkcml2ZXJzL210ZC9uYW5k
L3NwaS9naWdhZGV2aWNlLmMKQEAgLTIwLDggKzIwLDggQEAgU2lnbmVkLW9mZi1ieTogTWlxdWVs
IFJheW5hbCA8bWlxdWVsLnJheW5hbEBib290bGluLmNvbT4KICsrKyBiL2RyaXZlcnMvbXRkL25h
bmQvc3BpL01ha2VmaWxlCiBAQCAtMSwzICsxLDMgQEAKICAjIFNQRFgtTGljZW5zZS1JZGVudGlm
aWVyOiBHUEwtMi4wCi0tc3BpbmFuZC1vYmpzIDo9IGNvcmUubyBtYWNyb25peC5vIG1pY3Jvbi5v
IHdpbmJvbmQubwotK3NwaW5hbmQtb2JqcyA6PSBjb3JlLm8gZ2lnYWRldmljZS5vIG1hY3Jvbml4
Lm8gbWljcm9uLm8gd2luYm9uZC5vCistc3BpbmFuZC1vYmpzIDo9IGNvcmUubyBtYWNyb25peC5v
IG1pY3Jvbi5vIHRvc2hpYmEubyB3aW5ib25kLm8KKytzcGluYW5kLW9ianMgOj0gY29yZS5vIGdp
Z2FkZXZpY2UubyBtYWNyb25peC5vIG1pY3Jvbi5vIHRvc2hpYmEubyB3aW5ib25kLm8KICBvYmot
JChDT05GSUdfTVREX1NQSV9OQU5EKSArPSBzcGluYW5kLm8KIC0tLSBhL2RyaXZlcnMvbXRkL25h
bmQvc3BpL2NvcmUuYwogKysrIGIvZHJpdmVycy9tdGQvbmFuZC9zcGkvY29yZS5jCkBAIC0zMiw3
ICszMiw3IEBAIFNpZ25lZC1vZmYtYnk6IE1pcXVlbCBSYXluYWwgPG1pcXVlbC5yYXluYWxAYm9v
dGxpbi5jb20+CiArCSZnaWdhZGV2aWNlX3NwaW5hbmRfbWFudWZhY3R1cmVyLAogIAkmbWFjcm9u
aXhfc3BpbmFuZF9tYW51ZmFjdHVyZXIsCiAgCSZtaWNyb25fc3BpbmFuZF9tYW51ZmFjdHVyZXIs
Ci0gCSZ3aW5ib25kX3NwaW5hbmRfbWFudWZhY3R1cmVyLAorIAkmdG9zaGliYV9zcGluYW5kX21h
bnVmYWN0dXJlciwKIC0tLSAvZGV2L251bGwKICsrKyBiL2RyaXZlcnMvbXRkL25hbmQvc3BpL2dp
Z2FkZXZpY2UuYwogQEAgLTAsMCArMSwxNDggQEAKQEAgLTE5Myw0ICsxOTMsNCBAQCBTaWduZWQt
b2ZmLWJ5OiBNaXF1ZWwgUmF5bmFsIDxtaXF1ZWwucmF5bmFsQGJvb3RsaW4uY29tPgogK2V4dGVy
biBjb25zdCBzdHJ1Y3Qgc3BpbmFuZF9tYW51ZmFjdHVyZXIgZ2lnYWRldmljZV9zcGluYW5kX21h
bnVmYWN0dXJlcjsKICBleHRlcm4gY29uc3Qgc3RydWN0IHNwaW5hbmRfbWFudWZhY3R1cmVyIG1h
Y3Jvbml4X3NwaW5hbmRfbWFudWZhY3R1cmVyOwogIGV4dGVybiBjb25zdCBzdHJ1Y3Qgc3BpbmFu
ZF9tYW51ZmFjdHVyZXIgbWljcm9uX3NwaW5hbmRfbWFudWZhY3R1cmVyOwotIGV4dGVybiBjb25z
dCBzdHJ1Y3Qgc3BpbmFuZF9tYW51ZmFjdHVyZXIgd2luYm9uZF9zcGluYW5kX21hbnVmYWN0dXJl
cjsKKyBleHRlcm4gY29uc3Qgc3RydWN0IHNwaW5hbmRfbWFudWZhY3R1cmVyIHRvc2hpYmFfc3Bp
bmFuZF9tYW51ZmFjdHVyZXI7CmRpZmYgLS1naXQgYS90YXJnZXQvbGludXgvZ2VuZXJpYy9iYWNr
cG9ydC00LjE5LzQyNi12NS4xLW10ZC1zcGluYW5kLW1hY3Jvbml4LUZpeC1FQ0MtU3RhdHVzLVJl
YWQucGF0Y2ggYi90YXJnZXQvbGludXgvZ2VuZXJpYy9iYWNrcG9ydC00LjE5LzQyNi12NS4xLW10
ZC1zcGluYW5kLW1hY3Jvbml4LUZpeC1FQ0MtU3RhdHVzLVJlYWQucGF0Y2gKbmV3IGZpbGUgbW9k
ZSAxMDA2NDQKaW5kZXggMDAwMDAwMDAwMC4uM2YxZTI0YTAxYwotLS0gL2Rldi9udWxsCisrKyBi
L3RhcmdldC9saW51eC9nZW5lcmljL2JhY2twb3J0LTQuMTkvNDI2LXY1LjEtbXRkLXNwaW5hbmQt
bWFjcm9uaXgtRml4LUVDQy1TdGF0dXMtUmVhZC5wYXRjaApAQCAtMCwwICsxLDQ0IEBACitGcm9t
IGY0Y2I0ZDdiNDZmNjQwOTM4MmZkOTgxZWVjOTU1NmUxZjNjMWRjNWQgTW9uIFNlcCAxNyAwMDow
MDowMCAyMDAxCitGcm9tOiBFbWlsIExlbm5ncmVuIDxlbWlsLmxlbm5ncmVuQGdtYWlsLmNvbT4K
K0RhdGU6IFRodSwgMjAgRGVjIDIwMTggMTM6NDY6NTggKzAxMDAKK1N1YmplY3Q6IFtQQVRDSCA2
LzhdIG10ZDogc3BpbmFuZDogbWFjcm9uaXg6IEZpeCBFQ0MgU3RhdHVzIFJlYWQKKworVGhlIGRh
dGFzaGVldCBzcGVjaWZpZXMgdGhlIHVwcGVyIGZvdXIgYml0cyBhcmUgcmVzZXJ2ZWQuCitUZXN0
aW5nIG9uIHJlYWwgaGFyZHdhcmUgc2hvd3MgdGhhdCB0aGVzZSBiaXRzIGNhbiBpbmRlZWQgYmUg
bm9uemVyby4KKworU2lnbmVkLW9mZi1ieTogRW1pbCBMZW5uZ3JlbiA8ZW1pbC5sZW5uZ3JlbkBn
bWFpbC5jb20+CitSZXZpZXdlZC1ieTogQm9yaXMgQnJlemlsbG9uIDxib3Jpcy5icmV6aWxsb25A
Ym9vdGxpbi5jb20+CitTaWduZWQtb2ZmLWJ5OiBNaXF1ZWwgUmF5bmFsIDxtaXF1ZWwucmF5bmFs
QGJvb3RsaW4uY29tPgorLS0tCisgZHJpdmVycy9tdGQvbmFuZC9zcGkvbWFjcm9uaXguYyB8IDgg
KysrKysrKy0KKyAxIGZpbGUgY2hhbmdlZCwgNyBpbnNlcnRpb25zKCspLCAxIGRlbGV0aW9uKC0p
CisKK2RpZmYgLS1naXQgYS9kcml2ZXJzL210ZC9uYW5kL3NwaS9tYWNyb25peC5jIGIvZHJpdmVy
cy9tdGQvbmFuZC9zcGkvbWFjcm9uaXguYworaW5kZXggOThmNmI5YzRiNjg0Li5kMTZiNTcwODFj
OTUgMTAwNjQ0CistLS0gYS9kcml2ZXJzL210ZC9uYW5kL3NwaS9tYWNyb25peC5jCisrKysgYi9k
cml2ZXJzL210ZC9uYW5kL3NwaS9tYWNyb25peC5jCitAQCAtMTAsNiArMTAsNyBAQAorICNpbmNs
dWRlIDxsaW51eC9tdGQvc3BpbmFuZC5oPgorIAorICNkZWZpbmUgU1BJTkFORF9NRlJfTUFDUk9O
SVgJCTB4QzIKKysjZGVmaW5lIE1BQ1JPTklYX0VDQ1NSX01BU0sJCTB4MEYKKyAKKyBzdGF0aWMg
U1BJTkFORF9PUF9WQVJJQU5UUyhyZWFkX2NhY2hlX3ZhcmlhbnRzLAorIAkJU1BJTkFORF9QQUdF
X1JFQURfRlJPTV9DQUNIRV9YNF9PUCgwLCAxLCBOVUxMLCAwKSwKK0BAIC01NSw3ICs1NiwxMiBA
QCBzdGF0aWMgaW50IG14MzVsZjFnZTRhYl9nZXRfZWNjc3Ioc3RydWN0IHNwaW5hbmRfZGV2aWNl
ICpzcGluYW5kLCB1OCAqZWNjc3IpCisgCQkJCQkgIFNQSV9NRU1fT1BfRFVNTVkoMSwgMSksCisg
CQkJCQkgIFNQSV9NRU1fT1BfREFUQV9JTigxLCBlY2NzciwgMSkpOworIAorLQlyZXR1cm4gc3Bp
X21lbV9leGVjX29wKHNwaW5hbmQtPnNwaW1lbSwgJm9wKTsKKysJaW50IHJldCA9IHNwaV9tZW1f
ZXhlY19vcChzcGluYW5kLT5zcGltZW0sICZvcCk7CisrCWlmIChyZXQpCisrCQlyZXR1cm4gcmV0
OworKworKwkqZWNjc3IgJj0gTUFDUk9OSVhfRUNDU1JfTUFTSzsKKysJcmV0dXJuIDA7CisgfQor
IAorIHN0YXRpYyBpbnQgbXgzNWxmMWdlNGFiX2VjY19nZXRfc3RhdHVzKHN0cnVjdCBzcGluYW5k
X2RldmljZSAqc3BpbmFuZCwKKy0tIAorMi4yMC4xCisKZGlmZiAtLWdpdCBhL3RhcmdldC9saW51
eC9nZW5lcmljL2JhY2twb3J0LTQuMTkvNDI3LXY1LjEtbXRkLXNwaW5hbmQtQWRkLXN1cHBvcnQt
Zm9yLWFsbC1Ub3NoaWJhLU1lbW9yeS1wcm9kdS5wYXRjaCBiL3RhcmdldC9saW51eC9nZW5lcmlj
L2JhY2twb3J0LTQuMTkvNDI3LXY1LjEtbXRkLXNwaW5hbmQtQWRkLXN1cHBvcnQtZm9yLWFsbC1U
b3NoaWJhLU1lbW9yeS1wcm9kdS5wYXRjaApuZXcgZmlsZSBtb2RlIDEwMDY0NAppbmRleCAwMDAw
MDAwMDAwLi5kNzYyZGU0MjcxCi0tLSAvZGV2L251bGwKKysrIGIvdGFyZ2V0L2xpbnV4L2dlbmVy
aWMvYmFja3BvcnQtNC4xOS80MjctdjUuMS1tdGQtc3BpbmFuZC1BZGQtc3VwcG9ydC1mb3ItYWxs
LVRvc2hpYmEtTWVtb3J5LXByb2R1LnBhdGNoCkBAIC0wLDAgKzEsMTQxIEBACitGcm9tIGRiMjE0
NTEzZjYyZmQxM2MwYTlhZjNiZDVjNWQ2MzRkYmEzN2U2NWQgTW9uIFNlcCAxNyAwMDowMDowMCAy
MDAxCitGcm9tOiBZb3NoaW8gRnVydXlhbWEgPHRtY21jLW1iLXlmdXJ1eWFtYTdAbWwudG9zaGli
YS5jby5qcD4KK0RhdGU6IFdlZCwgMTYgSmFuIDIwMTkgMTQ6NTM6MTkgKzA5MDAKK1N1YmplY3Q6
IFtQQVRDSCA3LzhdIG10ZDogc3BpbmFuZDogQWRkIHN1cHBvcnQgZm9yIGFsbCBUb3NoaWJhIE1l
bW9yeSBwcm9kdWN0cworCitBZGQgZGV2aWNlIHRhYmxlIGZvciBUb3NoaWJhIE1lbW9yeSBwcm9k
dWN0cy4KK0Fsc28sIGdlbmVyYWxpemUgT09CIGxheW91dCBzdHJ1Y3R1cmUgYW5kIGZ1bmN0aW9u
IG5hbWVzLgorCitTaWduZWQtb2ZmLWJ5OiBZb3NoaW8gRnVydXlhbWEgPHRtY21jLW1iLXlmdXJ1
eWFtYTdAbWwudG9zaGliYS5jby5qcD4KK1Jldmlld2VkLWJ5OiBGcmllZGVyIFNjaHJlbXBmIDxm
cmllZGVyLnNjaHJlbXBmQGtvbnRyb24uZGU+CitTaWduZWQtb2ZmLWJ5OiBNaXF1ZWwgUmF5bmFs
IDxtaXF1ZWwucmF5bmFsQGJvb3RsaW4uY29tPgorLS0tCisgZHJpdmVycy9tdGQvbmFuZC9zcGkv
dG9zaGliYS5jIHwgNzkgKysrKysrKysrKysrKysrKysrKysrKysrKysrKy0tLS0tLQorIDEgZmls
ZSBjaGFuZ2VkLCA2NSBpbnNlcnRpb25zKCspLCAxNCBkZWxldGlvbnMoLSkKKworZGlmZiAtLWdp
dCBhL2RyaXZlcnMvbXRkL25hbmQvc3BpL3Rvc2hpYmEuYyBiL2RyaXZlcnMvbXRkL25hbmQvc3Bp
L3Rvc2hpYmEuYworaW5kZXggMDgxMjY1NTU3ZTcwLi5kYjgwMjFkYTQ1YjUgMTAwNjQ0CistLS0g
YS9kcml2ZXJzL210ZC9uYW5kL3NwaS90b3NoaWJhLmMKKysrKyBiL2RyaXZlcnMvbXRkL25hbmQv
c3BpL3Rvc2hpYmEuYworQEAgLTI1LDE5ICsyNSwxOSBAQCBzdGF0aWMgU1BJTkFORF9PUF9WQVJJ
QU5UUyh3cml0ZV9jYWNoZV92YXJpYW50cywKKyBzdGF0aWMgU1BJTkFORF9PUF9WQVJJQU5UUyh1
cGRhdGVfY2FjaGVfdmFyaWFudHMsCisgCQlTUElOQU5EX1BST0dfTE9BRChmYWxzZSwgMCwgTlVM
TCwgMCkpOworIAorLXN0YXRpYyBpbnQgdGM1OGN2ZzJzMGhfb29ibGF5b3V0X2VjYyhzdHJ1Y3Qg
bXRkX2luZm8gKm10ZCwgaW50IHNlY3Rpb24sCisrc3RhdGljIGludCB0YzU4Y3hneHN4X29vYmxh
eW91dF9lY2Moc3RydWN0IG10ZF9pbmZvICptdGQsIGludCBzZWN0aW9uLAorIAkJCQkgICAgIHN0
cnVjdCBtdGRfb29iX3JlZ2lvbiAqcmVnaW9uKQorIHsKKy0JaWYgKHNlY3Rpb24gPiA3KQorKwlp
ZiAoc2VjdGlvbiA+IDApCisgCQlyZXR1cm4gLUVSQU5HRTsKKyAKKy0JcmVnaW9uLT5vZmZzZXQg
PSAxMjggKyAxNiAqIHNlY3Rpb247CistCXJlZ2lvbi0+bGVuZ3RoID0gMTY7CisrCXJlZ2lvbi0+
b2Zmc2V0ID0gbXRkLT5vb2JzaXplIC8gMjsKKysJcmVnaW9uLT5sZW5ndGggPSBtdGQtPm9vYnNp
emUgLyAyOworIAorIAlyZXR1cm4gMDsKKyB9CisgCistc3RhdGljIGludCB0YzU4Y3ZnMnMwaF9v
b2JsYXlvdXRfZnJlZShzdHJ1Y3QgbXRkX2luZm8gKm10ZCwgaW50IHNlY3Rpb24sCisrc3RhdGlj
IGludCB0YzU4Y3hneHN4X29vYmxheW91dF9mcmVlKHN0cnVjdCBtdGRfaW5mbyAqbXRkLCBpbnQg
c2VjdGlvbiwKKyAJCQkJICAgICAgc3RydWN0IG10ZF9vb2JfcmVnaW9uICpyZWdpb24pCisgewor
IAlpZiAoc2VjdGlvbiA+IDApCitAQCAtNDUsMTcgKzQ1LDE3IEBAIHN0YXRpYyBpbnQgdGM1OGN2
ZzJzMGhfb29ibGF5b3V0X2ZyZWUoc3RydWN0IG10ZF9pbmZvICptdGQsIGludCBzZWN0aW9uLAor
IAorIAkvKiAyIGJ5dGVzIHJlc2VydmVkIGZvciBCQk0gKi8KKyAJcmVnaW9uLT5vZmZzZXQgPSAy
OworLQlyZWdpb24tPmxlbmd0aCA9IDEyNjsKKysJcmVnaW9uLT5sZW5ndGggPSAobXRkLT5vb2Jz
aXplIC8gMikgLSAyOworIAorIAlyZXR1cm4gMDsKKyB9CisgCistc3RhdGljIGNvbnN0IHN0cnVj
dCBtdGRfb29ibGF5b3V0X29wcyB0YzU4Y3ZnMnMwaF9vb2JsYXlvdXQgPSB7CistCS5lY2MgPSB0
YzU4Y3ZnMnMwaF9vb2JsYXlvdXRfZWNjLAorLQkuZnJlZSA9IHRjNThjdmcyczBoX29vYmxheW91
dF9mcmVlLAorK3N0YXRpYyBjb25zdCBzdHJ1Y3QgbXRkX29vYmxheW91dF9vcHMgdGM1OGN4Z3hz
eF9vb2JsYXlvdXQgPSB7CisrCS5lY2MgPSB0YzU4Y3hneHN4X29vYmxheW91dF9lY2MsCisrCS5m
cmVlID0gdGM1OGN4Z3hzeF9vb2JsYXlvdXRfZnJlZSwKKyB9OworIAorLXN0YXRpYyBpbnQgdGM1
OGN2ZzJzMGhfZWNjX2dldF9zdGF0dXMoc3RydWN0IHNwaW5hbmRfZGV2aWNlICpzcGluYW5kLAor
K3N0YXRpYyBpbnQgdGM1OGN4Z3hzeF9lY2NfZ2V0X3N0YXR1cyhzdHJ1Y3Qgc3BpbmFuZF9kZXZp
Y2UgKnNwaW5hbmQsCisgCQkJCSAgICAgIHU4IHN0YXR1cykKKyB7CisgCXN0cnVjdCBuYW5kX2Rl
dmljZSAqbmFuZCA9IHNwaW5hbmRfdG9fbmFuZChzcGluYW5kKTsKK0BAIC05NCwxNSArOTQsNjYg
QEAgc3RhdGljIGludCB0YzU4Y3ZnMnMwaF9lY2NfZ2V0X3N0YXR1cyhzdHJ1Y3Qgc3BpbmFuZF9k
ZXZpY2UgKnNwaW5hbmQsCisgfQorIAorIHN0YXRpYyBjb25zdCBzdHJ1Y3Qgc3BpbmFuZF9pbmZv
IHRvc2hpYmFfc3BpbmFuZF90YWJsZVtdID0geworLQlTUElOQU5EX0lORk8oIlRDNThDVkcyUzBI
IiwgMHhDRCwKKysJLyogMy4zViAxR2IgKi8KKysJU1BJTkFORF9JTkZPKCJUQzU4Q1ZHMFMzIiwg
MHhDMiwKKysJCSAgICAgTkFORF9NRU1PUkcoMSwgMjA0OCwgMTI4LCA2NCwgMTAyNCwgMSwgMSwg
MSksCisrCQkgICAgIE5BTkRfRUNDUkVRKDgsIDUxMiksCisrCQkgICAgIFNQSU5BTkRfSU5GT19P
UF9WQVJJQU5UUygmcmVhZF9jYWNoZV92YXJpYW50cywKKysJCQkJCSAgICAgICZ3cml0ZV9jYWNo
ZV92YXJpYW50cywKKysJCQkJCSAgICAgICZ1cGRhdGVfY2FjaGVfdmFyaWFudHMpLAorKwkJICAg
ICAwLAorKwkJICAgICBTUElOQU5EX0VDQ0lORk8oJnRjNThjeGd4c3hfb29ibGF5b3V0LAorKwkJ
CQkgICAgIHRjNThjeGd4c3hfZWNjX2dldF9zdGF0dXMpKSwKKysJLyogMy4zViAyR2IgKi8KKysJ
U1BJTkFORF9JTkZPKCJUQzU4Q1ZHMVMzIiwgMHhDQiwKKysJCSAgICAgTkFORF9NRU1PUkcoMSwg
MjA0OCwgMTI4LCA2NCwgMjA0OCwgMSwgMSwgMSksCisrCQkgICAgIE5BTkRfRUNDUkVRKDgsIDUx
MiksCisrCQkgICAgIFNQSU5BTkRfSU5GT19PUF9WQVJJQU5UUygmcmVhZF9jYWNoZV92YXJpYW50
cywKKysJCQkJCSAgICAgICZ3cml0ZV9jYWNoZV92YXJpYW50cywKKysJCQkJCSAgICAgICZ1cGRh
dGVfY2FjaGVfdmFyaWFudHMpLAorKwkJICAgICAwLAorKwkJICAgICBTUElOQU5EX0VDQ0lORk8o
JnRjNThjeGd4c3hfb29ibGF5b3V0LAorKwkJCQkgICAgIHRjNThjeGd4c3hfZWNjX2dldF9zdGF0
dXMpKSwKKysJLyogMy4zViA0R2IgKi8KKysJU1BJTkFORF9JTkZPKCJUQzU4Q1ZHMlMwIiwgMHhD
RCwKKysJCSAgICAgTkFORF9NRU1PUkcoMSwgNDA5NiwgMjU2LCA2NCwgMjA0OCwgMSwgMSwgMSks
CisrCQkgICAgIE5BTkRfRUNDUkVRKDgsIDUxMiksCisrCQkgICAgIFNQSU5BTkRfSU5GT19PUF9W
QVJJQU5UUygmcmVhZF9jYWNoZV92YXJpYW50cywKKysJCQkJCSAgICAgICZ3cml0ZV9jYWNoZV92
YXJpYW50cywKKysJCQkJCSAgICAgICZ1cGRhdGVfY2FjaGVfdmFyaWFudHMpLAorKwkJICAgICAw
LAorKwkJICAgICBTUElOQU5EX0VDQ0lORk8oJnRjNThjeGd4c3hfb29ibGF5b3V0LAorKwkJCQkg
ICAgIHRjNThjeGd4c3hfZWNjX2dldF9zdGF0dXMpKSwKKysJLyogMS44ViAxR2IgKi8KKysJU1BJ
TkFORF9JTkZPKCJUQzU4Q1lHMFMzIiwgMHhCMiwKKysJCSAgICAgTkFORF9NRU1PUkcoMSwgMjA0
OCwgMTI4LCA2NCwgMTAyNCwgMSwgMSwgMSksCisrCQkgICAgIE5BTkRfRUNDUkVRKDgsIDUxMiks
CisrCQkgICAgIFNQSU5BTkRfSU5GT19PUF9WQVJJQU5UUygmcmVhZF9jYWNoZV92YXJpYW50cywK
KysJCQkJCSAgICAgICZ3cml0ZV9jYWNoZV92YXJpYW50cywKKysJCQkJCSAgICAgICZ1cGRhdGVf
Y2FjaGVfdmFyaWFudHMpLAorKwkJICAgICAwLAorKwkJICAgICBTUElOQU5EX0VDQ0lORk8oJnRj
NThjeGd4c3hfb29ibGF5b3V0LAorKwkJCQkgICAgIHRjNThjeGd4c3hfZWNjX2dldF9zdGF0dXMp
KSwKKysJLyogMS44ViAyR2IgKi8KKysJU1BJTkFORF9JTkZPKCJUQzU4Q1lHMVMzIiwgMHhCQiwK
KysJCSAgICAgTkFORF9NRU1PUkcoMSwgMjA0OCwgMTI4LCA2NCwgMjA0OCwgMSwgMSwgMSksCisr
CQkgICAgIE5BTkRfRUNDUkVRKDgsIDUxMiksCisrCQkgICAgIFNQSU5BTkRfSU5GT19PUF9WQVJJ
QU5UUygmcmVhZF9jYWNoZV92YXJpYW50cywKKysJCQkJCSAgICAgICZ3cml0ZV9jYWNoZV92YXJp
YW50cywKKysJCQkJCSAgICAgICZ1cGRhdGVfY2FjaGVfdmFyaWFudHMpLAorKwkJICAgICAwLAor
KwkJICAgICBTUElOQU5EX0VDQ0lORk8oJnRjNThjeGd4c3hfb29ibGF5b3V0LAorKwkJCQkgICAg
IHRjNThjeGd4c3hfZWNjX2dldF9zdGF0dXMpKSwKKysJLyogMS44ViA0R2IgKi8KKysJU1BJTkFO
RF9JTkZPKCJUQzU4Q1lHMlMwIiwgMHhCRCwKKyAJCSAgICAgTkFORF9NRU1PUkcoMSwgNDA5Niwg
MjU2LCA2NCwgMjA0OCwgMSwgMSwgMSksCisgCQkgICAgIE5BTkRfRUNDUkVRKDgsIDUxMiksCisg
CQkgICAgIFNQSU5BTkRfSU5GT19PUF9WQVJJQU5UUygmcmVhZF9jYWNoZV92YXJpYW50cywKKyAJ
CQkJCSAgICAgICZ3cml0ZV9jYWNoZV92YXJpYW50cywKKyAJCQkJCSAgICAgICZ1cGRhdGVfY2Fj
aGVfdmFyaWFudHMpLAorLQkJICAgICBTUElOQU5EX0hBU19RRV9CSVQsCistCQkgICAgIFNQSU5B
TkRfRUNDSU5GTygmdGM1OGN2ZzJzMGhfb29ibGF5b3V0LAorLQkJCQkgICAgIHRjNThjdmcyczBo
X2VjY19nZXRfc3RhdHVzKSksCisrCQkgICAgIDAsCisrCQkgICAgIFNQSU5BTkRfRUNDSU5GTygm
dGM1OGN4Z3hzeF9vb2JsYXlvdXQsCisrCQkJCSAgICAgdGM1OGN4Z3hzeF9lY2NfZ2V0X3N0YXR1
cykpLAorIH07CisgCisgc3RhdGljIGludCB0b3NoaWJhX3NwaW5hbmRfZGV0ZWN0KHN0cnVjdCBz
cGluYW5kX2RldmljZSAqc3BpbmFuZCkKKy0tIAorMi4yMC4xCisKZGlmZiAtLWdpdCBhL3Rhcmdl
dC9saW51eC9nZW5lcmljL2JhY2twb3J0LTQuMTkvNDUxLXY1LjEtbXRkLXNwaW5hbmQtQWRkLXN1
cHBvcnQtZm9yLUdpZ2FEZXZpY2UtR0Q1RjFHUTRVRXh4Ry5wYXRjaCBiL3RhcmdldC9saW51eC9n
ZW5lcmljL2JhY2twb3J0LTQuMTkvNDI4LXY1LjEtbXRkLXNwaW5hbmQtQWRkLXN1cHBvcnQtZm9y
LUdpZ2FEZXZpY2UtR0Q1RjFHUTRVRXh4Ry5wYXRjaApzaW1pbGFyaXR5IGluZGV4IDg5JQpyZW5h
bWUgZnJvbSB0YXJnZXQvbGludXgvZ2VuZXJpYy9iYWNrcG9ydC00LjE5LzQ1MS12NS4xLW10ZC1z
cGluYW5kLUFkZC1zdXBwb3J0LWZvci1HaWdhRGV2aWNlLUdENUYxR1E0VUV4eEcucGF0Y2gKcmVu
YW1lIHRvIHRhcmdldC9saW51eC9nZW5lcmljL2JhY2twb3J0LTQuMTkvNDI4LXY1LjEtbXRkLXNw
aW5hbmQtQWRkLXN1cHBvcnQtZm9yLUdpZ2FEZXZpY2UtR0Q1RjFHUTRVRXh4Ry5wYXRjaAppbmRl
eCBmNmQ2NzY0NzA3Li4zNmNmYWI2NzFlIDEwMDY0NAotLS0gYS90YXJnZXQvbGludXgvZ2VuZXJp
Yy9iYWNrcG9ydC00LjE5LzQ1MS12NS4xLW10ZC1zcGluYW5kLUFkZC1zdXBwb3J0LWZvci1HaWdh
RGV2aWNlLUdENUYxR1E0VUV4eEcucGF0Y2gKKysrIGIvdGFyZ2V0L2xpbnV4L2dlbmVyaWMvYmFj
a3BvcnQtNC4xOS80MjgtdjUuMS1tdGQtc3BpbmFuZC1BZGQtc3VwcG9ydC1mb3ItR2lnYURldmlj
ZS1HRDVGMUdRNFVFeHhHLnBhdGNoCkBAIC0xLDcgKzEsNyBAQAogRnJvbSBjNDBjN2E5OTBhNDZl
NTEwMmExY2M0MTkwNTU3YmYzMTVkMzJkODBkIE1vbiBTZXAgMTcgMDA6MDA6MDAgMjAwMQogRnJv
bTogU3RlZmFuIFJvZXNlIDxzckBkZW54LmRlPgogRGF0ZTogVGh1LCAyNCBKYW4gMjAxOSAxMzo0
ODowNiArMDEwMAotU3ViamVjdDogW1BBVENIXSBtdGQ6IHNwaW5hbmQ6IEFkZCBzdXBwb3J0IGZv
ciBHaWdhRGV2aWNlIEdENUYxR1E0VUV4eEcKK1N1YmplY3Q6IFtQQVRDSCA4LzhdIG10ZDogc3Bp
bmFuZDogQWRkIHN1cHBvcnQgZm9yIEdpZ2FEZXZpY2UgR0Q1RjFHUTRVRXh4RwogCiBBZGQgc3Vw
cG9ydCBmb3IgR2lnYURldmljZSBHRDVGMUdRNFVFeHhHIFNQSSBOQU5EIGNoaXAuCiAKQEAgLTEz
LDkgKzEzLDExIEBAIENjOiBCb3JpcyBCcmV6aWxsb24gPGJicmV6aWxsb25Aa2VybmVsLm9yZz4K
IFJldmlld2VkLWJ5OiBCb3JpcyBCcmV6aWxsb24gPGJicmV6aWxsb25Aa2VybmVsLm9yZz4KIFNp
Z25lZC1vZmYtYnk6IE1pcXVlbCBSYXluYWwgPG1pcXVlbC5yYXluYWxAYm9vdGxpbi5jb20+CiAt
LS0KLSBkcml2ZXJzL210ZC9uYW5kL3NwaS9naWdhZGV2aWNlLmMgfCA4MyArKysrKysrKysrKysr
KysrKysrKysrKysrKysrKysrKysrKysrKysKKyBkcml2ZXJzL210ZC9uYW5kL3NwaS9naWdhZGV2
aWNlLmMgfCA4MyArKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrCiAgMSBmaWxlIGNoYW5n
ZWQsIDgzIGluc2VydGlvbnMoKykKIAorZGlmZiAtLWdpdCBhL2RyaXZlcnMvbXRkL25hbmQvc3Bp
L2dpZ2FkZXZpY2UuYyBiL2RyaXZlcnMvbXRkL25hbmQvc3BpL2dpZ2FkZXZpY2UuYworaW5kZXgg
ZTQxNDFjMjA5NDdhLi4wYjQ5ZDgyNjRiZWYgMTAwNjQ0CiAtLS0gYS9kcml2ZXJzL210ZC9uYW5k
L3NwaS9naWdhZGV2aWNlLmMKICsrKyBiL2RyaXZlcnMvbXRkL25hbmQvc3BpL2dpZ2FkZXZpY2Uu
YwogQEAgLTEyLDYgKzEyLDggQEAKQEAgLTI3LDcgKzI5LDcgQEAgU2lnbmVkLW9mZi1ieTogTWlx
dWVsIFJheW5hbCA8bWlxdWVsLnJheW5hbEBib290bGluLmNvbT4KICBzdGF0aWMgU1BJTkFORF9P
UF9WQVJJQU5UUyhyZWFkX2NhY2hlX3ZhcmlhbnRzLAogIAkJU1BJTkFORF9QQUdFX1JFQURfRlJP
TV9DQUNIRV9RVUFESU9fT1AoMCwgMiwgTlVMTCwgMCksCiAgCQlTUElOQU5EX1BBR0VfUkVBRF9G
Uk9NX0NBQ0hFX1g0X09QKDAsIDEsIE5VTEwsIDApLAotQEAgLTgxLDExICs4Myw4MyBAQCBzdGF0
aWMgaW50IGdkNWZ4Z3E0eGFfZWNjX2dldF9zdGF0dXMoc3RyCitAQCAtODEsMTEgKzgzLDgzIEBA
IHN0YXRpYyBpbnQgZ2Q1ZnhncTR4YV9lY2NfZ2V0X3N0YXR1cyhzdHJ1Y3Qgc3BpbmFuZF9kZXZp
Y2UgKnNwaW5hbmQsCiAgCXJldHVybiAtRUlOVkFMOwogIH0KICAKQEAgLTExMSw3ICsxMTMsNyBA
QCBTaWduZWQtb2ZmLWJ5OiBNaXF1ZWwgUmF5bmFsIDxtaXF1ZWwucmF5bmFsQGJvb3RsaW4uY29t
PgogIHN0YXRpYyBjb25zdCBzdHJ1Y3Qgc3BpbmFuZF9pbmZvIGdpZ2FkZXZpY2Vfc3BpbmFuZF90
YWJsZVtdID0gewogIAlTUElOQU5EX0lORk8oIkdENUYxR1E0eEEiLCAweEYxLAogIAkJICAgICBO
QU5EX01FTU9SRygxLCAyMDQ4LCA2NCwgNjQsIDEwMjQsIDEsIDEsIDEpLAotQEAgLTExNCw2ICsx
ODgsMTUgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBzcGluYW5kX2luZm8gZ2lnYWRldgorQEAgLTEx
NCw2ICsxODgsMTUgQEAgc3RhdGljIGNvbnN0IHN0cnVjdCBzcGluYW5kX2luZm8gZ2lnYWRldmlj
ZV9zcGluYW5kX3RhYmxlW10gPSB7CiAgCQkgICAgIDAsCiAgCQkgICAgIFNQSU5BTkRfRUNDSU5G
TygmZ2Q1ZnhncTR4YV9vb2JsYXlvdXQsCiAgCQkJCSAgICAgZ2Q1ZnhncTR4YV9lY2NfZ2V0X3N0
YXR1cykpLApAQCAtMTI3LDMgKzEyOSw2IEBAIFNpZ25lZC1vZmYtYnk6IE1pcXVlbCBSYXluYWwg
PG1pcXVlbC5yYXluYWxAYm9vdGxpbi5jb20+CiAgfTsKICAKICBzdGF0aWMgaW50IGdpZ2FkZXZp
Y2Vfc3BpbmFuZF9kZXRlY3Qoc3RydWN0IHNwaW5hbmRfZGV2aWNlICpzcGluYW5kKQorLS0gCisy
LjIwLjEKKwotLSAKMi4yMC4xCgoKX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX18Kb3BlbndydC1kZXZlbCBtYWlsaW5nIGxpc3QKb3BlbndydC1kZXZlbEBsaXN0
cy5vcGVud3J0Lm9yZwpodHRwczovL2xpc3RzLm9wZW53cnQub3JnL21haWxtYW4vbGlzdGluZm8v
b3BlbndydC1kZXZlbAo=
